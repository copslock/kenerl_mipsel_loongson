Received: with ECARTIS (v1.0.0; list linux-mips); Mon, 25 Sep 2006 23:51:11 +0100 (BST)
Received: from mail.windriver.com ([147.11.1.11]:21726 "EHLO mail.wrs.com")
	by ftp.linux-mips.org with ESMTP id S20038943AbWIYWvJ (ORCPT
	<rfc822;linux-mips@linux-mips.org>); Mon, 25 Sep 2006 23:51:09 +0100
Received: from ALA-MAIL03.corp.ad.wrs.com (ala-mail03 [147.11.57.144])
	by mail.wrs.com (8.13.6/8.13.3) with ESMTP id k8PMp2U7003621;
	Mon, 25 Sep 2006 15:51:02 -0700 (PDT)
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----_=_NextPart_001_01C6E0F4.F7DE01E5"
Subject: Performance enhancement patches for SB1250 MAC
Date:	Mon, 25 Sep 2006 15:50:06 -0700
Message-ID: <D9055C0A0A86BD4E89AD96A89EA767DB933360@ALA-MAIL03.corp.ad.wrs.com>
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
Thread-Topic: Performance enhancement patches for SB1250 MAC
Thread-Index: Acbg9PJNgrBx0h/2QbasUlO5b0n5Ig==
From:	"Yang, Steve" <steve.yang@windriver.com>
To:	<linux-mips@linux-mips.org>
Cc:	<ralf@linux-mips.org>, "Mark E Mason" <mark.e.mason@broadcom.com>
Return-Path: <steve.yang@windriver.com>
X-Envelope-To: <"|/home/ecartis/ecartis -s linux-mips"> (uid 0)
X-Orcpt: rfc822;linux-mips@linux-mips.org
Original-Recipient: rfc822;linux-mips@linux-mips.org
X-archive-position: 12662
X-ecartis-version: Ecartis v1.0.0
Sender: linux-mips-bounce@linux-mips.org
Errors-to: linux-mips-bounce@linux-mips.org
X-original-sender: steve.yang@windriver.com
Precedence: bulk
X-list: linux-mips

This is a multi-part message in MIME format.

------_=_NextPart_001_01C6E0F4.F7DE01E5
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

Hi,

The attached are two network performance enhancement patches for SB1250
MAC. The NAPI patch applies first. Followed by the "skb cache" patch.
They applied and builds cleanly on 2.6.18 kernel for the following
kernel option combinations:

SBMAC_NAPI	no	yes	yes
SKB_CACHE	no	no	yes
=20
Regards,=20
Steve Yang


------_=_NextPart_001_01C6E0F4.F7DE01E5
Content-Type: application/octet-stream;
	name="mips-sb1250-mac-NAPI.patch"
Content-Transfer-Encoding: base64
Content-Description: mips-sb1250-mac-NAPI.patch
Content-Disposition: attachment;
	filename="mips-sb1250-mac-NAPI.patch"

ICBUaGlzIHBhdGNoIGNvbXBsZXRlcyB0aGUgTkFQSSBmdW5jdGlvbmFsaXR5IGZvciBTQjEyNTAg
TUFDLCBpbmNsdWRpbmcgbWFraW5nCiAgTkFQSSBhIGtlcm5lbCBvcHRpb24gdGhhdCBjYW4gYmUg
dHVybmVkIG9uIG9yIG9mZiBhbmQgYWRkcyB0aGUgInNibWFjX3BvbGwiCiAgcm91dGluZS4KICAg
IFNpZ25lZCBvZmYgYnk6IERhbiBLcmVqc2EgKGRhbi5rcmVqc2FAd2luZHJpdmVyLmNvbSkKICAg
IFNpZ25lZCBvZmYgYnk6IFN0ZXZlIFlhbmcgKHN0ZXZlLnlhbmdAd2luZHJpdmVyLmNvbSkKSW5k
ZXg6IGxpbnV4LTIuNi4xNC1jZ2wvZHJpdmVycy9uZXQvS2NvbmZpZwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBs
aW51eC0yLjYuMTQtY2dsLm9yaWcvZHJpdmVycy9uZXQvS2NvbmZpZwkyMDA2LTA5LTIwIDE0OjU4
OjU0LjAwMDAwMDAwMCAtMDcwMAorKysgbGludXgtMi42LjE0LWNnbC9kcml2ZXJzL25ldC9LY29u
ZmlnCTIwMDYtMDktMjAgMTc6MDQ6MzEuMDAwMDAwMDAwIC0wNzAwCkBAIC0yMDMxLDYgKzIwMzEs
MjMgQEAKIAl0cmlzdGF0ZSAiU0IxMjUwIEV0aGVybmV0IHN1cHBvcnQiCiAJZGVwZW5kcyBvbiBT
SUJZVEVfU0IxeHh4X1NPQwogCitjb25maWcgU0JNQUNfTkFQSQorCWJvb2wgIlNCTUFDOiBVc2Ug
UnggUG9sbGluZyAoTkFQSSkgKEVYUEVSSU1FTlRBTCkiCisJZGVwZW5kcyBvbiBORVRfU0IxMjUw
X01BQyAmJiBFWFBFUklNRU5UQUwKKwloZWxwCisJICBOQVBJIGlzIGEgbmV3IGRyaXZlciBBUEkg
ZGVzaWduZWQgdG8gcmVkdWNlIENQVSBhbmQgaW50ZXJydXB0IGxvYWQKKwkgIHdoZW4gdGhlIGRy
aXZlciBpcyByZWNlaXZpbmcgbG90cyBvZiBwYWNrZXRzIGZyb20gdGhlIGNhcmQuIEl0IGlzCisJ
ICBzdGlsbCBzb21ld2hhdCBleHBlcmltZW50YWwgYW5kIHRodXMgbm90IHlldCBlbmFibGVkIGJ5
IGRlZmF1bHQuCisKKwkgIElmIHlvdXIgZXN0aW1hdGVkIFJ4IGxvYWQgaXMgMTBrcHBzIG9yIG1v
cmUsIG9yIGlmIHRoZSBjYXJkIHdpbGwgYmUKKwkgIGRlcGxveWVkIG9uIHBvdGVudGlhbGx5IHVu
ZnJpZW5kbHkgbmV0d29ya3MgKGUuZy4gaW4gYSBmaXJld2FsbCksCisJICB0aGVuIHNheSBZIGhl
cmUuCisKKwkgIFNlZSA8ZmlsZTpEb2N1bWVudGF0aW9uL25ldHdvcmtpbmcvTkFQSV9IT1dUTy50
eHQ+IGZvciBtb3JlCisJICBpbmZvcm1hdGlvbi4KKworCSAgSWYgaW4gZG91YnQsIHNheSB5Lgor
CiBjb25maWcgUjgxNjlfVkxBTgogCWJvb2wgIlZMQU4gc3VwcG9ydCIKIAlkZXBlbmRzIG9uIFI4
MTY5ICYmIFZMQU5fODAyMVEKQEAgLTI4MjYsMyArMjg0Myw1IEBACiAJZGVmX2Jvb2wgTkVUUE9M
TAogCiBlbmRtZW51CisKKwpJbmRleDogbGludXgtMi42LjE0LWNnbC9kcml2ZXJzL25ldC9zYjEy
NTAtbWFjLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQotLS0gbGludXgtMi42LjE0LWNnbC5vcmlnL2RyaXZlcnMvbmV0
L3NiMTI1MC1tYWMuYwkyMDA2LTA5LTIwIDE0OjU5OjAwLjAwMDAwMDAwMCAtMDcwMAorKysgbGlu
dXgtMi42LjE0LWNnbC9kcml2ZXJzL25ldC9zYjEyNTAtbWFjLmMJMjAwNi0wOS0yMCAyMDoxNjoy
Ny4wMDAwMDAwMDAgLTA3MDAKQEAgLTk1LDE5ICs5NSwyOCBAQAogI2VuZGlmCiAKICNpZmRlZiBD
T05GSUdfU0JNQUNfQ09BTEVTQ0UKLXN0YXRpYyBpbnQgaW50X3BrdGNudCA9IDA7Ci1tb2R1bGVf
cGFyYW0oaW50X3BrdGNudCwgaW50LCBTX0lSVUdPKTsKLU1PRFVMRV9QQVJNX0RFU0MoaW50X3Br
dGNudCwgIlBhY2tldCBjb3VudCIpOwotCi1zdGF0aWMgaW50IGludF90aW1lb3V0ID0gMDsKLW1v
ZHVsZV9wYXJhbShpbnRfdGltZW91dCwgaW50LCBTX0lSVUdPKTsKLU1PRFVMRV9QQVJNX0RFU0Mo
aW50X3RpbWVvdXQsICJUaW1lb3V0IHZhbHVlIik7CitzdGF0aWMgaW50IGludF9wa3RjbnRfdHgg
PSAyNTU7Cittb2R1bGVfcGFyYW0oaW50X3BrdGNudF90eCwgaW50LCBTX0lSVUdPKTsKK01PRFVM
RV9QQVJNX0RFU0MoaW50X3BrdGNudF90eCwgIlRYIHBhY2tldCBjb3VudCIpOworCitzdGF0aWMg
aW50IGludF90aW1lb3V0X3R4ID0gMjU1OworbW9kdWxlX3BhcmFtKGludF90aW1lb3V0X3R4LCBp
bnQsIFNfSVJVR08pOworTU9EVUxFX1BBUk1fREVTQyhpbnRfdGltZW91dF90eCwgIlRYIHRpbWVv
dXQgdmFsdWUiKTsKKworc3RhdGljIGludCBpbnRfcGt0Y250X3J4ID0gNjQ7Cittb2R1bGVfcGFy
YW0oaW50X3BrdGNudF9yeCwgaW50LCBTX0lSVUdPKTsKK01PRFVMRV9QQVJNX0RFU0MoaW50X3Br
dGNudF9yeCwgIlJYIHBhY2tldCBjb3VudCIpOworCitzdGF0aWMgaW50IGludF90aW1lb3V0X3J4
ID0gNjQ7Cittb2R1bGVfcGFyYW0oaW50X3RpbWVvdXRfcngsIGludCwgU19JUlVHTyk7CitNT0RV
TEVfUEFSTV9ERVNDKGludF90aW1lb3V0X3J4LCAiUlggdGltZW91dCB2YWx1ZSIpOwogI2VuZGlm
CiAKICNpbmNsdWRlIDxhc20vc2lieXRlL3NiMTI1MC5oPgogI2lmIGRlZmluZWQoQ09ORklHX1NJ
QllURV9CQ00xeDU1KSB8fCBkZWZpbmVkKENPTkZJR19TSUJZVEVfQkNNMXg4MCkKICNpbmNsdWRl
IDxhc20vc2lieXRlL2JjbTE0ODBfcmVncy5oPgogI2luY2x1ZGUgPGFzbS9zaWJ5dGUvYmNtMTQ4
MF9pbnQuaD4KKyNkZWZpbmUgUl9NQUNfRE1BX09PRFBLVExPU1RfUlgJUl9NQUNfRE1BX09PRFBL
VExPU1QKICNlbGlmIGRlZmluZWQoQ09ORklHX1NJQllURV9TQjEyNTApIHx8IGRlZmluZWQoQ09O
RklHX1NJQllURV9CQ00xMTJYKQogI2luY2x1ZGUgPGFzbS9zaWJ5dGUvc2IxMjUwX3JlZ3MuaD4K
ICNpbmNsdWRlIDxhc20vc2lieXRlL3NiMTI1MF9pbnQuaD4KQEAgLTE1NSw4ICsxNjQsOCBAQAog
CiAjZGVmaW5lIE5VTUNBQ0hFQkxLUyh4KSAoKCh4KStTTVBfQ0FDSEVfQllURVMtMSkvU01QX0NB
Q0hFX0JZVEVTKQogCi0jZGVmaW5lIFNCTUFDX01BWF9UWERFU0NSCTMyCi0jZGVmaW5lIFNCTUFD
X01BWF9SWERFU0NSCTMyCisjZGVmaW5lIFNCTUFDX01BWF9UWERFU0NSCTI1NgorI2RlZmluZSBT
Qk1BQ19NQVhfUlhERVNDUgkyNTYKIAogI2RlZmluZSBFVEhFUl9BTElHTgkyCiAjZGVmaW5lIEVU
SEVSX0FERFJfTEVOCTYKQEAgLTE4NSwxMCArMTk0LDEwIEBACiAJICogYXNzb2NpYXRlZCB3aXRo
IGl0LgogCSAqLwogCi0Jc3RydWN0IHNibWFjX3NvZnRjICpzYmRtYV9ldGg7CSAgICAgICAgLyog
YmFjayBwb2ludGVyIHRvIGFzc29jaWF0ZWQgTUFDICovCi0JaW50ICAgICAgICAgICAgICBzYmRt
YV9jaGFubmVsOwkvKiBjaGFubmVsIG51bWJlciAqLworCXN0cnVjdCBzYm1hY19zb2Z0YyAqc2Jk
bWFfZXRoOwkgICAgLyogYmFjayBwb2ludGVyIHRvIGFzc29jaWF0ZWQgTUFDICovCisJaW50ICAg
ICAgICAgICAgICBzYmRtYV9jaGFubmVsOwkgICAgLyogY2hhbm5lbCBudW1iZXIgKi8KIAlpbnQJ
CSBzYmRtYV90eGRpcjsgICAgICAgLyogZGlyZWN0aW9uICgxPXRyYW5zbWl0KSAqLwotCWludAkJ
IHNiZG1hX21heGRlc2NyOwkvKiB0b3RhbCAjIG9mIGRlc2NyaXB0b3JzIGluIHJpbmcgKi8KKwlp
bnQJCSBzYmRtYV9tYXhkZXNjcjsgICAgLyogdG90YWwgIyBvZiBkZXNjcmlwdG9ycyBpbiByaW5n
ICovCiAjaWZkZWYgQ09ORklHX1NCTUFDX0NPQUxFU0NFCiAJaW50CQkgc2JkbWFfaW50X3BrdGNu
dDsgIC8qICMgZGVzY3JpcHRvcnMgcngvdHggYmVmb3JlIGludGVycnVwdCovCiAJaW50CQkgc2Jk
bWFfaW50X3RpbWVvdXQ7IC8qICMgdXNlYyByeC90eCBpbnRlcnJ1cHQgKi8KQEAgLTE5NywxMyAr
MjA2LDE2IEBACiAJdm9sYXRpbGUgdm9pZCBfX2lvbWVtICpzYmRtYV9jb25maWcwOwkvKiBETUEg
Y29uZmlnIHJlZ2lzdGVyIDAgKi8KIAl2b2xhdGlsZSB2b2lkIF9faW9tZW0gKnNiZG1hX2NvbmZp
ZzE7CS8qIERNQSBjb25maWcgcmVnaXN0ZXIgMSAqLwogCXZvbGF0aWxlIHZvaWQgX19pb21lbSAq
c2JkbWFfZHNjcmJhc2U7CS8qIERlc2NyaXB0b3IgYmFzZSBhZGRyZXNzICovCi0Jdm9sYXRpbGUg
dm9pZCBfX2lvbWVtICpzYmRtYV9kc2NyY250OyAgICAgLyogRGVzY3JpcHRvciBjb3VudCByZWdp
c3RlciAqLworCXZvbGF0aWxlIHZvaWQgX19pb21lbSAqc2JkbWFfZHNjcmNudDsgICAvKiBEZXNj
cmlwdG9yIGNvdW50IHJlZ2lzdGVyICovCiAJdm9sYXRpbGUgdm9pZCBfX2lvbWVtICpzYmRtYV9j
dXJkc2NyOwkvKiBjdXJyZW50IGRlc2NyaXB0b3IgYWRkcmVzcyAqLworCXZvbGF0aWxlIHZvaWQg
X19pb21lbSAqc2JkbWFfb29kcGt0bG9zdDsvKiBwa3QgZHJvcCAocnggb25seSkgKi8KKwogCiAJ
LyoKIAkgKiBUaGlzIHN0dWZmIGlzIGZvciBtYWludGVuYW5jZSBvZiB0aGUgcmluZwogCSAqLwog
CisJc2JkbWFkc2NyX3QgICAgICpzYmRtYV9kc2NydGFibGVfdW5hbGlnbmVkOwogCXNiZG1hZHNj
cl90ICAgICAqc2JkbWFfZHNjcnRhYmxlOwkvKiBiYXNlIG9mIGRlc2NyaXB0b3IgdGFibGUgKi8K
IAlzYmRtYWRzY3JfdCAgICAgKnNiZG1hX2RzY3J0YWJsZV9lbmQ7IC8qIGVuZCBvZiBkZXNjcmlw
dG9yIHRhYmxlICovCiAKQEAgLTI4Niw4ICsyOTgsOCBAQAogc3RhdGljIGludCBzYmRtYV9hZGRf
dHhidWZmZXIoc2JtYWNkbWFfdCAqZCxzdHJ1Y3Qgc2tfYnVmZiAqbSk7CiBzdGF0aWMgdm9pZCBz
YmRtYV9lbXB0eXJpbmcoc2JtYWNkbWFfdCAqZCk7CiBzdGF0aWMgdm9pZCBzYmRtYV9maWxscmlu
ZyhzYm1hY2RtYV90ICpkKTsKLXN0YXRpYyB2b2lkIHNiZG1hX3J4X3Byb2Nlc3Moc3RydWN0IHNi
bWFjX3NvZnRjICpzYyxzYm1hY2RtYV90ICpkKTsKLXN0YXRpYyB2b2lkIHNiZG1hX3R4X3Byb2Nl
c3Moc3RydWN0IHNibWFjX3NvZnRjICpzYyxzYm1hY2RtYV90ICpkKTsKK3N0YXRpYyBpbnQgc2Jk
bWFfcnhfcHJvY2VzcyhzdHJ1Y3Qgc2JtYWNfc29mdGMgKnNjLHNibWFjZG1hX3QgKmQsIGludCB3
b3JrX3RvX2RvLCBpbnQgcG9sbCk7CitzdGF0aWMgdm9pZCBzYmRtYV90eF9wcm9jZXNzKHN0cnVj
dCBzYm1hY19zb2Z0YyAqc2Msc2JtYWNkbWFfdCAqZCwgaW50IHBvbGwpOwogc3RhdGljIGludCBz
Ym1hY19pbml0Y3R4KHN0cnVjdCBzYm1hY19zb2Z0YyAqcyk7CiBzdGF0aWMgdm9pZCBzYm1hY19j
aGFubmVsX3N0YXJ0KHN0cnVjdCBzYm1hY19zb2Z0YyAqcyk7CiBzdGF0aWMgdm9pZCBzYm1hY19j
aGFubmVsX3N0b3Aoc3RydWN0IHNibWFjX3NvZnRjICpzKTsKQEAgLTMwOCw2ICszMjAsMTAgQEAK
IHN0YXRpYyB2b2lkIHNibWFjX3NldF9yeF9tb2RlKHN0cnVjdCBuZXRfZGV2aWNlICpkZXYpOwog
c3RhdGljIGludCBzYm1hY19taWlfaW9jdGwoc3RydWN0IG5ldF9kZXZpY2UgKmRldiwgc3RydWN0
IGlmcmVxICpycSwgaW50IGNtZCk7CiBzdGF0aWMgaW50IHNibWFjX2Nsb3NlKHN0cnVjdCBuZXRf
ZGV2aWNlICpkZXYpOworI2lmZGVmIENPTkZJR19TQk1BQ19OQVBJCitzdGF0aWMgaW50IHNibWFj
X3BvbGwoc3RydWN0IG5ldF9kZXZpY2UgKnBvbGxfZGV2LCBpbnQgKmJ1ZGdldCk7CisjZW5kaWYK
Kwogc3RhdGljIGludCBzYm1hY19taWlfcG9sbChzdHJ1Y3Qgc2JtYWNfc29mdGMgKnMsaW50IG5v
aXN5KTsKIHN0YXRpYyBpbnQgc2JtYWNfbWlpX3Byb2JlKHN0cnVjdCBuZXRfZGV2aWNlICpkZXYp
OwogCkBAIC02NzksNiArNjk1LDEwIEBACiAJCQkgIGludCB0eHJ4LAogCQkJICBpbnQgbWF4ZGVz
Y3IpCiB7CisjaWZkZWYgQ09ORklHX1NCTUFDX0NPQUxFU0NFCisJaW50IGludF9wa3RjbnQsIGlu
dF90aW1lb3V0OworI2VuZGlmCisKIAkvKgogCSAqIFNhdmUgYXdheSBpbnRlcmVzdGluZyBzdHVm
ZiBpbiB0aGUgc3RydWN0dXJlCiAJICovCkBAIC03MjgsNiArNzQ4LDExIEBACiAJCXMtPnNibV9i
YXNlICsgUl9NQUNfRE1BX1JFR0lTVEVSKHR4cngsY2hhbixSX01BQ19ETUFfRFNDUl9DTlQpOwog
CWQtPnNiZG1hX2N1cmRzY3IgPQogCQlzLT5zYm1fYmFzZSArIFJfTUFDX0RNQV9SRUdJU1RFUih0
eHJ4LGNoYW4sUl9NQUNfRE1BX0NVUl9EU0NSQUREUik7CisJaWYgKGQtPnNiZG1hX3R4ZGlyKQor
CQlkLT5zYmRtYV9vb2Rwa3Rsb3N0ID0gTlVMTDsKKwllbHNlCisJCWQtPnNiZG1hX29vZHBrdGxv
c3QgPQorCQkJcy0+c2JtX2Jhc2UgKyBSX01BQ19ETUFfUkVHSVNURVIodHhyeCxjaGFuLFJfTUFD
X0RNQV9PT0RQS1RMT1NUX1JYKTsKIAogCS8qCiAJICogQWxsb2NhdGUgbWVtb3J5IGZvciB0aGUg
cmluZwpAQCAtNzM1LDYgKzc2MCw3IEBACiAKIAlkLT5zYmRtYV9tYXhkZXNjciA9IG1heGRlc2Ny
OwogCisJZC0+c2JkbWFfZHNjcnRhYmxlX3VuYWxpZ25lZCA9CiAJZC0+c2JkbWFfZHNjcnRhYmxl
ID0gKHNiZG1hZHNjcl90ICopCiAJCWttYWxsb2MoKGQtPnNiZG1hX21heGRlc2NyKzEpKnNpemVv
ZihzYmRtYWRzY3JfdCksIEdGUF9LRVJORUwpOwogCkBAIC03NjUsMTIgKzc5MSwxNCBAQAogCSAq
IFNldHVwIFJ4L1R4IERNQSBjb2FsZXNjaW5nIGRlZmF1bHRzCiAJICovCiAKKwlpbnRfcGt0Y250
ID0gKHR4cnggPT0gRE1BX1RYKSA/IGludF9wa3RjbnRfdHggOiBpbnRfcGt0Y250X3J4OwogCWlm
ICggaW50X3BrdGNudCApIHsKIAkJZC0+c2JkbWFfaW50X3BrdGNudCA9IGludF9wa3RjbnQ7CiAJ
fSBlbHNlIHsKIAkJZC0+c2JkbWFfaW50X3BrdGNudCA9IDE7CiAJfQogCisJaW50X3RpbWVvdXQg
PSAodHhyeCA9PSBETUFfVFgpID8gaW50X3RpbWVvdXRfdHggOiBpbnRfdGltZW91dF9yeDsKIAlp
ZiAoIGludF90aW1lb3V0ICkgewogCQlkLT5zYmRtYV9pbnRfdGltZW91dCA9IGludF90aW1lb3V0
OwogCX0gZWxzZSB7CkBAIC0xMTMwLDMwICsxMTU4LDQxIEBACiAKIAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqICBTQkRNQV9SWF9QUk9DRVNTKHNjLGQpCisgKiAgU0JETUFfUlhfUFJPQ0VTUyhzYyxkLHdv
cmtfdG9fZG8scG9sbCkKICAqCiAgKiAgUHJvY2VzcyAiY29tcGxldGVkIiByZWNlaXZlIGJ1ZmZl
cnMgb24gdGhlIHNwZWNpZmllZCBETUEgY2hhbm5lbC4KLSAqICBOb3RlIHRoYXQgdGhpcyBpc24n
dCByZWFsbHkgaWRlYWwgZm9yIHByaW9yaXR5IGNoYW5uZWxzLCBzaW5jZQotICogIGl0IHByb2Nl
c3NlcyBhbGwgb2YgdGhlIHBhY2tldHMgb24gYSBnaXZlbiBjaGFubmVsIGJlZm9yZQotICogIHJl
dHVybmluZy4KICAqCiAgKiAgSW5wdXQgcGFyYW1ldGVyczoKLSAqCSAgIHNjIC0gc29mdGMgc3Ry
dWN0dXJlCi0gKiAgCSAgIGQgLSBETUEgY2hhbm5lbCBjb250ZXh0CisgKiAgICAgICAgICAgIHNj
IC0gc29mdGMgc3RydWN0dXJlCisgKiAgCSAgICAgICBkIC0gRE1BIGNoYW5uZWwgY29udGV4dAor
ICogICAgd29ya190b19kbyAtIG5vLiBvZiBwYWNrZXRzIHRvIHByb2Nlc3MgYmVmb3JlIGVuYWJs
aW5nIGludGVycnVwdCAKKyAqICAgICAgICAgICAgICAgICBhZ2FpbiAoZm9yIE5BUEkpCisgKiAg
ICAgICAgICBwb2xsIC0gMTogdXNpbmcgcG9sbGluZyAoZm9yIE5BUEkpCiAgKgogICogIFJldHVy
biB2YWx1ZToKICAqICAJICAgbm90aGluZwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwogCi1zdGF0aWMgdm9p
ZCBzYmRtYV9yeF9wcm9jZXNzKHN0cnVjdCBzYm1hY19zb2Z0YyAqc2Msc2JtYWNkbWFfdCAqZCkK
K3N0YXRpYyBpbnQgc2JkbWFfcnhfcHJvY2VzcyhzdHJ1Y3Qgc2JtYWNfc29mdGMgKnNjLHNibWFj
ZG1hX3QgKmQsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludCB3b3JrX3RvX2RvLCBp
bnQgcG9sbCkKIHsKIAlpbnQgY3VyaWR4OwogCWludCBod2lkeDsKIAlzYmRtYWRzY3JfdCAqZHNj
OwogCXN0cnVjdCBza19idWZmICpzYjsKIAlpbnQgbGVuOworCWludCB3b3JrX2RvbmUgPSAwOwor
CWludCBkcm9wcGVkID0gMDsKIAotCWZvciAoOzspIHsKKwlwcmVmZXRjaChkKTsKKyAgCithZ2Fp
bjoKKwkvKiBDaGVjayBpZiB0aGUgSFcgZHJvcHBlZCBhbnkgZnJhbWVzICovCisJc2MtPnNibV9z
dGF0cy5yeF9maWZvX2Vycm9ycworCSAgICArPSBfX3Jhd19yZWFkcShzYy0+c2JtX3J4ZG1hLnNi
ZG1hX29vZHBrdGxvc3QpICYgMHhmZmZmOworCV9fcmF3X3dyaXRlcSgwLCBzYy0+c2JtX3J4ZG1h
LnNiZG1hX29vZHBrdGxvc3QpOworICAJCisJd2hpbGUgKHdvcmtfdG9fZG8tLSA+IDApIHsKIAkJ
LyoKIAkJICogZmlndXJlIG91dCB3aGVyZSB3ZSBhcmUgKGFzIGFuIGluZGV4KSBhbmQgd2hlcmUK
IAkJICogdGhlIGhhcmR3YXJlIGlzIChhbHNvIGFzIGFuIGluZGV4KQpAQCAtMTE2NSw3ICsxMjA0
LDEyIEBACiAJCSAqIChzYmRtYV9yZW1wdHIpIGFuZCB0aGUgcGh5c2ljYWwgYWRkcmVzcyAoc2Jk
bWFfY3VyZHNjciBDU1IpCiAJCSAqLwogCi0JCWN1cmlkeCA9IGQtPnNiZG1hX3JlbXB0ciAtIGQt
PnNiZG1hX2RzY3J0YWJsZTsKKwkJZHNjID0gZC0+c2JkbWFfcmVtcHRyOworCQljdXJpZHggPSBk
c2MgLSBkLT5zYmRtYV9kc2NydGFibGU7CisKKwkJcHJlZmV0Y2goZHNjKTsKKwkJcHJlZmV0Y2go
JmQtPnNiZG1hX2N0eHRhYmxlW2N1cmlkeF0pOworCiAJCWh3aWR4ID0gKGludCkgKCgoX19yYXdf
cmVhZHEoZC0+c2JkbWFfY3VyZHNjcikgJiBNX0RNQV9DVVJEU0NSX0FERFIpIC0KIAkJCQlkLT5z
YmRtYV9kc2NydGFibGVfcGh5cykgLyBzaXplb2Yoc2JkbWFkc2NyX3QpKTsKIApAQCAtMTE3Niwx
MyArMTIyMCwxMiBAQAogCQkgKi8KIAogCQlpZiAoY3VyaWR4ID09IGh3aWR4KQotCQkJYnJlYWs7
CisJCQlnb3RvIGRvbmU7CiAKIAkJLyoKIAkJICogT3RoZXJ3aXNlLCBnZXQgdGhlIHBhY2tldCdz
IHNrX2J1ZmYgcHRyIGJhY2sKIAkJICovCiAKLQkJZHNjID0gJihkLT5zYmRtYV9kc2NydGFibGVb
Y3VyaWR4XSk7CiAJCXNiID0gZC0+c2JkbWFfY3R4dGFibGVbY3VyaWR4XTsKIAkJZC0+c2JkbWFf
Y3R4dGFibGVbY3VyaWR4XSA9IE5VTEw7CiAKQEAgLTExOTQsMTcgKzEyMzcsMjIgQEAKIAkJICog
cmVjZWl2ZSByaW5nLgogCQkgKi8KIAotCQlpZiAoIShkc2MtPmRzY3JfYSAmIE1fRE1BX0VUSFJY
X0JBRCkpIHsKLQorCQlpZiAobGlrZWx5ICghKGRzYy0+ZHNjcl9hICYgTV9ETUFfRVRIUlhfQkFE
KSkpIHsKKyAKIAkJCS8qCiAJCQkgKiBBZGQgYSBuZXcgYnVmZmVyIHRvIHJlcGxhY2UgdGhlIG9s
ZCBvbmUuICBJZiB3ZSBmYWlsCiAJCQkgKiB0byBhbGxvY2F0ZSBhIGJ1ZmZlciwgd2UncmUgZ29p
bmcgdG8gZHJvcCB0aGlzCiAJCQkgKiBwYWNrZXQgYW5kIHB1dCBpdCByaWdodCBiYWNrIG9uIHRo
ZSByZWNlaXZlIHJpbmcuCiAJCQkgKi8KIAotCQkJaWYgKHNiZG1hX2FkZF9yY3ZidWZmZXIoZCxO
VUxMKSA9PSAtRU5PQlVGUykgewotCQkJCXNjLT5zYm1fc3RhdHMucnhfZHJvcHBlZCsrOworCQkJ
aWYgKHVubGlrZWx5IChzYmRtYV9hZGRfcmN2YnVmZmVyKGQsTlVMTCkgPT0gCisJCQkJICAgICAg
LUVOT0JVRlMpKSB7CisgCQkJCXNjLT5zYm1fc3RhdHMucnhfZHJvcHBlZCsrOwogCQkJCXNiZG1h
X2FkZF9yY3ZidWZmZXIoZCxzYik7IC8qIHJlLWFkZCBvbGQgYnVmZmVyICovCisJCQkJLyogTm8g
cG9pbnQgaW4gY29udGludWluZyBhdCB0aGUgbW9tZW50ICovCisJCQkJcHJpbnRrKEtFUk5fRVJS
ICJkcm9wcGVkIHBhY2tldCAoMSlcbiIpOworCQkJCWQtPnNiZG1hX3JlbXB0ciA9IFNCRE1BX05F
WFRCVUYoZCxzYmRtYV9yZW1wdHIpOworCQkJCWdvdG8gZG9uZTsKIAkJCX0gZWxzZSB7CiAJCQkJ
LyoKIAkJCQkgKiBTZXQgbGVuZ3RoIGludG8gdGhlIHBhY2tldApAQCAtMTIxNiw4ICsxMjY0LDYg
QEAKIAkJCQkgKiByZWNlaXZlIHJpbmcuICBQYXNzIHRoZSBidWZmZXIgdG8KIAkJCQkgKiB0aGUg
a2VybmVsCiAJCQkJICovCi0JCQkJc2MtPnNibV9zdGF0cy5yeF9ieXRlcyArPSBsZW47Ci0JCQkJ
c2MtPnNibV9zdGF0cy5yeF9wYWNrZXRzKys7CiAJCQkJc2ItPnByb3RvY29sID0gZXRoX3R5cGVf
dHJhbnMoc2IsZC0+c2JkbWFfZXRoLT5zYm1fZGV2KTsKIAkJCQkvKiBDaGVjayBodyBJUHY0L1RD
UCBjaGVja3N1bSBpZiBzdXBwb3J0ZWQgKi8KIAkJCQlpZiAoc2MtPnJ4X2h3X2NoZWNrc3VtID09
IEVOQUJMRSkgewpAQCAtMTIyOSw4ICsxMjc1LDI0IEBACiAJCQkJCQlzYi0+aXBfc3VtbWVkID0g
Q0hFQ0tTVU1fTk9ORTsKIAkJCQkJfQogCQkJCX0KLQotCQkJCW5ldGlmX3J4KHNiKTsKKwkJCQlw
cmVmZXRjaChzYi0+ZGF0YSk7CisJCQkJcHJlZmV0Y2goKGNvbnN0IHZvaWQgKikoKChjaGFyICop
c2ItPmRhdGEpKzMyKSk7CisjaWZkZWYgQ09ORklHX1NCTUFDX05BUEkKKwkJCQlpZiAocG9sbCkK
KwkJCQkJZHJvcHBlZCA9IG5ldGlmX3JlY2VpdmVfc2tiKHNiKTsKKwkJCQllbHNlIAorI2VuZGlm
CQkJCQorCQkJCQlkcm9wcGVkID0gbmV0aWZfcngoc2IpOworCisJCQkJaWYgKGRyb3BwZWQgPT0g
TkVUX1JYX0RST1ApIHsKKwkJCQkJc2MtPnNibV9zdGF0cy5yeF9kcm9wcGVkKys7CisJCQkJCWQt
PnNiZG1hX3JlbXB0ciA9IFNCRE1BX05FWFRCVUYoZCxzYmRtYV9yZW1wdHIpOworCQkJCQlnb3Rv
IGRvbmU7CisJCQkJfQorCQkJCWVsc2UgeworCQkJCQlzYy0+c2JtX3N0YXRzLnJ4X2J5dGVzICs9
IGxlbjsKKwkJCQkJc2MtPnNibV9zdGF0cy5yeF9wYWNrZXRzKys7CisJCQkJfQogCQkJfQogCQl9
IGVsc2UgewogCQkJLyoKQEAgLTEyNDcsMTIgKzEzMDksMTYgQEAKIAkJICovCiAKIAkJZC0+c2Jk
bWFfcmVtcHRyID0gU0JETUFfTkVYVEJVRihkLHNiZG1hX3JlbXB0cik7Ci0KKwkJd29ya19kb25l
Kys7CisJfQorCWlmICghcG9sbCkgeworCQl3b3JrX3RvX2RvID0gMzI7CisJCWdvdG8gYWdhaW47
IC8qIGNvbGxlY3QgZmlmbyBkcm9wIHN0YXRpc3RpY3MgYWdhaW4gKi8KIAl9Citkb25lOgorCXJl
dHVybiB3b3JrX2RvbmU7CiB9CiAKLQotCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICogIFNCRE1BX1RYX1BS
T0NFU1Moc2MsZCkKICAqCkBAIC0xMjY0LDIyICsxMzMwLDMwIEBACiAgKgogICogIElucHV0IHBh
cmFtZXRlcnM6CiAgKiAgICAgIHNjIC0gc29mdGMgc3RydWN0dXJlCi0gKiAgCSAgIGQgLSBETUEg
Y2hhbm5lbCBjb250ZXh0CisgKiAgCSBkIC0gRE1BIGNoYW5uZWwgY29udGV4dAorICogICAgcG9s
bCAtIDE6IHVzaW5nIHBvbGxpbmcgKGZvciBOQVBJKQogICoKICAqICBSZXR1cm4gdmFsdWU6CiAg
KiAgCSAgIG5vdGhpbmcKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi8KIAotc3RhdGljIHZvaWQgc2JkbWFfdHhf
cHJvY2VzcyhzdHJ1Y3Qgc2JtYWNfc29mdGMgKnNjLHNibWFjZG1hX3QgKmQpCitzdGF0aWMgdm9p
ZCBzYmRtYV90eF9wcm9jZXNzKHN0cnVjdCBzYm1hY19zb2Z0YyAqc2Msc2JtYWNkbWFfdCAqZCwg
aW50IHBvbGwpCiB7CiAJaW50IGN1cmlkeDsKIAlpbnQgaHdpZHg7CiAJc2JkbWFkc2NyX3QgKmRz
YzsKIAlzdHJ1Y3Qgc2tfYnVmZiAqc2I7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlpbnQgcGFj
a2V0c19oYW5kbGVkID0gMDsKIAogCXNwaW5fbG9ja19pcnFzYXZlKCYoc2MtPnNibV9sb2NrKSwg
ZmxhZ3MpOwogCisJaWYgKGQtPnNiZG1hX3JlbXB0ciA9PSBkLT5zYmRtYV9hZGRwdHIpCisJICBn
b3RvIGVuZF91bmxvY2s7CisKKwlod2lkeCA9IChpbnQpICgoKF9fcmF3X3JlYWRxKGQtPnNiZG1h
X2N1cmRzY3IpICYgTV9ETUFfQ1VSRFNDUl9BRERSKSAtCisJCQlkLT5zYmRtYV9kc2NydGFibGVf
cGh5cykgLyBzaXplb2Yoc2JkbWFkc2NyX3QpKTsKKyAKIAlmb3IgKDs7KSB7CiAJCS8qCiAJCSAq
IGZpZ3VyZSBvdXQgd2hlcmUgd2UgYXJlIChhcyBhbiBpbmRleCkgYW5kIHdoZXJlCkBAIC0xMjkz
LDggKzEzNjcsNiBAQAogCQkgKi8KIAogCQljdXJpZHggPSBkLT5zYmRtYV9yZW1wdHIgLSBkLT5z
YmRtYV9kc2NydGFibGU7Ci0JCWh3aWR4ID0gKGludCkgKCgoX19yYXdfcmVhZHEoZC0+c2JkbWFf
Y3VyZHNjcikgJiBNX0RNQV9DVVJEU0NSX0FERFIpIC0KLQkJCQlkLT5zYmRtYV9kc2NydGFibGVf
cGh5cykgLyBzaXplb2Yoc2JkbWFkc2NyX3QpKTsKIAogCQkvKgogCQkgKiBJZiB0aGV5J3JlIHRo
ZSBzYW1lLCB0aGF0IG1lYW5zIHdlJ3ZlIHByb2Nlc3NlZCBhbGwKQEAgLTEzMzIsNiArMTQwNCw4
IEBACiAKIAkJZC0+c2JkbWFfcmVtcHRyID0gU0JETUFfTkVYVEJVRihkLHNiZG1hX3JlbXB0cik7
CiAKKwkJcGFja2V0c19oYW5kbGVkKys7CisKIAl9CiAKIAkvKgpAQCAtMTM0MCw4ICsxNDE0LDEw
IEBACiAJICogd2F0ZXJtYXJrIG9uIHRoZSB0cmFuc21pdCBxdWV1ZS4KIAkgKi8KIAotCW5ldGlm
X3dha2VfcXVldWUoZC0+c2JkbWFfZXRoLT5zYm1fZGV2KTsKKwlpZiAocGFja2V0c19oYW5kbGVk
KQorCQluZXRpZl93YWtlX3F1ZXVlKGQtPnNiZG1hX2V0aC0+c2JtX2Rldik7CiAKK2VuZF91bmxv
Y2s6CiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmKHNjLT5zYm1fbG9jayksIGZsYWdzKTsKIAog
fQpAQCAtMTQxNSw5ICsxNDkxLDkgQEAKIAogc3RhdGljIHZvaWQgc2JkbWFfdW5pbml0Y3R4KHN0
cnVjdCBzYm1hY2RtYV9zICpkKQogewotCWlmIChkLT5zYmRtYV9kc2NydGFibGUpIHsKLQkJa2Zy
ZWUoZC0+c2JkbWFfZHNjcnRhYmxlKTsKLQkJZC0+c2JkbWFfZHNjcnRhYmxlID0gTlVMTDsKKwlp
ZiAoZC0+c2JkbWFfZHNjcnRhYmxlX3VuYWxpZ25lZCkgeworCQlrZnJlZShkLT5zYmRtYV9kc2Ny
dGFibGVfdW5hbGlnbmVkKTsKKwkJZC0+c2JkbWFfZHNjcnRhYmxlX3VuYWxpZ25lZCA9IGQtPnNi
ZG1hX2RzY3J0YWJsZSA9IE5VTEw7CiAJfQogCiAJaWYgKGQtPnNiZG1hX2N0eHRhYmxlKSB7CkBA
IC0xNjE1LDE1ICsxNjkxLDkgQEAKICNlbmRpZgogCiAjaWZkZWYgQ09ORklHX1NCTUFDX0NPQUxF
U0NFCi0JLyoKLQkgKiBBY2NlcHQgYW55IFRYIGludGVycnVwdCBhbmQgRU9QIGNvdW50L3RpbWVy
IFJYIGludGVycnVwdHMgb24gY2ggMAotCSAqLwogCV9fcmF3X3dyaXRlcSgoKE1fTUFDX0lOVF9F
T1BfQ09VTlQgfCBNX01BQ19JTlRfRU9QX1RJTUVSKSA8PCBTX01BQ19UWF9DSDApIHwKIAkJICAg
ICAgICgoTV9NQUNfSU5UX0VPUF9DT1VOVCB8IE1fTUFDX0lOVF9FT1BfVElNRVIpIDw8IFNfTUFD
X1JYX0NIMCksIHMtPnNibV9pbXIpOwogI2Vsc2UKLQkvKgotCSAqIEFjY2VwdCBhbnkga2luZCBv
ZiBpbnRlcnJ1cHQgb24gVFggYW5kIFJYIERNQSBjaGFubmVsIDAKLQkgKi8KIAlfX3Jhd193cml0
ZXEoKE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFDX1RYX0NIMCkgfAogCQkgICAgICAgKE1fTUFD
X0lOVF9DSEFOTkVMIDw8IFNfTUFDX1JYX0NIMCksIHMtPnNibV9pbXIpOwogI2VuZGlmCkBAIC0y
MDU2LDggKzIxMjYsNyBAQAogCXVpbnQ2NF90IGlzcjsKIAlpbnQgaGFuZGxlZCA9IDA7CiAKLQlm
b3IgKDs7KSB7Ci0KKyNpZmRlZiBDT05GSUdfU0JNQUNfTkFQSQogCQkvKgogCQkgKiBSZWFkIHRo
ZSBJU1IgKHRoaXMgY2xlYXJzIHRoZSBiaXRzIGluIHRoZSByZWFsCiAJCSAqIHJlZ2lzdGVyLCBl
eGNlcHQgZm9yIGNvdW50ZXIgYWRkcikKQEAgLTIwNjYsOCArMjEzNSw3IEBACiAJCWlzciA9IF9f
cmF3X3JlYWRxKHNjLT5zYm1faXNyKSAmIH5NX01BQ19DT1VOVEVSX0FERFI7CiAKIAkJaWYgKGlz
ciA9PSAwKQotCQkJYnJlYWs7Ci0KKwkJICAgICAgICByZXR1cm4gSVJRX1JFVFZBTCgwKTsKIAkJ
aGFuZGxlZCA9IDE7CiAKIAkJLyoKQEAgLTIwNzUsMTIgKzIxNDMsNTIgQEAKIAkJICovCiAKIAkJ
aWYgKGlzciAmIChNX01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19UWF9DSDApKSB7Ci0JCQlzYmRt
YV90eF9wcm9jZXNzKHNjLCYoc2MtPnNibV90eGRtYSkpOworCQkJc2JkbWFfdHhfcHJvY2Vzcyhz
YywmKHNjLT5zYm1fdHhkbWEpLCAwKTsKKyNpZmRlZiBDT05GSUdfTkVUUE9MTF9UUkFQCisJCSAg
ICAgICBpZiAobmV0cG9sbF90cmFwKCkpIHsKKwkJCSAgICAgICBpZiAodGVzdF9hbmRfY2xlYXJf
Yml0KF9fTElOS19TVEFURV9YT0ZGLCAmZGV2LT5zdGF0ZSkpIAorCQkJCSAgICAgICBfX25ldGlm
X3NjaGVkdWxlKGRldik7CisJCSAgICAgICB9CisjZW5kaWYKIAkJfQogCisJaWYgKGlzciAmIChN
X01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19SWF9DSDApKSB7CisJCWlmIChuZXRpZl9yeF9zY2hl
ZHVsZV9wcmVwKGRldikpIHsKKwkJCV9fcmF3X3dyaXRlcSgwLCBzYy0+c2JtX2ltcik7CisJCQlf
X25ldGlmX3J4X3NjaGVkdWxlKGRldik7CisJCQkvKiBEZXBlbmQgb24gdGhlIGV4aXQgZnJvbSBw
b2xsIHRvIHJlZW5hYmxlIGludHIgKi8KKwkJfQorCQllbHNlIHsKKwkJCS8qIG1heSBsZWF2ZSBz
b21lIHBhY2tldHMgYmVoaW5kICovCisJCQlzYmRtYV9yeF9wcm9jZXNzKHNjLCYoc2MtPnNibV9y
eGRtYSksCisJCQkJCSBTQk1BQ19NQVhfUlhERVNDUiAqIDIsIDApOworCQl9CisJfQorI2Vsc2UK
KwkvKiBOb24gTkFQSSAqLworCWZvciAoOzspIHsKKyAKIAkJLyoKLQkJICogUmVjZWl2ZXMgb24g
Y2hhbm5lbCAwCisJCSAqIFJlYWQgdGhlIElTUiAodGhpcyBjbGVhcnMgdGhlIGJpdHMgaW4gdGhl
IHJlYWwKKwkJICogcmVnaXN0ZXIsIGV4Y2VwdCBmb3IgY291bnRlciBhZGRyKQogCQkgKi8KKwkJ
aXNyID0gX19yYXdfcmVhZHEoc2MtPnNibV9pc3IpICYgfk1fTUFDX0NPVU5URVJfQUREUjsKKwor
CQlpZiAoaXNyID09IDApCisJCQlicmVhazsKKworCQloYW5kbGVkID0gMTsKKworCQlpZiAoaXNy
ICYgKE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFDX1RYX0NIMCkpIHsKKwkJCXNiZG1hX3R4X3By
b2Nlc3Moc2MsJihzYy0+c2JtX3R4ZG1hKSwKKwkJCQkJIFNCTUFDX01BWF9SWERFU0NSICogMik7
CisjaWZkZWYgQ09ORklHX05FVFBPTExfVFJBUAorCQkgICAgICAgaWYgKG5ldHBvbGxfdHJhcCgp
KSB7CisJCQkgICAgICAgaWYgKHRlc3RfYW5kX2NsZWFyX2JpdChfX0xJTktfU1RBVEVfWE9GRiwg
JmRldi0+c3RhdGUpKSAKKwkJCQkgICAgICAgX19uZXRpZl9zY2hlZHVsZShkZXYpOworCQkgICAg
ICAgfQorI2VuZGlmCisJCX0KIAogCQkvKgogCQkgKiBJdCdzIGltcG9ydGFudCB0byB0ZXN0IGFs
bCB0aGUgYml0cyAob3IgYXQgbGVhc3QgdGhlCkBAIC0yMDk3LDE2ICsyMjA1LDE1IEBACiAJCSAq
IEVPUF9TRUVOIGhlcmUgdGFrZXMgY2FyZSBvZiB0aGlzIGNhc2UuCiAJCSAqIChFT1BfU0VFTiBp
cyBwYXJ0IG9mIE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFDX1JYX0NIMCkKIAkJICovCi0KLQog
CQlpZiAoaXNyICYgKE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFDX1JYX0NIMCkpIHsKLQkJCXNi
ZG1hX3J4X3Byb2Nlc3Moc2MsJihzYy0+c2JtX3J4ZG1hKSk7CisJCQlzYmRtYV9yeF9wcm9jZXNz
KHNjLCYoc2MtPnNibV9yeGRtYSksCisJCQkJCSBTQk1BQ19NQVhfUlhERVNDUiAqIDIsIDApOwog
CQl9CiAJfQorI2VuZGlmCiAJcmV0dXJuIElSUV9SRVRWQUwoaGFuZGxlZCk7CiB9CiAKLQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKICAqICBTQk1BQ19TVEFSVF9UWChza2IsZGV2KQogICoKQEAgLTIyMzYsOCAr
MjM0Myw2IEBACiAJfQogfQogCi0KLQogI2lmIGRlZmluZWQoU0JNQUNfRVRIMF9IV0FERFIpIHx8
IGRlZmluZWQoU0JNQUNfRVRIMV9IV0FERFIpIHx8IGRlZmluZWQoU0JNQUNfRVRIMl9IV0FERFIp
IHx8IGRlZmluZWQoU0JNQUNfRVRIM19IV0FERFIpCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICogIFNCTUFD
X1BBUlNFX1hESUdJVChzdHIpCkBAIC0yNDAwLDkgKzI1MDUsMTIgQEAKIAlkZXYtPmRvX2lvY3Rs
ICAgICAgICAgICA9IHNibWFjX21paV9pb2N0bDsKIAlkZXYtPnR4X3RpbWVvdXQgICAgICAgICA9
IHNibWFjX3R4X3RpbWVvdXQ7CiAJZGV2LT53YXRjaGRvZ190aW1lbyAgICAgPSBUWF9USU1FT1VU
OwotCiAJZGV2LT5jaGFuZ2VfbXR1ICAgICAgICAgPSBzYjEyNTBfY2hhbmdlX210dTsKLQorI2lm
ZGVmIENPTkZJR19TQk1BQ19OQVBJCisJZGV2LT5wb2xsICAgICAgICAgICAgICAgPSBzYm1hY19w
b2xsOworCWRldi0+d2VpZ2h0ICAgICAgICAgICAgID0gMTY7CisjZW5kaWYKKyAKIAkvKiBUaGlz
IGlzIG5lZWRlZCBmb3IgUEFTUzIgZm9yIFJ4IEgvVyBjaGVja3N1bSBmZWF0dXJlICovCiAJc2Jt
YWNfc2V0X2lwaGRyX29mZnNldChzYyk7CiAKQEAgLTI4MDgsNyArMjkxNiw0MSBAQAogCXJldHVy
biAwOwogfQogCisjaWZkZWYgQ09ORklHX1NCTUFDX05BUEkKK3N0YXRpYyBpbnQgc2JtYWNfcG9s
bChzdHJ1Y3QgbmV0X2RldmljZSAqZGV2LCBpbnQgKmJ1ZGdldCkKK3sKKwlpbnQgd29ya190b19k
bzsKKwlpbnQgd29ya19kb25lOworCXN0cnVjdCBzYm1hY19zb2Z0YyAqc2MgPSBuZXRkZXZfcHJp
dihkZXYpOworCisJd29ya190b19kbyA9IG1pbigqYnVkZ2V0LCBkZXYtPnF1b3RhKTsKKwl3b3Jr
X2RvbmUgPSBzYmRtYV9yeF9wcm9jZXNzKHNjLCAmKHNjLT5zYm1fcnhkbWEpLCB3b3JrX3RvX2Rv
LCAxKTsKKworCWlmICh3b3JrX2RvbmUgPiB3b3JrX3RvX2RvKQorCQlwcmludGsoS0VSTl9FUlIg
IiVzIGV4Y2VlZGVkIHdvcmtfdG9fZG8gYnVkZ2V0PSVkIHF1b3RhPSVkIHdvcmstZG9uZT0lZFxu
IiwKKwkJICAgICAgIHNjLT5zYm1fZGV2LT5uYW1lLCAqYnVkZ2V0LCBkZXYtPnF1b3RhLCB3b3Jr
X2RvbmUpOworCisJc2JkbWFfdHhfcHJvY2VzcyhzYywgJihzYy0+c2JtX3R4ZG1hKSwgMSk7CiAK
KwkqYnVkZ2V0IC09IHdvcmtfZG9uZTsKKwlkZXYtPnF1b3RhIC09IHdvcmtfZG9uZTsKKworCWlm
ICh3b3JrX2RvbmUgPCB3b3JrX3RvX2RvKSB7CisJCW5ldGlmX3J4X2NvbXBsZXRlKGRldik7CisK
KyNpZmRlZiBDT05GSUdfU0JNQUNfQ09BTEVTQ0UKKwkJX19yYXdfd3JpdGVxKCgoTV9NQUNfSU5U
X0VPUF9DT1VOVCB8IE1fTUFDX0lOVF9FT1BfVElNRVIpIDw8IFNfTUFDX1RYX0NIMCkgfAorCQkJ
ICAgICAoKE1fTUFDX0lOVF9FT1BfQ09VTlQgfCBNX01BQ19JTlRfRU9QX1RJTUVSKSA8PCBTX01B
Q19SWF9DSDApLCAKKwkJCSAgICAgc2MtPnNibV9pbXIpOworI2Vsc2UKKwkJX19yYXdfd3JpdGVx
KChNX01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19UWF9DSDApIHwKKwkJCSAgICAgKE1fTUFDX0lO
VF9DSEFOTkVMIDw8IFNfTUFDX1JYX0NIMCksIHNjLT5zYm1faW1yKTsKKyNlbmRpZgorCX0KKwor
CXJldHVybiAod29ya19kb25lID49IHdvcmtfdG9fZG8pOworfQorI2VuZGlmCiAKICNpZiBkZWZp
bmVkKFNCTUFDX0VUSDBfSFdBRERSKSB8fCBkZWZpbmVkKFNCTUFDX0VUSDFfSFdBRERSKSB8fCBk
ZWZpbmVkKFNCTUFDX0VUSDJfSFdBRERSKSB8fCBkZWZpbmVkKFNCTUFDX0VUSDNfSFdBRERSKQog
c3RhdGljIHZvaWQKSW5kZXg6IGxpbnV4LTIuNi4xNC1jZ2wvYXJjaC9taXBzL3NpYnl0ZS9iY20x
NDgwL2lycS5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KLS0tIGxpbnV4LTIuNi4xNC1jZ2wub3JpZy9hcmNoL21pcHMv
c2lieXRlL2JjbTE0ODAvaXJxLmMJMjAwNi0wOS0yMCAxNDo1ODo0MS4wMDAwMDAwMDAgLTA3MDAK
KysrIGxpbnV4LTIuNi4xNC1jZ2wvYXJjaC9taXBzL3NpYnl0ZS9iY20xNDgwL2lycS5jCTIwMDYt
MDktMjAgMTU6NTg6MzMuMDAwMDAwMDAwIC0wNzAwCkBAIC0xNDQsMTEgKzE0NCwxMSBAQAogCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7CiAJdW5zaWduZWQgaW50IGlycV9kaXJ0eTsKIAotCWkgPSBmaXJz
dF9jcHUobWFzayk7Ci0JaWYgKG5leHRfY3B1KGksIG1hc2spIDw9IE5SX0NQVVMpIHsKKwlpZiAo
Y3B1c193ZWlnaHQobWFzaykgIT0gMSkgewogCQlwcmludGsoImF0dGVtcHRlZCB0byBzZXQgaXJx
IGFmZmluaXR5IGZvciBpcnEgJWQgdG8gbXVsdGlwbGUgQ1BVc1xuIiwgaXJxKTsKIAkJcmV0dXJu
OwogCX0KKwlpID0gZmlyc3RfY3B1KG1hc2spOwogCiAJLyogQ29udmVydCBsb2dpY2FsIENQVSB0
byBwaHlzaWNhbCBDUFUgKi8KIAljcHUgPSBjcHVfbG9naWNhbF9tYXAoaSk7Cg==

------_=_NextPart_001_01C6E0F4.F7DE01E5
Content-Type: application/octet-stream;
	name="sb1250mac_skb_cache.patch"
Content-Transfer-Encoding: base64
Content-Description: sb1250mac_skb_cache.patch
Content-Disposition: attachment;
	filename="sb1250mac_skb_cache.patch"

ICBUaGlzIHBhdGNoIGltcGxlbWVudHMgYSBwcml2YXRlIGNhY2hlIG9mIGJ1ZmZlcnMgZm9yIFNC
MTI1MF9NQUMgZHJpdmVyCiAgZm9yIHBlcmZvcm1hbmNlIGVuaGFuY2VtZW50IHB1cnBvc2UuIEl0
IHNob3VsZCBiZSBhcHBsaWVkIG9uIHRvcCBvZiAKICB0aGUgTkFQSSBwYXRjaC4KICAgIFNpZ25l
ZCBvZmYgYnk6IERhbiBLcmVqc2EgKGRhbi5rcmVqc2FAd2luZHJpdmVyLmNvbSkKICAgIFNpZ25l
ZCBvZmYgYnk6IFN0ZXZlIFlhbmcgKHN0ZXZlLnlhbmdAd2luZHJpdmVyLmNvbSkKSW5kZXg6IGxp
bnV4LTIuNi4xNC1jZ2wvZHJpdmVycy9uZXQvS2NvbmZpZwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsaW51eC0y
LjYuMTQtY2dsLm9yaWcvZHJpdmVycy9uZXQvS2NvbmZpZwkyMDA2LTA5LTI1IDEwOjA2OjI5LjAw
MDAwMDAwMCAtMDcwMAorKysgbGludXgtMi42LjE0LWNnbC9kcml2ZXJzL25ldC9LY29uZmlnCTIw
MDYtMDktMjUgMTI6MjY6MDguNDAxNDUzNjI2IC0wNzAwCkBAIC0yMDQ4LDYgKzIwNDgsMzUgQEAK
IAogCSAgSWYgaW4gZG91YnQsIHNheSB5LgogCitjb25maWcgU0JNQUNfU0tCX0NBQ0hFCisJYm9v
bCAiU0JNQUM6IEVuYWJsZSBkcml2ZXIgbG9jYWwgYnVmZmVyIGNhY2hpbmcgKEVYUEVSSU1FTlRB
TCkiCisJZGVwZW5kcyBvbiBORVRfU0IxMjUwX01BQyAmJiBFWFBFUklNRU5UQUwKKwloZWxwCisJ
ICBUaGlzIGNvbmZpZ3VyYXRpb24gb3B0aW9uIG1ha2VzIHRoZSBzYjEyNTAtbWFjLmMgZHJpdmVy
CisJICBtYWludGFpbiBhIHByaXZhdGUgY2FjaGUgb2YgJ3NrX2J1ZmYnIGJ1ZmZlcnMsIHNoYXJl
ZAorCSAgYmV0d2VlbiB0aGUgbmV0d29yayBkZXZpY2VzIHdoaWNoIGl0IG1hbmFnZXMuICBXaGVu
IGEgcGFja2V0CisJICB0cmFuc21pdCBjb21wbGV0ZXMsIHRoZSBjb3JyZXNwb25kaW5nIHNrX2J1
ZmYgbWF5IGJlIHBsYWNlZAorCSAgaW4gdGhlIHByaXZhdGUgY2FjaGUgKHByb3ZpZGVkIGl0IG1l
ZXRzIGNlcnRhaW4gY3JpdGVyaWEpCisJICByYXRoZXIgdGhhbiBiZWluZyByZXR1cm5lZCB0byB0
aGUgZ2VuZXJhbCBrZXJuZWwgcG9vbHMuCisJICBEdXJpbiBwYWNrZXQgcmVjZXB0aW9uLCByZXBs
ZW5pc2htZW50IHNrX2J1ZmZzIG1heSBiZSB0YWtlbgorCSAgZnJvbSB0aGUgcHJpdmF0ZSBjYWNo
ZSAoaWYgYXZhaWxhYmxlKSBpbiBwcmVmZXJlbmNlIHRvIHVzaW5nCisJICBkZXZfYWxsb2Nfc2ti
KCkuICBUaGlzIGhhcyBiZWVuIGZvdW5kIHRvIHNpZ25pZmljYW50bHkKKwkgIGltcHJvdmUgcGVy
Zm9ybWFuY2Ugd2hlbiBmb3J3YXJkaW5nIHVuZGVyIGhlYXZ5IGxvYWQuCisgCisJICBJZiBpbiBk
b3VidCwgc2F5IHkgaGVyZS4KKworY29uZmlnIFNCTUFDX1NLQl9DQUNIRV9TSVpFCisJaW50ICJT
Qk1BQyBkcml2ZXIgc2tfYnVmZiBjYWNoZSBzaXplIgorCWRlcGVuZHMgb24gU0JNQUNfU0tCX0NB
Q0hFCisJZGVmYXVsdCA2NAorCWhlbHAKKwkgIE51bWJlciBvZiAnc2tfYnVmZicgYnVmZmVycyBp
biB0aGUgY2FjaGUuIERlZmF1bHQgdG8gNjQuCisJICBVcCB0byB0aGlzIG1hbnkgYnVmZmVycyBt
YXkgYmUgaGVsZCBpbiB0aGUgY2FjaGUgYnkgdGhlIGRyaXZlciwKKwkgIHVuYXZhaWxhYmxlIGZv
ciBvdGhlciB1c2UsIHVudGlsIHRoZSBkcml2ZXIgaXMgdW5sb2FkZWQuCisJICBPbmx5IGxpbmVh
ciBza19idWZmcyB3aXRoIGEgc2luZ2xlIHJlZmVyZW5jZSBjb3VudCBhbmQgb2YKKwkgIHN1ZmZp
Y2llbnRseSBsYXJnZSBzaXplIGFyZSBjYW5kaWRhdGVzIGZvciByZWN5Y2xpbmcgaW4gdGhlCisJ
ICBwcml2YXRlIGNhY2hlLgorCiBjb25maWcgUjgxNjlfVkxBTgogCWJvb2wgIlZMQU4gc3VwcG9y
dCIKIAlkZXBlbmRzIG9uIFI4MTY5ICYmIFZMQU5fODAyMVEKSW5kZXg6IGxpbnV4LTIuNi4xNC1j
Z2wvZHJpdmVycy9uZXQvc2IxMjUwLW1hYy5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGxpbnV4LTIuNi4xNC1j
Z2wub3JpZy9kcml2ZXJzL25ldC9zYjEyNTAtbWFjLmMJMjAwNi0wOS0yNSAxMDowNjoyOS4wMDAw
MDAwMDAgLTA3MDAKKysrIGxpbnV4LTIuNi4xNC1jZ2wvZHJpdmVycy9uZXQvc2IxMjUwLW1hYy5j
CTIwMDYtMDktMjUgMTI6NDM6MDEuMjk5NzY0NzE0IC0wNzAwCkBAIC0zNSw2ICszNSwxMCBAQAog
I2luY2x1ZGUgPGFzbS9wcm9jZXNzb3IuaD4JCS8qIFByb2Nlc3NvciB0eXBlIGZvciBjYWNoZSBh
bGlnbm1lbnQuICovCiAjaW5jbHVkZSA8YXNtL2lvLmg+CiAjaW5jbHVkZSA8YXNtL2NhY2hlLmg+
CisjaWZkZWYgQ09ORklHX1NCTUFDX1NLQl9DQUNIRQorI2luY2x1ZGUgPG5ldC9kc3QuaD4KKyNp
bmNsdWRlIDxuZXQveGZybS5oPgorI2VuZGlmIC8qIENPTkZJR19TQk1BQ19TS0JfQ0FDSEUgKi8K
IAogLyogVGhpcyBpcyBvbmx5IGhlcmUgdW50aWwgdGhlIGZpcm13YXJlIGlzIHJlYWR5LiAgSW4g
dGhhdCBjYXNlLAogICAgdGhlIGZpcm13YXJlIGxlYXZlcyB0aGUgZXRoZXJuZXQgYWRkcmVzcyBp
biB0aGUgcmVnaXN0ZXIgZm9yIHVzLiAqLwpAQCAtMjc1LDEwICsyNzksNDAgQEAKIAogCXNibWFj
ZG1hX3QgICAgICAgc2JtX3R4ZG1hOwkJLyogZm9yIG5vdywgb25seSB1c2UgY2hhbm5lbCAwICov
CiAJc2JtYWNkbWFfdCAgICAgICBzYm1fcnhkbWE7CisgCXVpbnQzMl90CSBzYm1fZXZlbnRzOwkJ
LyogcmVjb3JkIGludGVycnVwdCBzdGF0dXMgKi8KIAlpbnQgICAgICAgICAgICAgIHJ4X2h3X2No
ZWNrc3VtOwogCWludCAJCSBzYmVfaWR4OwogfTsKIAorI2lmZGVmIENPTkZJR19TQk1BQ19TS0Jf
Q0FDSEUKKworLyogVHJ5IHRvIGxvY2FsbHkgY2FjaGUgYSBUWCBza19idWZmIGlmIGl0cyB0cnVl
c2l6ZSBpcyBhdCBsZWFzdCB0aGlzIGJpZzogKi8KKyNkZWZpbmUgU0JNQUNfU0laRV9SRVEgKFNL
Ql9EQVRBX0FMSUdOKDE2ICsgRU5FVF9QQUNLRVRfU0laRSArCVwKKwkJCQkgICAgICAgU01QX0NB
Q0hFX0JZVEVTICogMiArCVwKKwkJCQkgICAgICAgRVRIRVJfQUxJR04pKQorI2lmbmRlZiBTQk1B
Q19TS0JfQ0FDSEVfU0laRQorI2RlZmluZSBTQk1BQ19TS0JfQ0FDSEVfU0laRQk2NAorI2VuZGlm
CisKK3N0cnVjdCBzYm1hY19za2JfY2FjaGUgeworCXNwaW5sb2NrX3QJIGxvY2s7CisJaW50CQkg
aW5kZXg7CisJc3RydWN0IHNrX2J1ZmYgKiBidWYgW1NCTUFDX1NLQl9DQUNIRV9TSVpFXTsKK307
CisKKy8qCisgKiBMb2NhbCBza19idWZmIGNhY2hlLCBzaGFyZWQgYnkgZGV2aWNlcy4KKyAqIFJl
bWVtYmVyIHRvIHdyaXRlIGNsZWFuLXVwIGNvZGUgdG8gZnJlZSBhbnkgYnVmZmVycyBpbgorICog
dGhlIGNhY2hlIHdoZW4gdGhlIG1vZHVsZSB1bmxvYWRzLgorICovCisKK3N0YXRpYyBzdHJ1Y3Qg
c2JtYWNfc2tiX2NhY2hlIHNibWFjX3NrYiA9IHsKKwkubG9jayA9IFNQSU5fTE9DS19VTkxPQ0tF
RCwKKwkuaW5kZXggPSAwCit9OworCisjZW5kaWYgLyogQ09ORklHX1NCTUFDX1NLQl9DQUNIRSAq
LworCiAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCiAgKiAgRXh0ZXJucwpAQCAtODgyLDcgKzkxNiw3IEBACiAJ
ZC0+c2JkbWFfcmVtcHRyID0gTlVMTDsKIH0KIAotc3RhdGljIHZvaWQgc2JkbWFfYWxpZ25fc2ti
KHN0cnVjdCBza19idWZmICpza2IsaW50IHBvd2VyMixpbnQgb2Zmc2V0KQorc3RhdGljIGlubGlu
ZSB2b2lkIHNiZG1hX2FsaWduX3NrYihzdHJ1Y3Qgc2tfYnVmZiAqc2tiLGludCBwb3dlcjIsaW50
IG9mZnNldCkKIHsKIAl1bnNpZ25lZCBsb25nIGFkZHI7CiAJdW5zaWduZWQgbG9uZyBuZXdhZGRy
OwpAQCAtOTE3LDYgKzk1MSw5IEBACiAJc2JkbWFkc2NyX3QgKm5leHRkc2M7CiAJc3RydWN0IHNr
X2J1ZmYgKnNiX25ldyA9IE5VTEw7CiAJaW50IHBrdHNpemUgPSBFTkVUX1BBQ0tFVF9TSVpFOwor
I2lmZGVmIENPTkZJR19TQk1BQ19TS0JfQ0FDSEUKKwlpbnQgaTsKKyNlbmRpZgogCiAJLyogZ2V0
IHBvaW50ZXIgdG8gb3VyIGN1cnJlbnQgcGxhY2UgaW4gdGhlIHJpbmcgKi8KIApAQCAtOTUyLDI2
ICs5ODksNTIgQEAKIAkgKiAgRE1BIHdpbGwgdHJhc2ggdGhlIGJlZ2lubmluZyAoYW5kIGVuZGlu
ZykgcG9ydGlvbnMuCiAJICovCiAKLQlpZiAoc2IgPT0gTlVMTCkgewotCQlzYl9uZXcgPSBkZXZf
YWxsb2Nfc2tiKEVORVRfUEFDS0VUX1NJWkUgKyBTTVBfQ0FDSEVfQllURVMgKiAyICsgRVRIRVJf
QUxJR04pOwotCQlpZiAoc2JfbmV3ID09IE5VTEwpIHsKLQkJCXByaW50ayhLRVJOX0lORk8gIiVz
OiBza19idWZmIGFsbG9jYXRpb24gZmFpbGVkXG4iLAotCQkJICAgICAgIGQtPnNiZG1hX2V0aC0+
c2JtX2Rldi0+bmFtZSk7Ci0JCQlyZXR1cm4gLUVOT0JVRlM7CisKKwlzYl9uZXcgPSBzYjsKKwor
CWlmIChzYl9uZXcgPT0gTlVMTCkgeworI2lmZGVmIENPTkZJR19TQk1BQ19TS0JfQ0FDSEUKKwkJ
aWYgKGxpa2VseSAoc3Bpbl90cnlsb2NrICgmc2JtYWNfc2tiLmxvY2spKSkgeworCQkJaWYgKGxp
a2VseSAoKGkgPSBzYm1hY19za2IuaW5kZXggLSAxKSA+PSAwKSkgeworCQkJCXNiX25ldyA9IHNi
bWFjX3NrYi5idWYgW2ldOworCQkJCXNibWFjX3NrYi5pbmRleCA9IGk7CisJCQl9CisJCQlzcGlu
X3VubG9jayAoJnNibWFjX3NrYi5sb2NrKTsKIAkJfQorCQlpZiAoc2JfbmV3ID09IE5VTEwpIHsK
KyNlbmRpZgorCQkJc2JfbmV3ID0gZGV2X2FsbG9jX3NrYiAoRU5FVF9QQUNLRVRfU0laRSArCisJ
CQkJCQlTTVBfQ0FDSEVfQllURVMgKiAyICsKKwkJCQkJCUVUSEVSX0FMSUdOKTsKKwkJCWlmICh1
bmxpa2VseSAoc2JfbmV3ID09IE5VTEwpKSB7CisJCQkJcHJpbnRrKEtFUk5fSU5GTworCQkJCSAg
ICAgICAiJXM6IHNrX2J1ZmYgYWxsb2NhdGlvbiBmYWlsZWRcbiIsCisJCQkJICAgICAgIGQtPnNi
ZG1hX2V0aC0+c2JtX2Rldi0+bmFtZSk7CisJCQkJcmV0dXJuIC1FTk9CVUZTOworCQkJfQorI2lm
ZGVmIENPTkZJR19TQk1BQ19TS0JfQ0FDSEUKKwkJfSBlbHNlIHsKKwkJCS8qIHNiX25ldyBjYW1l
IGZyb20gdGhlIGxvY2FsIGNhY2hlLCBpbml0IGl0ICovCisJCQltZW1zZXQoc2JfbmV3LCAwLCBv
ZmZzZXRvZihzdHJ1Y3Qgc2tfYnVmZiwgdHJ1ZXNpemUpKTsKIAorCQkJLyogc2ItPnVzZXJzIGlz
IGFscmVhZHkgMSwgYXMgaXMKKwkJCSAgIHNrYl9zaGluZm8oc2IpLT5kYXRhcmVmICovCisKKwkJ
CS8qIHJlc2VydmUgMTYgYnl0ZXMsIHNlZSBfX2Rldl9hbGxvY19za2IoKSAqLworCQkJc2JfbmV3
LT5kYXRhID0gc2JfbmV3LT50YWlsID0gc2JfbmV3LT5oZWFkICsgMTY7CisgIAorCQkJLyogYXJl
IHRoZXNlIG5lY2Vzc2FyeSBnaXZlbiB0aGF0IHdlIGRvbid0IHN1cHBvcnQKKwkJCSAqIFRDUCBz
ZWdtZW50YXRpb24gb2ZmbG9hZD8KKwkJCSAqLworCQkJc2tiX3NoaW5mbyhzYl9uZXcpLT5nc29f
c2l6ZSA9IDA7CisJCQlza2Jfc2hpbmZvKHNiX25ldyktPmdzb19zZWdzID0gMDsKKwkJfQorI2Vu
ZGlmCiAJCXNiZG1hX2FsaWduX3NrYihzYl9uZXcsIFNNUF9DQUNIRV9CWVRFUywgRVRIRVJfQUxJ
R04pOwogCiAJCS8qIG1hcmsgc2tidWZmIG93bmVkIGJ5IG91ciBkZXZpY2UgKi8KIAkJc2JfbmV3
LT5kZXYgPSBkLT5zYmRtYV9ldGgtPnNibV9kZXY7CiAJfQotCWVsc2UgewotCQlzYl9uZXcgPSBz
YjsKLQkJLyoKLQkJICogbm90aGluZyBzcGVjaWFsIHRvIHJlaW5pdCBidWZmZXIsIGl0J3MgYWxy
ZWFkeSBhbGlnbmVkCi0JCSAqIGFuZCBzYi0+ZGF0YSBhbHJlYWR5IHBvaW50cyB0byBhIGdvb2Qg
cGxhY2UuCi0JCSAqLwotCX0KIAogCS8qCiAJICogZmlsbCBpbiB0aGUgZGVzY3JpcHRvcgpAQCAt
MTM0NCw4ICsxNDA3LDEyIEBACiAJc2JkbWFkc2NyX3QgKmRzYzsKIAlzdHJ1Y3Qgc2tfYnVmZiAq
c2I7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLQlpbnQgcGFja2V0c19oYW5kbGVkID0gMDsKLQor
CWludCBvdXQgPSAwOworI2lmZGVmIENPTkZJR19TQk1BQ19TS0JfQ0FDSEUKKwlpbnQgaTsKKwlp
bnQgc2l6ZTsKKyNlbmRpZgorIAogCXNwaW5fbG9ja19pcnFzYXZlKCYoc2MtPnNibV9sb2NrKSwg
ZmxhZ3MpOwogCiAJaWYgKGQtPnNiZG1hX3JlbXB0ciA9PSBkLT5zYmRtYV9hZGRwdHIpCkBAIC0x
MzU0LDggKzE0MjEsOCBAQAogCWh3aWR4ID0gKGludCkgKCgoX19yYXdfcmVhZHEoZC0+c2JkbWFf
Y3VyZHNjcikgJiBNX0RNQV9DVVJEU0NSX0FERFIpIC0KIAkJCWQtPnNiZG1hX2RzY3J0YWJsZV9w
aHlzKSAvIHNpemVvZihzYmRtYWRzY3JfdCkpOwogIAotCWZvciAoOzspIHsKLQkJLyoKKwlmb3Ig
KDs7IGQtPnNiZG1hX3JlbXB0ciA9IFNCRE1BX05FWFRCVUYoZCxzYmRtYV9yZW1wdHIpKSB7Cisg
CQkvKgogCQkgKiBmaWd1cmUgb3V0IHdoZXJlIHdlIGFyZSAoYXMgYW4gaW5kZXgpIGFuZCB3aGVy
ZQogCQkgKiB0aGUgaGFyZHdhcmUgaXMgKGFsc28gYXMgYW4gaW5kZXgpCiAJCSAqCkBAIC0xMzcx
LDggKzE0MzgsOCBAQAogCQkvKgogCQkgKiBJZiB0aGV5J3JlIHRoZSBzYW1lLCB0aGF0IG1lYW5z
IHdlJ3ZlIHByb2Nlc3NlZCBhbGwKIAkJICogb2YgdGhlIGRlc2NyaXB0b3JzIHVwIHRvIChidXQg
bm90IGluY2x1ZGluZykgdGhlIG9uZSB0aGF0Ci0JCSAqIHRoZSBoYXJkd2FyZSBpcyB3b3JraW5n
IG9uIHJpZ2h0IG5vdy4KLQkJICovCisJCSAqIHRoZSBoYXJkd2FyZSB3YXMgd29ya2luZyBvbiB3
aGVuIHdlIHN0YXJ0ZWQuCisgCQkgKi8KIAogCQlpZiAoY3VyaWR4ID09IGh3aWR4KQogCQkJYnJl
YWs7CkBAIC0xMzk0LDI3ICsxNDYxLDk1IEBACiAKIAkJLyoKIAkJICogZm9yIHRyYW5zbWl0cywg
d2UganVzdCBmcmVlIGJ1ZmZlcnMuCi0JCSAqLwotCi0JCWRldl9rZnJlZV9za2JfaXJxKHNiKTsK
KwkJICoKKwkJICogQ09ORklHX1NCTUFDX1NLQl9DQUNIRToKKwkJICogV2UgdHJ5IHRvIGtlZXAg
YW4gb3B0aW1pemVkIGxvY2FsIHNrX2J1ZmYgY2FjaGUKKwkJICogc2hhcmVkIGJldHdlZW4gZGV2
aWNlcyBtYW5hZ2VkIGJ5IHRoaXMgZHJpdmVyLgorCQkgKiBDYW5kaWRhdGUgc2tfYnVmZidzIGFy
ZSBsaW5lYXIgd2l0aCBlbm91Z2ggc3BhY2UKKwkJICogYW5kIHJlZmVyZW5jZSBjb3VudHMgb2Yg
MS4gTm90ZSB0aGF0IGRhdGFyZWY9PTEKKwkJICogYWxzbyBtZWFucyB0aGF0ICdoZWFkZXIgY2xv
bmluZycgaGFzbid0IHRha2VuIHBsYWNlLgorCQkgKgorCQkgKiBXZSBvbmx5IGFjY2VzcyB0aGUg
bG9jYWwgc2tfYnVmZiBjYWNoZSBpbnNpZGUgdGhlCisJCSAqIGRldmljZSBwb2xsIHJvdXRpbmUu
IEhvd2V2ZXIsIGFzIHRoaXMgaXMgc2hhcmVkCisJCSAqIGJldHdlZW4gZGV2aWNlcyBhbmQgdGhl
IG5ldF9yeF9hY3Rpb24gbWF5IHJ1biBvbgorCQkgKiBtdWx0aXBsZSBDUFVzIGNvbmN1cnJlbnRs
eSwgd2UgbmVlZCBhIHNwaW4gbG9jay4KKwkJICovCisKKwkJaWYgKHBvbGwpIHsKKwkJCS8qIElu
dGVycnVwdHMgYXJlIGtub3duIGVuYWJsZWQgaW4gcG9sbGluZyByb3V0aW5lICovCisKKyNpZmRl
ZiBDT05GSUdfU0JNQUNfU0tCX0NBQ0hFCisJCQlpZiAoYXRvbWljX3JlYWQgKCZzYi0+dXNlcnMp
ID09IDEgJiYKKwkJCSAgICBhdG9taWNfcmVhZCAoJihza2Jfc2hpbmZvKHNiKS0+ZGF0YXJlZikp
ID09IDEgJiYKKwkJCSAgICAoc2l6ZSA9IChzYi0+ZW5kIC0gc2ItPmhlYWQpKSA+PSBTQk1BQ19T
SVpFX1JFUSAmJgorCQkJICAgIHNiLT5kYXRhX2xlbiA9PSAwICYmCisJCQkgICAgc2ItPmZjbG9u
ZSA9PSBTS0JfRkNMT05FX1VOQVZBSUxBQkxFICYmCisJCQkgICAgLyoKKwkJCSAgICAgKiBBcmUg
dGhlc2UgbGFzdCB0d28gY2hlY2tzIG5lY2Vzc2FyeQorCQkJICAgICAqIGdpdmVuIHRoYXQgZGF0
YV9sZW4gPT0gMCA/IEluIGFueSBjYXNlLAorCQkJICAgICAqIHdlIGRvbid0IHNlZW0gdG8gaGFu
ZGxlIG5vbi1saW5lYXIgc2tfYnVmZnMKKwkJCSAgICAgKiBpbiBzYmRtYV9hZGRfdHhidWZmZXIo
KSwgc28gaXQgbWF5IGJlCisJCQkgICAgICogb3Zlcmx5IHBhcmFub2lkIGhlcmUuLi4KKwkJCSAg
ICAgKi8KKwkJCSAgICBza2Jfc2hpbmZvKHNiKS0+bnJfZnJhZ3MgPT0gMCAmJgorCQkJICAgIHNr
Yl9zaGluZm8oc2IpLT5mcmFnX2xpc3QgPT0gMCkgeworCQkJCXNtcF9ybWIoKTsKKyAgCisJCQkJ
LyoKKwkJCQkgKiBYWFggLSB0aGUgbmV4dCBzZXZlcmFsIGxpbmVzIGFyZSBmcm9tCisJCQkJICog
X19rZnJlZV9za2IoKS4KKwkJCQkgKi8KIAotCQkvKgotCQkgKiAuLiBhbmQgYWR2YW5jZSB0byB0
aGUgbmV4dCBidWZmZXIuCi0JCSAqLworCQkJCWRzdF9yZWxlYXNlKHNiLT5kc3QpOworI2lmZGVm
IENPTkZJR19YRlJNCisJCQkJc2VjcGF0aF9wdXQoc2ItPnNwKTsKKyNlbmRpZgorCQkJCWlmIChz
Yi0+ZGVzdHJ1Y3RvcikgeworCQkJCQlzYi0+ZGVzdHJ1Y3RvcihzYik7CisJCQkJfQorI2lmZGVm
IENPTkZJR19ORVRGSUxURVIKKwkJCQluZl9jb25udHJhY2tfcHV0KHNiLT5uZmN0KTsKKyNpZiBk
ZWZpbmVkKENPTkZJR19ORl9DT05OVFJBQ0spIHx8IGRlZmluZWQoQ09ORklHX05GX0NPTk5UUkFD
S19NT0RVTEUpCisJCQkJbmZfY29ubnRyYWNrX3B1dF9yZWFzbShzYi0+bmZjdF9yZWFzbSk7Cisj
ZW5kaWYKIAotCQlkLT5zYmRtYV9yZW1wdHIgPSBTQkRNQV9ORVhUQlVGKGQsc2JkbWFfcmVtcHRy
KTsKKyNpZmRlZiBDT05GSUdfQlJJREdFX05FVEZJTFRFUgorCQkJCW5mX2JyaWRnZV9wdXQoc2It
Pm5mX2JyaWRnZSk7CisjZW5kaWYKKyNlbmRpZgorCQkJCS8qIFhYWDogSVMgdGhpcyBzdGlsbCBu
ZWNlc3Nhcnk/IC0gSkhTICovCisjaWZkZWYgQ09ORklHX05FVF9TQ0hFRAorCQkJCXNiLT50Y19p
bmRleCA9IDA7CisjaWZkZWYgQ09ORklHX05FVF9DTFNfQUNUCisJCQkJc2ItPnRjX3ZlcmQgPSAw
OworI2VuZGlmCisjZW5kaWYKIAotCQlwYWNrZXRzX2hhbmRsZWQrKzsKKwkJCQlpZiAoc3Bpbl90
cnlsb2NrKCZzYm1hY19za2IubG9jaykpIHsKKwkJCQkJaWYgKCAoaSA9IHNibWFjX3NrYi5pbmRl
eCkgPAorCQkJCQkgICAgU0JNQUNfU0tCX0NBQ0hFX1NJWkUpIHsKKwkJCQkJCXNiLT50cnVlc2l6
ZSA9IHNpemUgKworCQkJCQkJICAgIHNpemVvZiAoc3RydWN0IHNrX2J1ZmYpOworCQkJCQkJc2Jt
YWNfc2tiLmJ1ZltpXSA9IHNiOworCQkJCQkJc2JtYWNfc2tiLmluZGV4ID0gaSArIDE7CisJCQkJ
CQlzcGluX3VubG9jayAoJnNibWFjX3NrYi5sb2NrKTsKKwkJCQkJCWNvbnRpbnVlOworCQkJCQl9
CisJCQkJCXNwaW5fdW5sb2NrICgmc2JtYWNfc2tiLmxvY2spOworCQkJCX0KIAorCQkJCWtmcmVl
X3NrYm1lbSAoc2IpOworCQkJfSBlbHNlICAvKiBTS0JfQ0FDSEUgKi8KKyNlbmRpZiAvKiBDT05G
SUdfU0JNQUNfU0tCX0NBQ0hFICovCisJCQkJZGV2X2tmcmVlX3NrYihzYik7CisJCX0gZWxzZSAv
KiBQb2xsICovCisJCQlkZXZfa2ZyZWVfc2tiX2lycShzYik7CiAJfQogCi0JLyoKLQkgKiBEZWNp
ZGUgaWYgd2Ugc2hvdWxkIHdha2UgdXAgdGhlIHByb3RvY29sIG9yIG5vdC4KLQkgKiBPdGhlciBk
cml2ZXJzIHNlZW0gdG8gZG8gdGhpcyB3aGVuIHdlIHJlYWNoIGEgbG93Ci0JICogd2F0ZXJtYXJr
IG9uIHRoZSB0cmFuc21pdCBxdWV1ZS4KLQkgKi8KKwlpZiAoIChvdXQgPSAoZC0+c2JkbWFfYWRk
cHRyIC0gZC0+c2JkbWFfcmVtcHRyKSkgPCAwKQorCQlvdXQgKz0gU0JNQUNfTUFYX1RYREVTQ1I7
IC8qIGQtPnNiZG1hX21heGRlc2NyOyAqLwogCi0JaWYgKHBhY2tldHNfaGFuZGxlZCkKKwlpZiAo
b3V0IDwgU0JNQUNfTUFYX1RYREVTQ1IgLyAyKQogCQluZXRpZl93YWtlX3F1ZXVlKGQtPnNiZG1h
X2V0aC0+c2JtX2Rldik7CiAKIGVuZF91bmxvY2s6CkBAIC0yMTI3LDQyICsyMjYyLDUzIEBACiAJ
aW50IGhhbmRsZWQgPSAwOwogCiAjaWZkZWYgQ09ORklHX1NCTUFDX05BUEkKLQkJLyoKLQkJICog
UmVhZCB0aGUgSVNSICh0aGlzIGNsZWFycyB0aGUgYml0cyBpbiB0aGUgcmVhbAotCQkgKiByZWdp
c3RlciwgZXhjZXB0IGZvciBjb3VudGVyIGFkZHIpCi0JCSAqLwotCi0JCWlzciA9IF9fcmF3X3Jl
YWRxKHNjLT5zYm1faXNyKSAmIH5NX01BQ19DT1VOVEVSX0FERFI7Ci0KLQkJaWYgKGlzciA9PSAw
KQotCQkgICAgICAgIHJldHVybiBJUlFfUkVUVkFMKDApOwotCQloYW5kbGVkID0gMTsKLQotCQkv
KgotCQkgKiBUcmFuc21pdHMgb24gY2hhbm5lbCAwCi0JCSAqLwotCi0JCWlmIChpc3IgJiAoTV9N
QUNfSU5UX0NIQU5ORUwgPDwgU19NQUNfVFhfQ0gwKSkgewotCQkJc2JkbWFfdHhfcHJvY2Vzcyhz
YywmKHNjLT5zYm1fdHhkbWEpLCAwKTsKLSNpZmRlZiBDT05GSUdfTkVUUE9MTF9UUkFQCi0JCSAg
ICAgICBpZiAobmV0cG9sbF90cmFwKCkpIHsKLQkJCSAgICAgICBpZiAodGVzdF9hbmRfY2xlYXJf
Yml0KF9fTElOS19TVEFURV9YT0ZGLCAmZGV2LT5zdGF0ZSkpIAotCQkJCSAgICAgICBfX25ldGlm
X3NjaGVkdWxlKGRldik7Ci0JCSAgICAgICB9Ci0jZW5kaWYKLQkJfQotCi0JaWYgKGlzciAmIChN
X01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19SWF9DSDApKSB7CisJIC8qCisJICAqIFJlYWQgdGhl
IElTUiAodGhpcyBjbGVhcnMgdGhlIGJpdHMgaW4gdGhlIHJlYWwKKwkgICogcmVnaXN0ZXIsIGV4
Y2VwdCBmb3IgY291bnRlciBhZGRyKQorCSAgKi8KKyAgCQkKKwlpc3IgPSBfX3Jhd19yZWFkcShz
Yy0+c2JtX2lzcikgJiB+TV9NQUNfQ09VTlRFUl9BRERSOworICAJCQorCWlmIChpc3IgPT0gMCkK
KwkgICAgICAgIHJldHVybiBJUlFfUkVUVkFMKDApOworICAKKwloYW5kbGVkID0gMTsKKwkJCisJ
aWYgKGlzciAmICgoTV9NQUNfSU5UX0NIQU5ORUwgPDwgU19NQUNfUlhfQ0gwKSB8CisJCSAgIChN
X01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19UWF9DSDApKSkgewogCQlpZiAobmV0aWZfcnhfc2No
ZWR1bGVfcHJlcChkZXYpKSB7CisJCQlzYy0+c2JtX2V2ZW50cyA9ICh1aW50MzJfdClpc3I7CiAJ
CQlfX3Jhd193cml0ZXEoMCwgc2MtPnNibV9pbXIpOwogCQkJX19uZXRpZl9yeF9zY2hlZHVsZShk
ZXYpOwogCQkJLyogRGVwZW5kIG9uIHRoZSBleGl0IGZyb20gcG9sbCB0byByZWVuYWJsZSBpbnRy
ICovCi0JCX0KLQkJZWxzZSB7Ci0JCQkvKiBtYXkgbGVhdmUgc29tZSBwYWNrZXRzIGJlaGluZCAq
LwotCQkJc2JkbWFfcnhfcHJvY2VzcyhzYywmKHNjLT5zYm1fcnhkbWEpLAotCQkJCQkgU0JNQUNf
TUFYX1JYREVTQ1IgKiAyLCAwKTsKLQkJfQorCQl9IGVsc2UgeworCQkJLyogSW50ZXJydXB0IGFs
cmVhZHkgYWNrbm93bGVkZ2VkLCBzYm1hY19wb2xsKCkKKwkJCSAqIGFscmVhZHkgc2NoZWR1bGVk
LiBEbyBub3RoaW5nLiBTaG91bGRuJ3Qgb2NjdXIKKwkJCSAqIGFueWhvdy4KKwkJCSAqLworI2lm
IDAKKwkJCWlmIChpc3IgJiAoTV9NQUNfSU5UX0NIQU5ORUwgPDwgU19NQUNfVFhfQ0gwKSkgewor
CQkJCXNiZG1hX3R4X3Byb2Nlc3Moc2MsJihzYy0+c2JtX3R4ZG1hKSwgMCk7CisjaWZkZWYgQ09O
RklHX05FVFBPTExfVFJBUAorCQkJCWlmIChuZXRwb2xsX3RyYXAoKSkgeworCQkJCQlpZiAodGVz
dF9hbmRfY2xlYXJfYml0KF9fTElOS19TVEFURV9YT0ZGLCAKKwkJCQkJCQkgICAgICAgJmRldi0+
c3RhdGUpKSAKKwkJCQkJCV9fbmV0aWZfc2NoZWR1bGUoZGV2KTsKKwkJCQl9CisjZW5kaWYKKwkJ
CX0KKwkJCS8qIE5vdGUsIGlmIHRoZSBJU1IgaXMgYWxsb3dlZCB0byBjYWxsCisJCQkgKiBzYmRt
YV9yeF9wcm9jZXNzKCksIHByb3Zpc2lvbnMgaGF2ZSB0byBiZSBtYWRlCisJCQkgKiB3aGVuIHRo
ZSBsb2NhbCBTS0JfQ0FDSEUgaXMgdXNlZDsgaXQgcHJlc2VudGx5CisJCQkgKiBkb2Vzbid0IGhh
dmUgcHJvdGVjdGlvbiBhZ2FpbnN0IGFjY2Vzc2VzIGZyb20KKwkJCSAqIGludGVycnVwdCBsZXZl
bC4KKwkJCSAqLworCQkJaWYgKGlzciAmIChNX01BQ19JTlRfQ0hBTk5FTCA8PCBTX01BQ19SWF9D
SDApKSB7CisJCQkJLyogbWF5IGxlYXZlIHNvbWUgcGFja2V0cyBiZWhpbmQgKi8KKwkJCQlzYmRt
YV9yeF9wcm9jZXNzKHNjLCYoc2MtPnNibV9yeGRtYSksIDMyLCAwKTsKKwkJCX0KKyNlbmRpZiAv
KiAwICovCisgICAgICAgICAgICAgICAgfQogCX0KICNlbHNlCiAJLyogTm9uIE5BUEkgKi8KQEAg
LTIxODAsOCArMjMyNiw3IEBACiAJCWhhbmRsZWQgPSAxOwogCiAJCWlmIChpc3IgJiAoTV9NQUNf
SU5UX0NIQU5ORUwgPDwgU19NQUNfVFhfQ0gwKSkgewotCQkJc2JkbWFfdHhfcHJvY2VzcyhzYywm
KHNjLT5zYm1fdHhkbWEpLAotCQkJCQkgU0JNQUNfTUFYX1JYREVTQ1IgKiAyKTsKKwkJCXNiZG1h
X3R4X3Byb2Nlc3Moc2MsICYoc2MtPnNibV90eGRtYSksIDApOwogI2lmZGVmIENPTkZJR19ORVRQ
T0xMX1RSQVAKIAkJICAgICAgIGlmIChuZXRwb2xsX3RyYXAoKSkgewogCQkJICAgICAgIGlmICh0
ZXN0X2FuZF9jbGVhcl9iaXQoX19MSU5LX1NUQVRFX1hPRkYsICZkZXYtPnN0YXRlKSkgCkBAIC0y
MjMyLDggKzIzNzcsMTUgQEAKIAlzdHJ1Y3Qgc2JtYWNfc29mdGMgKnNjID0gbmV0ZGV2X3ByaXYo
ZGV2KTsKIAogCS8qIGxvY2sgZXRoIGlycSAqLwotCXNwaW5fbG9ja19pcnEgKCZzYy0+c2JtX2xv
Y2spOwogCisJLyogaGFyZF9zdGFydF94bWl0KCkgaXMgYWx3YXlzIGNhbGxlZCB3aXRoIGludGVy
cnVwdHMgZW5hYmxlZCAqLworCWxvY2FsX2lycV9kaXNhYmxlKCk7CisJaWYgKHVubGlrZWx5ICgh
c3Bpbl90cnlsb2NrKCZzYy0+c2JtX2xvY2spKSkgeworCQkvKiBjb2xsaXNpb24gKi8KKwkJbG9j
YWxfaXJxX2VuYWJsZSgpOworCQlyZXR1cm4gTkVUREVWX1RYX0xPQ0tFRDsKKwl9CisgCiAJLyoK
IAkgKiBQdXQgdGhlIGJ1ZmZlciBvbiB0aGUgdHJhbnNtaXQgcmluZy4gIElmIHdlCiAJICogZG9u
J3QgaGF2ZSByb29tLCBzdG9wIHRoZSBxdWV1ZS4KQEAgLTIyNDQsMTQgKzIzOTYsMTQgQEAKIAkJ
bmV0aWZfc3RvcF9xdWV1ZShkZXYpOwogCQlzcGluX3VubG9ja19pcnEoJnNjLT5zYm1fbG9jayk7
CiAKLQkJcmV0dXJuIDE7CisJCXJldHVybiBORVRERVZfVFhfQlVTWTsKIAl9CiAKIAlkZXYtPnRy
YW5zX3N0YXJ0ID0gamlmZmllczsKIAogCXNwaW5fdW5sb2NrX2lycSAoJnNjLT5zYm1fbG9jayk7
CiAKLQlyZXR1cm4gMDsKKwlyZXR1cm4gTkVUREVWX1RYX09LOwogfQogCiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgpAQCAtMjQyMSw3ICsyNTczLDcgQEAKIAlyZXR1cm4gMDsKIH0KICNlbmRpZgotCisJCiBzdGF0
aWMgaW50IHNiMTI1MF9jaGFuZ2VfbXR1KHN0cnVjdCBuZXRfZGV2aWNlICpfZGV2LCBpbnQgbmV3
X210dSkKIHsKIAlpZiAobmV3X210dSA+ICBFTkVUX1BBQ0tFVF9TSVpFKQpAQCAtMjUxMSw2ICsy
NjYzLDggQEAKIAlkZXYtPndlaWdodCAgICAgICAgICAgICA9IDE2OwogI2VuZGlmCiAgCisJZGV2
LT5mZWF0dXJlcyB8PSBORVRJRl9GX0xMVFg7IC8qIGhhcmRfc3RhcnRfeG1pdCBoYW5kbGVzIGxv
Y2tpbmcgKi8KKwogCS8qIFRoaXMgaXMgbmVlZGVkIGZvciBQQVNTMiBmb3IgUnggSC9XIGNoZWNr
c3VtIGZlYXR1cmUgKi8KIAlzYm1hY19zZXRfaXBoZHJfb2Zmc2V0KHNjKTsKIApAQCAtMjkyMiwz
MyArMzA3Niw1NyBAQAogCWludCB3b3JrX3RvX2RvOwogCWludCB3b3JrX2RvbmU7CiAJc3RydWN0
IHNibWFjX3NvZnRjICpzYyA9IG5ldGRldl9wcml2KGRldik7CisJdWludDMyX3QgZXZlbnRzID0g
c2MtPnNibV9ldmVudHM7CisJdWludDMyX3QgbmV3X2V2ZW50cyA9IDA7CiAKLQl3b3JrX3RvX2Rv
ID0gbWluKCpidWRnZXQsIGRldi0+cXVvdGEpOwotCXdvcmtfZG9uZSA9IHNiZG1hX3J4X3Byb2Nl
c3Moc2MsICYoc2MtPnNibV9yeGRtYSksIHdvcmtfdG9fZG8sIDEpOworCWlmIChldmVudHMgJiAo
dWludDMyX3QpKE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFDX1JYX0NIMCkpIHsKKwkJd29ya190
b19kbyA9IGRldi0+cXVvdGE7CisJCXdvcmtfZG9uZSA9IHNiZG1hX3J4X3Byb2Nlc3Moc2MsICYo
c2MtPnNibV9yeGRtYSksCisJCQkJCSAgICAgd29ya190b19kbywgMSk7CiAKLQlpZiAod29ya19k
b25lID4gd29ya190b19kbykKLQkJcHJpbnRrKEtFUk5fRVJSICIlcyBleGNlZWRlZCB3b3JrX3Rv
X2RvIGJ1ZGdldD0lZCBxdW90YT0lZCB3b3JrLWRvbmU9JWRcbiIsCi0JCSAgICAgICBzYy0+c2Jt
X2Rldi0+bmFtZSwgKmJ1ZGdldCwgZGV2LT5xdW90YSwgd29ya19kb25lKTsKKyNpZiAwCisJCWlm
ICh3b3JrX2RvbmUgPiB3b3JrX3RvX2RvKQorCQkJcHJpbnRrKEtFUk5fRVJSICIlcyBleGNlZWRl
ZCB3b3JrX3RvX2RvIGJ1ZGdldD0lZCAiCisJCQkgICAgICAgInF1b3RhPSVkIHdvcmstZG9uZT0l
ZFxuIiwKKwkJCSAgICAgICBzYy0+c2JtX2Rldi0+bmFtZSwgKmJ1ZGdldCwgZGV2LT5xdW90YSwK
KwkJCSAgICAgICB3b3JrX2RvbmUpOworI2VuZGlmCisJCSpidWRnZXQgLT0gd29ya19kb25lOwor
CQlkZXYtPnF1b3RhIC09IHdvcmtfZG9uZTsKKwkJaWYgKHdvcmtfZG9uZSA+PSB3b3JrX3RvX2Rv
KQorCQkJbmV3X2V2ZW50cyA9ICh1aW50MzJfdCkoTV9NQUNfSU5UX0NIQU5ORUwgPDwKKwkJCQkJ
CVNfTUFDX1JYX0NIMCk7CisJfQogCi0Jc2JkbWFfdHhfcHJvY2VzcyhzYywgJihzYy0+c2JtX3R4
ZG1hKSwgMSk7CisJaWYgKGV2ZW50cyAmICh1aW50MzJfdCkoTV9NQUNfSU5UX0NIQU5ORUwgPDwg
U19NQUNfVFhfQ0gwKSkgeworCQlzYmRtYV90eF9wcm9jZXNzKHNjLCAmKHNjLT5zYm1fdHhkbWEp
LCAxKTsKKwl9CiAKLQkqYnVkZ2V0IC09IHdvcmtfZG9uZTsKLQlkZXYtPnF1b3RhIC09IHdvcmtf
ZG9uZTsKKwkvKgorCSAqIElmIHdlIGZvdW5kIG5vIG1vcmUgVFggb3IgUlggd29yayB0byBkbywg
ZG9uJ3QgcmVzY2hlZHVsZSwKKwkgKiByZWVuYWJsZSBpbnRlcnJ1cHRzLgorCSAqLworCXNjLT5z
Ym1fZXZlbnRzID0gbmV3X2V2ZW50cyB8CisJICAgICgodWludDMyX3QpX19yYXdfcmVhZHEoc2Mt
PnNibV9pc3IpICYKKwkgICAgICh1aW50MzJfdCkgKChNX01BQ19JTlRfQ0hBTk5FTCA8PCBTX01B
Q19SWF9DSDApIHwKKwkJCSAoTV9NQUNfSU5UX0NIQU5ORUwgPDwgU19NQUNfVFhfQ0gwKSkpOwog
Ci0JaWYgKHdvcmtfZG9uZSA8IHdvcmtfdG9fZG8pIHsKKwlpZiAoc2MtPnNibV9ldmVudHMgPT0g
MCkgewogCQluZXRpZl9yeF9jb21wbGV0ZShkZXYpOwogCiAjaWZkZWYgQ09ORklHX1NCTUFDX0NP
QUxFU0NFCi0JCV9fcmF3X3dyaXRlcSgoKE1fTUFDX0lOVF9FT1BfQ09VTlQgfCBNX01BQ19JTlRf
RU9QX1RJTUVSKSA8PCBTX01BQ19UWF9DSDApIHwKLQkJCSAgICAgKChNX01BQ19JTlRfRU9QX0NP
VU5UIHwgTV9NQUNfSU5UX0VPUF9USU1FUikgPDwgU19NQUNfUlhfQ0gwKSwgCi0JCQkgICAgIHNj
LT5zYm1faW1yKTsKKwkJX19yYXdfd3JpdGVxKCgoTV9NQUNfSU5UX0VPUF9DT1VOVCB8IE1fTUFD
X0lOVF9FT1BfVElNRVIpCisJCQkJPDwgU19NQUNfVFhfQ0gwKSB8CisJCQkgICAgICgoTV9NQUNf
SU5UX0VPUF9DT1VOVCB8IE1fTUFDX0lOVF9FT1BfVElNRVIpCisJCQkJPDwgU19NQUNfUlhfQ0gw
KSwgc2MtPnNibV9pbXIpOwogI2Vsc2UKIAkJX19yYXdfd3JpdGVxKChNX01BQ19JTlRfQ0hBTk5F
TCA8PCBTX01BQ19UWF9DSDApIHwKLQkJCSAgICAgKE1fTUFDX0lOVF9DSEFOTkVMIDw8IFNfTUFD
X1JYX0NIMCksIHNjLT5zYm1faW1yKTsKKwkJCSAgICAgICAoTV9NQUNfSU5UX0NIQU5ORUwgPDwg
U19NQUNfUlhfQ0gwKSwgc2MtPnNibV9pbXIpOwogI2VuZGlmCisJCXJldHVybiAwOwogCX0KIAot
CXJldHVybiAod29ya19kb25lID49IHdvcmtfdG9fZG8pOworCXJldHVybiAxOwogfQogI2VuZGlm
CiAKQEAgLTMwNzIsNiArMzI1MCwyMCBAQAogCXJldHVybiAwOwogfQogCisjaWZkZWYgQ09ORklH
X1NCTUFDX1NLQl9DQUNIRQorc3RhdGljIHZvaWQgc2JtYWNfc2tiX2NhY2hlX2ZsdXNoICh2b2lk
KQoreworCXN0cnVjdCBza19idWZmICogc2I7CisJc3Bpbl9sb2NrICgmc2JtYWNfc2tiLmxvY2sp
OworCXdoaWxlIChzYm1hY19za2IuaW5kZXggPiAwKSB7CisJCXNiID0gc2JtYWNfc2tiLmJ1ZiBb
LS1zYm1hY19za2IuaW5kZXhdOworCQlzcGluX3VubG9jayAoJnNibWFjX3NrYi5sb2NrKTsgLyog
cHJvYmFibHkgbm90IG5lY2Vzc2FyeSAqLworCQlrZnJlZV9za2JtZW0gKHNiKTsKKwkJc3Bpbl9s
b2NrICgmc2JtYWNfc2tiLmxvY2spOworCX0KKwlzcGluX3VubG9jayAoJnNibWFjX3NrYi5sb2Nr
KTsKK30KKyNlbmRpZiAvKiBDT05GSUdfU0JNQUNfU0tCX0NBQ0hFICovCiAKIHN0YXRpYyB2b2lk
IF9fZXhpdAogc2JtYWNfY2xlYW51cF9tb2R1bGUodm9pZCkKQEAgLTMwOTAsNiArMzI4Miw5IEBA
CiAJCXNibWFjX3VuaW5pdGN0eChzYyk7CiAJCWZyZWVfbmV0ZGV2KGRldik7CiAJfQorI2lmZGVm
IENPTkZJR19TQk1BQ19TS0JfQ0FDSEUKKwlzYm1hY19za2JfY2FjaGVfZmx1c2goKTsKKyNlbmRp
ZgogfQogCiBtb2R1bGVfaW5pdChzYm1hY19pbml0X21vZHVsZSk7Cg==

------_=_NextPart_001_01C6E0F4.F7DE01E5--
