Received: with ECARTIS (v1.0.0; list linux-mips); Mon, 06 Aug 2007 13:19:03 +0100 (BST)
Received: from ns2.suse.de ([195.135.220.15]:13975 "EHLO mx2.suse.de")
	by ftp.linux-mips.org with ESMTP id S20026012AbXHFMTB (ORCPT
	<rfc822;linux-mips@linux-mips.org>); Mon, 6 Aug 2007 13:19:01 +0100
Received: from Relay1.suse.de (mail2.suse.de [195.135.221.8])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx2.suse.de (Postfix) with ESMTP id 1BB43218BE;
	Mon,  6 Aug 2007 14:17:52 +0200 (CEST)
Date:	Mon, 06 Aug 2007 14:17:50 +0200
Message-ID: <s5hejigq2kx.wl%tiwai@suse.de>
From:	Takashi Iwai <tiwai@suse.de>
To:	Songmao Tian <tiansm@lemote.com>
Cc:	linux-mips@linux-mips.org, Atsushi Nemoto <anemo@mba.ocn.ne.jp>,
	alsa-devel@alsa-project.org, Dajie Tan <jiankemeng@gmail.com>,
	greg@kroah.com
Subject: Re: [alsa-devel] ALSA on MIPS platform
In-Reply-To: <46B35053.8050307@lemote.com>
References: <46B03CC0.3090000@lemote.com>
	<20070802.235606.122255120.anemo@mba.ocn.ne.jp>
	<46B332AC.8020403@lemote.com>
	<s5habt8ra5l.wl%tiwai@suse.de>
	<46B35053.8050307@lemote.com>
User-Agent: Wanderlust/2.15.5 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.7 (=?ISO-8859-4?Q?Sanj=F2?=) APEL/10.6 MULE XEmacs/21.5 (beta27)
 (fiddleheads) (+CVS-20060704) (i386-suse-linux)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Return-Path: <tiwai@suse.de>
X-Envelope-To: <"|/home/ecartis/ecartis -s linux-mips"> (uid 0)
X-Orcpt: rfc822;linux-mips@linux-mips.org
Original-Recipient: rfc822;linux-mips@linux-mips.org
X-archive-position: 16071
X-ecartis-version: Ecartis v1.0.0
Sender: linux-mips-bounce@linux-mips.org
Errors-to: linux-mips-bounce@linux-mips.org
X-original-sender: tiwai@suse.de
Precedence: bulk
X-list: linux-mips

At Fri, 03 Aug 2007 23:57:07 +0800,
Songmao Tian wrote:
> 
> Takashi Iwai wrote:
> > At Fri, 03 Aug 2007 21:50:36 +0800,
> > Songmao Tian wrote:
> >   
> >> Atsushi Nemoto wrote:
> >>     
> >>> On Wed, 01 Aug 2007 15:56:48 +0800, Songmao Tian <tiansm@lemote.com> wrote:
> >>>   
> >>>       
> >>>>     The problem is clear:
> >>>> 1. dma_alloc_noncoherent() return a non-cached address, and 
> >>>> virt_to_page() need a cached logical addr (Have I named it right?)
> >>>> 2. mmaped dam buffer should be non-cached.
> >>>>
> >>>> We have a ugly patch, but we want to solve the problem cleanly, so can 
> >>>> anyone show me the way?
> >>>>     
> >>>>         
> >>> virt_to_page() is used in many place in mm so making it robust might
> >>> affect performance.  IMHO virt_to_page() seems too low-level as DMA
> >>> API.
> >>>
> >>> If something like dma_virt_to_page(dev, cpu_addr) which can take a cpu
> >>> address returned by dma_xxx APIs was defined, MIPS can implement it
> >>> appropriately.
> >>>
> >>> And then pgprot_noncached issues still exist...
> >>>
> >>> ---
> >>> Atsushi Nemoto
> >>>
> >>>
> >>>
> >>>   
> >>>       
> >> I agree, and I am investigating to implement a dma_map_coherent, but It 
> >> seems dma_map_coherent doesn't solve all the problem and will change a 
> >> lot of code:(
> >>     
> >
> > It won't be that much.  You'll need to change snd_pcm_default_mmap()
> > in sound/core/pcm_native.c to call dma_mmap_coherent() directly
> > instead of nopage ops.  But, this won't work with SG-buffers, which
> > requires some more additional works.
> >
> >
> > Takashi
> > _______________________________________________
> > Alsa-devel mailing list
> > Alsa-devel@alsa-project.org
> > http://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> >
> >
> >   
> I have no idea if the patch can work, the idea is not very clear now.
> And I use vt686b ac97 sound driver, the driver use sgbuf, so I will 
> write a test program tomorrow. Good sleep...:)

Ah, that's a bad luck.  Then your patch won't work as it is.
We'll need another function for SG-buffer, that calls
dma_mmap_coherent() for each page found in the given buffer.


Takashi

> And if any of you can take some time look into the patch, and give some 
> review will be appreciated:)
> 
> diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c
> index 76903c7..f088a6b 100644
> --- a/arch/mips/mm/dma-default.c
> +++ b/arch/mips/mm/dma-default.c
> @@ -369,3 +369,23 @@ void dma_cache_sync(struct device *dev, void 
> *vaddr, size_t size,
>  }
>  
>  EXPORT_SYMBOL(dma_cache_sync);
> +
> +static int dma_mmap(struct device *dev, struct vm_area_struct *vma,
> +            void *cpu_addr, dma_addr_t dma_addr, size_t size)
> +{
> +    if (remap_pfn_range(vma, vma->vm_start,
> +                  PFN_DOWN(virt_to_phys(CAC_ADDR(cpu_addr))) + 
> vma->vm_pgoff,
> +                  vma->vm_end - vma->vm_start,
> +                  vma->vm_page_prot))
> +        return -EAGAIN;
> +    return 0;
> +}
> +
> +int dma_mmap_coherent(struct device *dev, struct vm_area_struct *vma,
> +              void *cpu_addr, dma_addr_t dma_addr, size_t size)
> +{
> +    vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);
> +    return dma_mmap(dev, vma, cpu_addr, dma_addr, size);
> +}
> +EXPORT_SYMBOL(dma_mmap_coherent);
> +
> diff --git a/sound/core/pcm_native.c b/sound/core/pcm_native.c
> index 59b29cd..af82a3b 100644
> --- a/sound/core/pcm_native.c
> +++ b/sound/core/pcm_native.c
> @@ -3152,6 +3152,8 @@ static struct vm_operations_struct 
> snd_pcm_vm_ops_data =
>      .close =    snd_pcm_mmap_data_close,
>      .nopage =    snd_pcm_mmap_data_nopage,
>  };
> +int dma_mmap_coherent(struct device *dev, struct vm_area_struct *vma,
> +              void *cpu_addr, dma_addr_t dma_addr, size_t size);
>  
>  /*
>   * mmap the DMA buffer on RAM
> @@ -3159,9 +3161,10 @@ static struct vm_operations_struct 
> snd_pcm_vm_ops_data =
>  static int snd_pcm_default_mmap(struct snd_pcm_substream *substream,
>                  struct vm_area_struct *area)
>  {
> -    area->vm_ops = &snd_pcm_vm_ops_data;
> +    struct snd_pcm_runtime *runtime = substream->runtime;
>      area->vm_private_data = substream;
> -    area->vm_flags |= VM_RESERVED;
> +    dma_mmap_coherent(NULL, area, runtime->dma_area,
> +            runtime->dma_addr, runtime->dma_bytes);
>      atomic_inc(&substream->mmap_count);
>      return 0;
>  }
> _______________________________________________
> Alsa-devel mailing list
> Alsa-devel@alsa-project.org
> http://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> 
