Received: with ECARTIS (v1.0.0; list linux-mips); Tue, 12 Jun 2007 10:55:59 +0100 (BST)
Received: from py-out-1112.google.com ([64.233.166.183]:20212 "EHLO
	py-out-1112.google.com") by ftp.linux-mips.org with ESMTP
	id S20021956AbXFLJz4 (ORCPT <rfc822;linux-mips@linux-mips.org>);
	Tue, 12 Jun 2007 10:55:56 +0100
Received: by py-out-1112.google.com with SMTP id f31so3235639pyh
        for <linux-mips@linux-mips.org>; Tue, 12 Jun 2007 02:55:54 -0700 (PDT)
DKIM-Signature:	a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
        b=FsrIeSaoQg4ckZXTrZPOM7ytGavlbCG2CD7JgtpClgOUVW3ctxpOtBsxpY9EWlyopvbnluqoSlshHTbDXCgvnUE1KPcxDdExoqiTVhZy54jB0xXiteEVws91rhYOyUwedfVJLcdrTlax7Uc/0Po3exBSnrHj3Je7Rry81aEaygo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=K65AxxSWaL2mLagRVWc8SMfyvmxMvmyOOIhq4UU40ljQx5PFlMUPz8/3IWWVBuB6bVNfXLYlpFor3j/dFUj0HH347cT0O9ozzzbccLVbyZW948MD0EU8W0En5lALxu25ybAM1n8j/WovgLfhMREf7NEMDoiF95gOkKem7KtAKu8=
Received: by 10.64.213.3 with SMTP id l3mr10989437qbg.1181642154494;
        Tue, 12 Jun 2007 02:55:54 -0700 (PDT)
Received: by 10.65.204.8 with HTTP; Tue, 12 Jun 2007 02:55:54 -0700 (PDT)
Message-ID: <cda58cb80706120255w5ef28123tc27a8152d18e3039@mail.gmail.com>
Date:	Tue, 12 Jun 2007 11:55:54 +0200
From:	"Franck Bui-Huu" <vagabon.xyz@gmail.com>
To:	"Linux MIPS List" <linux-mips@linux-mips.org>,
	"Ralf Baechle" <ralf@linux-mips.org>, sshtylyov@ru.mvista.com,
	"Atsushi Nemoto" <anemo@mba.ocn.ne.jp>
Subject: [RFD] Clockevent support on MIPS
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_2524_10412673.1181642154444"
Return-Path: <vagabon.xyz@gmail.com>
X-Envelope-To: <"|/home/ecartis/ecartis -s linux-mips"> (uid 0)
X-Orcpt: rfc822;linux-mips@linux-mips.org
Original-Recipient: rfc822;linux-mips@linux-mips.org
X-archive-position: 15376
X-ecartis-version: Ecartis v1.0.0
Sender: linux-mips-bounce@linux-mips.org
Errors-to: linux-mips-bounce@linux-mips.org
X-original-sender: vagabon.xyz@gmail.com
Precedence: bulk
X-list: linux-mips

------=_Part_2524_10412673.1181642154444
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi all,

I sent this patch just for starting a discussion on the MIPS time
code rework.

Recently Ralf announced his start of work on "clockevent support". I
tried to write my own clockevent support by that time. I reuse some
part of Ralf's work but end up to remove more code. I left it in a
very unfinished state because I don't have a lot of time to spend on
it and it should be sufficient as a starting point.

There's only one timer_interrupt handler left. Since Linux generic
time code takes care, now, of SMP and others issues. I also removed the
hackish low level interrupt handler since I'm not sure it's a clear win.

All code dealing with hpt has been moved in a file called
"hpt.c". Therefore we can easily stop compiling this code on platforms
that don't have it or don't want to use it. For platforms that don't
use this timer, they need to add their own timer support, but with the
generic time code it now really easy, and code duplication should be
minimal.

I changed platform time init hooks since it seems to be the time for
that but I'm really not sure on that point though.

This patch is based on recent linux-mips repo
(linux-2.6.22-rc4-3-g38fc544) but I could rebase it on linux-time repo
if needed. If you want to compile/test it, you'll need to implement the
new platform hooks. It should be fairly simple for most of MIPS platforms...

Thanks,
-- 
               Franck

------=_Part_2524_10412673.1181642154444
Content-Type: text/x-patch; name=0001-clockevents-support.patch; 
	charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64
X-Attachment-Id: f_f2u72hb5
Content-Disposition: attachment; filename="0001-clockevents-support.patch"

RnJvbSA3YjMyYTUzMWVhMTU2ODQxMWFjYzA4MWRhNjJmNGVkNjZlNDJkZjk3IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBGcmFuY2sgQnVpLUh1dSA8ZnJhbmNrLmJ1aS1odXVAaW5ub3Zh
LWNhcmQuY29tPgpEYXRlOiBGcmksIDExIE1heSAyMDA3IDA5OjU1OjM1ICswMjAwClN1YmplY3Q6
IFtQQVRDSF0gY2xvY2tldmVudHMgc3VwcG9ydAoKU2lnbmVkLW9mZi1ieTogRnJhbmNrIEJ1aS1I
dXUgPGZyYW5jay5idWktaHV1QGlubm92YS1jYXJkLmNvbT4KLS0tCiBhcmNoL21pcHMvS2NvbmZp
ZyAgICAgICAgIHwgICAgOSArKwogYXJjaC9taXBzL2tlcm5lbC9NYWtlZmlsZSB8ICAgIDQgKy0K
IGFyY2gvbWlwcy9rZXJuZWwvaHB0LmMgICAgfCAgMjIxICsrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKwogYXJjaC9taXBzL2tlcm5lbC9zbXAuYyAgICB8ICAgIDEg
KwogYXJjaC9taXBzL2tlcm5lbC90aW1lMi5jICB8ICAgODQgKysrKysrKysrKysrKysrKysKIGFy
Y2gvbWlwcy9saWIvTWFrZWZpbGUgICAgfCAgICAyICstCiBhcmNoL21pcHMvbGliL3RpbWUuYyAg
ICAgIHwgICA1MiArKysrKysrKysrKwogYXJjaC9taXBzL3VzaXAvaXJxLmMgICAgICB8ICAgIDUg
Ky0KIGluY2x1ZGUvYXNtLW1pcHMvdGltZS5oICAgfCAgIDIzICsrLS0tLQogOSBmaWxlcyBjaGFu
Z2VkLCAzNzcgaW5zZXJ0aW9ucygrKSwgMjQgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2
NDQgYXJjaC9taXBzL2tlcm5lbC9ocHQuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGFyY2gvbWlwcy9r
ZXJuZWwvdGltZTIuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGFyY2gvbWlwcy9saWIvdGltZS5jCgpk
aWZmIC0tZ2l0IGEvYXJjaC9taXBzL0tjb25maWcgYi9hcmNoL21pcHMvS2NvbmZpZwppbmRleCBk
YTI1M2JjLi4zZjdlYWYzIDEwMDY0NAotLS0gYS9hcmNoL21pcHMvS2NvbmZpZworKysgYi9hcmNo
L21pcHMvS2NvbmZpZwpAQCAtNzIzLDYgKzcyMywxNCBAQCBjb25maWcgR0VORVJJQ19USU1FCiAJ
Ym9vbAogCWRlZmF1bHQgeQogCitjb25maWcgR0VORVJJQ19DTE9DS0VWRU5UUworCWJvb2wKKwlk
ZWZhdWx0IHkKKworY29uZmlnIEdFTkVSSUNfQ01PU19VUERBVEUKKwlib29sCisJZGVmYXVsdCB5
CisKIGNvbmZpZyBTQ0hFRF9OT19OT19PTUlUX0ZSQU1FX1BPSU5URVIKIAlib29sCiAJZGVmYXVs
dCB5CkBAIC0xNzM3LDYgKzE3NDUsNyBAQCBjb25maWcgSFoKIAlkZWZhdWx0IDEwMDAgaWYgSFpf
MTAwMAogCWRlZmF1bHQgMTAyNCBpZiBIWl8xMDI0CiAKK3NvdXJjZSAia2VybmVsL3RpbWUvS2Nv
bmZpZyIKIHNvdXJjZSAia2VybmVsL0tjb25maWcucHJlZW1wdCIKIAogY29uZmlnIE1JUFNfSU5T
QU5FX0xBUkdFCmRpZmYgLS1naXQgYS9hcmNoL21pcHMva2VybmVsL01ha2VmaWxlIGIvYXJjaC9t
aXBzL2tlcm5lbC9NYWtlZmlsZQppbmRleCA0OTI0NjI2Li5mODM2NzBlIDEwMDY0NAotLS0gYS9h
cmNoL21pcHMva2VybmVsL01ha2VmaWxlCisrKyBiL2FyY2gvbWlwcy9rZXJuZWwvTWFrZWZpbGUK
QEAgLTQsOSArNCw5IEBACiAKIGV4dHJhLXkJCTo9IGhlYWQubyBpbml0X3Rhc2subyB2bWxpbnV4
LmxkcwogCi1vYmoteQkJKz0gY3B1LXByb2JlLm8gYnJhbmNoLm8gZW50cnkubyBnZW5leC5vIGly
cS5vIHByb2Nlc3MubyBcCitvYmoteQkJKz0gY3B1LXByb2JlLm8gYnJhbmNoLm8gZW50cnkubyBn
ZW5leC5vIGhwdC5vIGlycS5vIHByb2Nlc3MubyBcCiAJCSAgIHB0cmFjZS5vIHJlc2V0Lm8gc2Vt
YXBob3JlLm8gc2V0dXAubyBzaWduYWwubyBzeXNjYWxsLm8gXAotCQkgICB0aW1lLm8gdG9wb2xv
Z3kubyB0cmFwcy5vIHVuYWxpZ25lZC5vCisJCSAgIHRpbWUyLm8gdG9wb2xvZ3kubyB0cmFwcy5v
IHVuYWxpZ25lZC5vCiAKIGJpbmZtdF9pcml4LW9ianMJOj0gaXJpeGVsZi5vIGlyaXhpbnYubyBp
cml4aW9jdGwubyBpcml4c2lnLm8JXAogCQkJICAgaXJpeDVzeXMubyBzeXNpcml4Lm8KZGlmZiAt
LWdpdCBhL2FyY2gvbWlwcy9rZXJuZWwvaHB0LmMgYi9hcmNoL21pcHMva2VybmVsL2hwdC5jCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjMxZmUwNzEKLS0tIC9kZXYvbnVsbAor
KysgYi9hcmNoL21pcHMva2VybmVsL2hwdC5jCkBAIC0wLDAgKzEsMjIxIEBACisjaW5jbHVkZSA8
bGludXgva2VybmVsX3N0YXQuaD4KKyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1
ZGUgPGxpbnV4L2Nsb2NrY2hpcHMuaD4KKyNpbmNsdWRlIDxsaW51eC9jbG9ja3NvdXJjZS5oPgor
CisjaW5jbHVkZSA8YXNtL3RpbWUuaD4KKworI2RlZmluZSBNSVBTX0hQVF9OQU1FCSJNSVBTLUhQ
VCIKKwordW5zaWduZWQgaW50IG1pcHNfaHB0X2ZyZXF1ZW5jeSBfX3JlYWRfbW9zdGx5OworCisv
KgorICogY3AwIGhwdCBvcGVyYXRpb25zLiBDYW4gYmUgb3ZlcnJpZGVuIGJ5IHBsYXRmb3JtIGNv
ZGUKKyAqLwordm9pZCBfX3dlYWsgbWlwc19ocHRfYWNrKHZvaWQpCit7CisJd3JpdGVfYzBfY29t
cGFyZShyZWFkX2MwX2NvbXBhcmUoKSk7Cit9CisKK2N5Y2xlX3QgX193ZWFrIG1pcHNfaHB0X3Jl
YWQodm9pZCkKK3sKKyAgICAgICAgcmV0dXJuIHJlYWRfYzBfY291bnQoKTsKK30KKworLyoKKyAq
IENsb2Nrc291cmNlCisgKi8KK3N0cnVjdCBjbG9ja3NvdXJjZSBocHRfY2xvY2tzb3VyY2UgPSB7
CisJLm5hbWUJCT0gTUlQU19IUFRfTkFNRSwKKwkubWFzawkJPSBDTE9DS1NPVVJDRV9NQVNLKDMy
KSwKKwkuZmxhZ3MJCT0gQ0xPQ0tfU09VUkNFX0lTX0NPTlRJTlVPVVMsCisJLnJlYWQJCT0gbWlw
c19ocHRfcmVhZCwKK307CisKK3N0YXRpYyBpbnQgbWlwc19ocHRfcmF0aW5nKHZvaWQpCit7CisJ
cmV0dXJuIDIwMCArIG1pcHNfaHB0X2ZyZXF1ZW5jeSAvIDEwMDAwMDAwOworfQorCitzdGF0aWMg
dm9pZCBfX2luaXQgc2V0dXBfaHB0X2Nsb2Nrc291cmNlKHZvaWQpCit7CisJdTY0IG11bHQ7CisJ
dW5zaWduZWQgc2hpZnQgPSAwOworCisJZm9yIChzaGlmdCA9IDMyOyBzaGlmdCA+IDA7IHNoaWZ0
LS0pIHsKKwkJbXVsdCA9ICh1NjQpTlNFQ19QRVJfU0VDIDw8IHNoaWZ0OworCQlkb19kaXYobXVs
dCwgbWlwc19ocHRfZnJlcXVlbmN5KTsKKwkJaWYgKChtdWx0ID4+IDMyKSA9PSAwKQorCQkJYnJl
YWs7CisJfQorCisJaHB0X2Nsb2Nrc291cmNlLnNoaWZ0ID0gc2hpZnQ7CisJaHB0X2Nsb2Nrc291
cmNlLm11bHQgPSBtdWx0OworCWhwdF9jbG9ja3NvdXJjZS5yYXRpbmcgPSBtaXBzX2hwdF9yYXRp
bmcoKTsKKworCWNsb2Nrc291cmNlX3JlZ2lzdGVyKCZocHRfY2xvY2tzb3VyY2UpOworfQorCisv
KgorICogSGlnaCBwcmVjaXNpb24gdGltZXIgZnVuY3Rpb25zIGZvciBhIFI0ay1jb21wYXRpYmxl
IHRpbWVyLgorICovCisKK3N0YXRpYyBpbnQgbWlwc19ocHRfc2V0X25leHRfZXZlbnQodW5zaWdu
ZWQgbG9uZyBkZWx0YSwKKwkJCQkgICBzdHJ1Y3QgY2xvY2tfZXZlbnRfZGV2aWNlICpldnQpCit7
CisJdW5zaWduZWQgaW50IGNudDsKKworCUJVR19PTihldnQtPm1vZGUgIT0gQ0xPQ0tfRVZUX01P
REVfT05FU0hPVCk7CisKKwkvKiBpbnRlcnJ1cHQgYWNrIGlzIGRvbmUgYnkgc2V0dGluZyB1cCB0
aGUgbmV4dCBldmVudCAqLworCWNudCA9IHJlYWRfYzBfY291bnQoKTsKKwljbnQgKz0gZGVsdGE7
CisJd3JpdGVfYzBfY29tcGFyZShjbnQpOworCisJcmV0dXJuICgobG9uZykocmVhZF9jMF9jb3Vu
dCgpIC0gY250ICkgPiAwKSA/IC1FVElNRSA6IDA7Cit9CisKK3N0YXRpYyB2b2lkIG1pcHNfaHB0
X3NldHVwKGVudW0gY2xvY2tfZXZlbnRfbW9kZSBtb2RlLAorCQkJICAgc3RydWN0IGNsb2NrX2V2
ZW50X2RldmljZSAqZXZ0KQoreworCS8qIG5vdGhpbmcgdG8gZG8gKi8KK30KKworc3RhdGljIHN0
cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgaHB0X2Nsb2NrZXZlbnQgPSB7CisJLm5hbWUJCT0gTUlQ
U19IUFRfTkFNRSwKKwkubW9kZQkJPSBDTE9DS19FVlRfTU9ERV9VTlVTRUQsCisJLmZlYXR1cmVz
CT0gQ0xPQ0tfRVZUX0ZFQVRfT05FU0hPVCwKKwkuc2hpZnQJCT0gMzIsCisJLnNldF9tb2RlCT0g
bWlwc19ocHRfc2V0dXAsCisJLnNldF9uZXh0X2V2ZW50CT0gbWlwc19ocHRfc2V0X25leHRfZXZl
bnQsCisJLmlycQkJPSAtMSwKK307CisKK3N0YXRpYyBERUZJTkVfUEVSX0NQVShzdHJ1Y3QgY2xv
Y2tfZXZlbnRfZGV2aWNlLCBtaXBzX2Nsb2NrX2V2ZW50cyk7CisKK3N0YXRpYyB2b2lkIF9faW5p
dCBmaW5hbGl6ZV9ocHRfY2xvY2tldmVudCh2b2lkKQoreworCWhwdF9jbG9ja2V2ZW50Lm11bHQg
PSBkaXZfc2MobWlwc19ocHRfZnJlcXVlbmN5LCBOU0VDX1BFUl9TRUMsIDMyKTsKKwlocHRfY2xv
Y2tldmVudC5tYXhfZGVsdGFfbnMgPSBjbG9ja2V2ZW50X2RlbHRhMm5zKC0xLCAmaHB0X2Nsb2Nr
ZXZlbnQpOworCWhwdF9jbG9ja2V2ZW50Lm1pbl9kZWx0YV9ucyA9IGNsb2NrZXZlbnRfZGVsdGEy
bnMoKzEsICZocHRfY2xvY2tldmVudCk7CisJaHB0X2Nsb2NrZXZlbnQucmF0aW5nID0gbWlwc19o
cHRfcmF0aW5nKCk7Cit9CisKK3ZvaWQgX19pbml0IHNldHVwX2hwdF9jbG9ja2V2ZW50KHZvaWQp
Cit7CisJc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqY2Q7CisKKwljZCA9ICZfX2dldF9jcHVf
dmFyKG1pcHNfY2xvY2tfZXZlbnRzKTsKKworCW1lbWNweShjZCwgJmhwdF9jbG9ja2V2ZW50LCBz
aXplb2YoKmNkKSk7CisJY2QtPmNwdW1hc2sgPSBjcHVtYXNrX29mX2NwdShzbXBfcHJvY2Vzc29y
X2lkKCkpOworCisJY2xvY2tldmVudHNfcmVnaXN0ZXJfZGV2aWNlKGNkKTsKK30KKworLyoKKyAq
IFBlcmZvcm1hbmNlIGNvdW50ZXIgSVJRIG9yIC0xIGlmIHNoYXJlZCB3aXRoIHRpbWVyCisgKi8K
K2ludCBtaXBzeHhfcGVyZmNvdW50X2lycTsKKworaW50IG51bGxfcGVyZl9pcnEodm9pZCkKK3sK
KwlyZXR1cm4gMDsKK30KKworaW50ICgqcGVyZl9pcnEpKHZvaWQpID0gbnVsbF9wZXJmX2lycTsK
KworRVhQT1JUX1NZTUJPTChtaXBzeHhfcGVyZmNvdW50X2lycSk7CitFWFBPUlRfU1lNQk9MKG51
bGxfcGVyZl9pcnEpOworRVhQT1JUX1NZTUJPTChwZXJmX2lycSk7CisKKy8qCisgKiBQb3NzaWJs
eSBoYW5kbGUgYSBwZXJmb3JtYW5jZSBjb3VudGVyIGludGVycnVwdC4KKyAqIFJldHVybiB0cnVl
IGlmIHRoZSB0aW1lciBpbnRlcnJ1cHQgc2hvdWxkIG5vdCBiZSBjaGVja2VkCisgKi8KK3N0YXRp
YyBpbmxpbmUgaW50IGhhbmRsZV9wZXJmX2lycSAoaW50IHIyKQoreworCS8qCisJICogVGhlIHBl
cmZvcm1hbmNlIGNvdW50ZXIgb3ZlcmZsb3cgaW50ZXJydXB0IG1heSBiZSBzaGFyZWQgd2l0aCB0
aGUKKwkgKiB0aW1lciBpbnRlcnJ1cHQgKG1pcHN4eF9wZXJmY291bnRfaXJxIDwgMCkuIElmIGl0
IGlzIGFuZCBhCisJICogcGVyZm9ybWFuY2UgY291bnRlciBoYXMgb3ZlcmZsb3dlZCAocGVyZl9p
cnEoKSA9PSBJUlFfSEFORExFRCkKKwkgKiBhbmQgd2UgY2FuJ3QgcmVsaWFibHkgZGV0ZXJtaW5l
IGlmIGEgY291bnRlciBpbnRlcnJ1cHQgaGFzIGFsc28KKwkgKiBoYXBwZW5lZCAoIXIyKSB0aGVu
IGRvbid0IGNoZWNrIGZvciBhIHRpbWVyIGludGVycnVwdC4KKwkgKi8KKwlyZXR1cm4gbWlwc3h4
X3BlcmZjb3VudF9pcnEgPCAwICYmCisJCXBlcmZfaXJxKCkgPT0gSVJRX0hBTkRMRUQgJiYKKwkJ
IXIyOworfQorCitzdGF0aWMgaXJxcmV0dXJuX3QgaHB0X2ludGVycnVwdChpbnQgaXJxLCB2b2lk
ICpkZXZfaWQpCit7CisJY29uc3QgaW50IHIyID0gY3B1X2hhc19taXBzX3IyOworCXN0cnVjdCBj
bG9ja19ldmVudF9kZXZpY2UgKmNkOworCisJLyoKKwkgKiBTdWNrYWdlIGFsZXJ0OgorCSAqIEJl
Zm9yZSBSMiBvZiB0aGUgYXJjaGl0ZWN0dXJlIHRoZXJlIHdhcyBubyB3YXkgdG8gc2VlIGlmIGEK
KwkgKiBwZXJmb3JtYW5jZSBjb3VudGVyIGludGVycnVwdCB3YXMgcGVuZGluZywgc28gd2UgaGF2
ZSB0byBydW4KKwkgKiB0aGUgcGVyZm9ybWFuY2UgY291bnRlciBpbnRlcnJ1cHQgaGFuZGxlciBh
bnl3YXkuCisJICovCisJaWYgKGhhbmRsZV9wZXJmX2lycShyMikpCisJCWdvdG8gb3V0OworCisJ
LyoKKwkgKiBUaGUgc2FtZSBhcHBsaWVzIHRvIHBlcmZvcm1hbmNlIGNvdW50ZXIgaW50ZXJydXB0
cy4gIEJ1dCB3aXRoIHRoZQorCSAqIGFib3ZlIHdlIG5vdyBrbm93IHRoYXQgdGhlIHJlYXNvbiB3
ZSBnb3QgaGVyZSBtdXN0IGJlIGEgdGltZXIKKwkgKiBpbnRlcnJ1cHQuICBCZWluZyB0aGUgcGFy
YW5vaWFjcyB3ZSBhcmUgd2UgY2hlY2sgYW55d2F5LgorCSAqLworCWlmICghcjIgfHwgKHJlYWRf
YzBfY2F1c2UoKSAmICgxIDw8IDMwKSkpIHsKKwkJY2QgPSAmX19nZXRfY3B1X3ZhcihtaXBzX2Ns
b2NrX2V2ZW50cyk7CisKKwkJLyoKKwkJICogV2UgYWx3YXlzIGFjayB0aGUgY291bnRlciBzaW5j
ZSB3ZSBuZXZlciBzaHV0cyBpdCBkb3duLgorCQkgKiBUaGVyZWZvcmUgd2UgY2FuIGdldCBpbnRl
cnJ1cHRzIHdoZXJlYXMgdGhlIGhwdCBjbG9jaworCQkgKiBldmVudCBkZXZpY2UgaGFzIGJlZW4g
ZGlzYWJsZWQuCisJCSAqLworCQltaXBzX2hwdF9hY2soKTsKKworCQlpZiAoY2QtPm1vZGUgIT0g
Q0xPQ0tfRVZUX01PREVfU0hVVERPV04pCisJCQljZC0+ZXZlbnRfaGFuZGxlcihjZCk7CisJfQor
CitvdXQ6CisJcmV0dXJuIElSUV9IQU5ETEVEOworfQorCisKK3N0cnVjdCBpcnFhY3Rpb24gaHB0
X2lycWFjdGlvbiA9IHsKKwkuaGFuZGxlcgk9IGhwdF9pbnRlcnJ1cHQsCisJLmZsYWdzCQk9IElS
UUZfRElTQUJMRUQgfCBJUlFGX1BFUkNQVSwKKwkubmFtZQkJPSAiTUlQU19IUFRfTkFNRSIsCit9
OworCit2b2lkIF9faW5pdCBocHRfdGltZXJfc2V0dXAoc3RydWN0IGlycWFjdGlvbiAqaXJxKQor
eworCWlmICghY3B1X2hhc19jb3VudGVyKQorCQlyZXR1cm47CisJaWYgKG1pcHNfaHB0X2ZyZXF1
ZW5jeSA9PSAwKQorCQlyZXR1cm47CisKKwlmaW5hbGl6ZV9ocHRfY2xvY2tldmVudCgpOworCXNl
dHVwX2hwdF9jbG9ja2V2ZW50KCk7CisKKwkvKiBFbmFibGUgaHB0IGludGVycnVwdC4gKi8KKwlw
bGF0X2hwdF9zZXR1cCgmaHB0X2lycWFjdGlvbik7Cit9CisKK3ZvaWQgX19pbml0IGhwdF9jbG9j
a19pbml0KHZvaWQpCit7CisJaWYgKCFjcHVfaGFzX2NvdW50ZXIpCisJCXJldHVybjsKKwlpZiAo
bWlwc19ocHRfZnJlcXVlbmN5ID09IDApCisJCS8qIEZJWE1FOiB0cnkgdG8gYXV0byBkZXRlY3Qg
aHB0IGZyZXF1ZW5jeSAqLworCQlyZXR1cm47CisKKwlwcmludGsoIlVzaW5nICV1LiUwM3UgTUh6
IGhpZ2ggcHJlY2lzaW9uIHRpbWVyLlxuIiwKKwkgICAgICAgKChtaXBzX2hwdF9mcmVxdWVuY3kg
KyA1MDApIC8gMTAwMCkgLyAxMDAwLAorCSAgICAgICAoKG1pcHNfaHB0X2ZyZXF1ZW5jeSArIDUw
MCkgLyAxMDAwKSAlIDEwMDApOworCisJc2V0dXBfaHB0X2Nsb2Nrc291cmNlKCk7Cit9CmRpZmYg
LS1naXQgYS9hcmNoL21pcHMva2VybmVsL3NtcC5jIGIvYXJjaC9taXBzL2tlcm5lbC9zbXAuYwpp
bmRleCA2N2VkZmE3Li4wZDg0ZDcwIDEwMDY0NAotLS0gYS9hcmNoL21pcHMva2VybmVsL3NtcC5j
CisrKyBiL2FyY2gvbWlwcy9rZXJuZWwvc21wLmMKQEAgLTc5LDYgKzc5LDcgQEAgYXNtbGlua2Fn
ZSBfX2NwdWluaXQgdm9pZCBzdGFydF9zZWNvbmRhcnkodm9pZCkKIAljcHVfcHJvYmUoKTsKIAlj
cHVfcmVwb3J0KCk7CiAJcGVyX2NwdV90cmFwX2luaXQoKTsKKwlzZXR1cF9ocHRfY2xvY2tldmVu
dCgpOwogCXByb21faW5pdF9zZWNvbmRhcnkoKTsKIAogCS8qCmRpZmYgLS1naXQgYS9hcmNoL21p
cHMva2VybmVsL3RpbWUyLmMgYi9hcmNoL21pcHMva2VybmVsL3RpbWUyLmMKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uOWU4NTAwZQotLS0gL2Rldi9udWxsCisrKyBiL2FyY2gv
bWlwcy9rZXJuZWwvdGltZTIuYwpAQCAtMCwwICsxLDg0IEBACisjaW5jbHVkZSA8bGludXgva2Vy
bmVsX3N0YXQuaD4KKyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4
L2Nsb2NrY2hpcHMuaD4KKyNpbmNsdWRlIDxsaW51eC9jbG9ja3NvdXJjZS5oPgorCisjaW5jbHVk
ZSA8YXNtL3RpbWUuaD4KKworLyoKKyAqIFJUQy4gQnkgZGVmYXVsdCB3ZSBwcm92aWRlIHRoZSBu
dWxsIFJUQyBob29rcworICovCitERUZJTkVfU1BJTkxPQ0socnRjX2xvY2spOworRVhQT1JUX1NZ
TUJPTChydGNfbG9jayk7CisKK3Vuc2lnbmVkIGxvbmcgX193ZWFrIG1pcHNfcnRjX2dldF90aW1l
KHZvaWQpCit7CisJcmV0dXJuIG1rdGltZSgyMDAwLCAxLCAxLCAwLCAwLCAwKTsKK30KKworaW50
IF9fd2VhayBtaXBzX3J0Y19zZXRfdGltZSh1bnNpZ25lZCBsb25nIHNlYykKK3sKKwlyZXR1cm4g
MDsKK30KKworaW50IF9fd2VhayBtaXBzX3J0Y19zZXRfbW1zcyh1bnNpZ25lZCBsb25nIHRpbWUp
CisgeworCXJldHVybiBtaXBzX3J0Y19zZXRfdGltZSh0aW1lKTsKKyB9CisKK2ludCB1cGRhdGVf
cGVyc2lzdGVudF9jbG9jayhzdHJ1Y3QgdGltZXNwZWMgbm93KQoreworCXJldHVybiBtaXBzX3J0
Y19zZXRfbW1zcyhub3cudHZfc2VjKTsKK30KKworI2lmIDAKKy8qIEZJWE1FOiB3ZSBuZWVkIHRv
IGluaXQgcnRjIGVhcmxpZXIgc2luY2UgdGltZWtlZXBpbmdfaW5pdCgpCisgKiBpcyBjYWxsZWQg
YmVmb3JlIHRpbWVfaW5pdCgpLgorICovCit1bnNpZ25lZCBsb25nIHJlYWRfcGVyc2lzdGVudF9j
bG9jayh2b2lkKQoreworCXJldHVybiBtaXBzX3J0Y19nZXRfdGltZSgpOworfQorI2VuZGlmCisK
Ky8qIG9ubHkgZHVyaW5nIHRyYW5zaXRpb24gcGVyaW9kICovCit1bnNpZ25lZCBsb25nIHJ0Y19t
aXBzX2dldF90aW1lKHZvaWQpCit7CisJcmV0dXJuIG1pcHNfcnRjX2dldF90aW1lKCk7Cit9CitF
WFBPUlRfU1lNQk9MKHJ0Y19taXBzX2dldF90aW1lKTsKKworaW50IHJ0Y19taXBzX3NldF90aW1l
KHVuc2lnbmVkIGxvbmcgc2VjKQoreworCXJldHVybiBtaXBzX3J0Y19zZXRfdGltZShzZWMpOwor
fQorRVhQT1JUX1NZTUJPTChydGNfbWlwc19zZXRfdGltZSk7CisKKy8qCisgKgorICovCit2b2lk
IF9faW5pdCBfX3dlYWsgcGxhdF90aW1lcl9zZXR1cCh2b2lkKQoreworfQorCit2b2lkIF9faW5p
dCB0aW1lX2luaXQodm9pZCkKK3sKKwkvKgorCSAqIE1hbmRhdG9yeSBwbGF0Zm9ybSBob29rLiBJ
dCBiYXNpY2FsbHkgc2V0dXAgdGhlIFJUQy4KKwkgKiBGSVhNRTogc2hvdWxkbid0IHdlIGNhbGwg
dGhlc2UgYmVmb3JlIGNhbGxpbmcKKwkgKiB0aW1la2VlcGluZ19pbml0KCkgPworCSAqLworCXBs
YXRfdGltZV9pbml0KCk7CisJaHB0X2Nsb2NrX2luaXQoKTsKKworCS8qCisJICogRm9yIHBsYXRm
b3JtcyB3aGljaCB3YW50IHRvIHVzZSB0aGUgY3B1IGNvdW50ZXIgYXMgdGhlCisJICogc3lzdGVt
IHRpbWVyCisJICovCisJaHB0X3RpbWVyX3NldHVwKCk7CisKKwkvKgorCSAqIFBsYXRmb3JtIGNh
biBzZXR1cCBhIG5ldyB0aWNrIGRldmljZS4KKwkgKi8KKwlwbGF0X3RpbWVyX3NldHVwKCk7Cit9
CmRpZmYgLS1naXQgYS9hcmNoL21pcHMvbGliL01ha2VmaWxlIGIvYXJjaC9taXBzL2xpYi9NYWtl
ZmlsZQppbmRleCA1ZGFkMTNlLi40NDdlODAzIDEwMDY0NAotLS0gYS9hcmNoL21pcHMvbGliL01h
a2VmaWxlCisrKyBiL2FyY2gvbWlwcy9saWIvTWFrZWZpbGUKQEAgLTMsNyArMyw3IEBACiAjCiAK
IGxpYi15CSs9IGNzdW1fcGFydGlhbC5vIG1lbWNweS5vIG1lbWNweS1pbmF0b21pYy5vIG1lbXNl
dC5vIHN0cmxlbl91c2VyLm8gXAotCSAgIHN0cm5jcHlfdXNlci5vIHN0cm5sZW5fdXNlci5vIHVu
Y2FjaGVkLm8KKwkgICBzdHJuY3B5X3VzZXIubyBzdHJubGVuX3VzZXIubyB0aW1lLm8gdW5jYWNo
ZWQubwogCiBvYmoteQkJCSs9IGlvbWFwLm8KIG9iai0kKENPTkZJR19QQ0kpCSs9IGlvbWFwLXBj
aS5vCmRpZmYgLS1naXQgYS9hcmNoL21pcHMvbGliL3RpbWUuYyBiL2FyY2gvbWlwcy9saWIvdGlt
ZS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmU1NjEwNTAKLS0tIC9kZXYv
bnVsbAorKysgYi9hcmNoL21pcHMvbGliL3RpbWUuYwpAQCAtMCwwICsxLDUyIEBACisjaW5jbHVk
ZSA8YXNtL3RpbWUuaD4KKworLyoKKyAqIHRvX3RtKCkuIEZJWE1FOiBzaG91bGQgYmUgc2hhcmVk
IHdpdGggYWxsIGFyY2hzLi4uCisgKi8KKyNkZWZpbmUgRkVCUlVBUlkJCTIKKyNkZWZpbmUgU1RB
UlRPRlRJTUUJCTE5NzAKKyNkZWZpbmUgU0VDREFZCQkJODY0MDBMCisjZGVmaW5lIFNFQ1lSCQkJ
KFNFQ0RBWSAqIDM2NSkKKyNkZWZpbmUgbGVhcHllYXIoeSkJCSgoISgoeSkgJSA0KSAmJiAoKHkp
ICUgMTAwKSkgfHwgISgoeSkgJSA0MDApKQorI2RlZmluZSBkYXlzX2luX3llYXIoeSkJCShsZWFw
eWVhcih5KSA/IDM2NiA6IDM2NSkKKyNkZWZpbmUgZGF5c19pbl9tb250aChtKQkobW9udGhfZGF5
c1sobSkgLSAxXSkKKworc3RhdGljIGludCBtb250aF9kYXlzWzEyXSA9IHsKKwkzMSwgMjgsIDMx
LCAzMCwgMzEsIDMwLCAzMSwgMzEsIDMwLCAzMSwgMzAsIDMxCit9OworCit2b2lkIHRvX3RtKHVu
c2lnbmVkIGxvbmcgdGltLCBzdHJ1Y3QgcnRjX3RpbWUgKnRtKQoreworCWxvbmcgaG1zLCBkYXks
IGdkYXk7CisJaW50IGk7CisKKwlnZGF5ID0gZGF5ID0gdGltIC8gU0VDREFZOworCWhtcyA9IHRp
bSAlIFNFQ0RBWTsKKworCS8qIEhvdXJzLCBtaW51dGVzLCBzZWNvbmRzIGFyZSBlYXN5ICovCisJ
dG0tPnRtX2hvdXIgPSBobXMgLyAzNjAwOworCXRtLT50bV9taW4gPSAoaG1zICUgMzYwMCkgLyA2
MDsKKwl0bS0+dG1fc2VjID0gKGhtcyAlIDM2MDApICUgNjA7CisKKwkvKiBOdW1iZXIgb2YgeWVh
cnMgaW4gZGF5cyAqLworCWZvciAoaSA9IFNUQVJUT0ZUSU1FOyBkYXkgPj0gZGF5c19pbl95ZWFy
KGkpOyBpKyspCisJCWRheSAtPSBkYXlzX2luX3llYXIoaSk7CisJdG0tPnRtX3llYXIgPSBpOwor
CisJLyogTnVtYmVyIG9mIG1vbnRocyBpbiBkYXlzIGxlZnQgKi8KKwlpZiAobGVhcHllYXIodG0t
PnRtX3llYXIpKQorCQlkYXlzX2luX21vbnRoKEZFQlJVQVJZKSA9IDI5OworCWZvciAoaSA9IDE7
IGRheSA+PSBkYXlzX2luX21vbnRoKGkpOyBpKyspCisJCWRheSAtPSBkYXlzX2luX21vbnRoKGkp
OworCWRheXNfaW5fbW9udGgoRkVCUlVBUlkpID0gMjg7CisJdG0tPnRtX21vbiA9IGkgLSAxOwkJ
LyogdG1fbW9uIHN0YXJ0cyBmcm9tIDAgdG8gMTEgKi8KKworCS8qIERheXMgYXJlIHdoYXQgaXMg
bGVmdCBvdmVyICgrMSkgZnJvbSBhbGwgdGhhdC4gKi8KKwl0bS0+dG1fbWRheSA9IGRheSArIDE7
CisKKwkvKgorCSAqIERldGVybWluZSB0aGUgZGF5IG9mIHdlZWsKKwkgKi8KKwl0bS0+dG1fd2Rh
eSA9IChnZGF5ICsgNCkgJSA3OwkvKiAxOTcwLzEvMSB3YXMgVGh1cnNkYXkgKi8KK30KK0VYUE9S
VF9TWU1CT0wodG9fdG0pOwpkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL3VzaXAvaXJxLmMgYi9hcmNo
L21pcHMvdXNpcC9pcnEuYwppbmRleCBiYTJiYmE0Li4xM2EwNGJjIDEwMDY0NAotLS0gYS9hcmNo
L21pcHMvdXNpcC9pcnEuYworKysgYi9hcmNoL21pcHMvdXNpcC9pcnEuYwpAQCAtMTYwLDEwICsx
NjAsNyBAQCBhc21saW5rYWdlIHZvaWQgcGxhdF9pcnFfZGlzcGF0Y2godm9pZCkKIAkJZ290byBz
cHVyaW91czsKIAogCWlycW51bSA9IGlzcjJpcnFfdGFibGVbaXBdW19fZmZzKGlzcildOwotCWlm
IChpcnFudW0gPT0gVVNJUF9DUFVfVElNRVJfSVJRKQotCQlsbF90aW1lcl9pbnRlcnJ1cHQoVVNJ
UF9DUFVfVElNRVJfSVJRKTsKLQllbHNlCi0JCWRvX0lSUShpcnFudW0pOworCWRvX0lSUShpcnFu
dW0pOwogCXJldHVybjsKIHNwdXJpb3VzOgogCXNwdXJpb3VzX2ludGVycnVwdCgpOwpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9hc20tbWlwcy90aW1lLmggYi9pbmNsdWRlL2FzbS1taXBzL3RpbWUuaApp
bmRleCBhNjMyY2VmLi5iNGUxZTgxIDEwMDY0NAotLS0gYS9pbmNsdWRlL2FzbS1taXBzL3RpbWUu
aAorKysgYi9pbmNsdWRlL2FzbS1taXBzL3RpbWUuaApAQCAtMzIsOSArMzIsOSBAQCBleHRlcm4g
c3BpbmxvY2tfdCBydGNfbG9jazsKICAqCXJ0Y19taXBzX3NldF9tbXNzIC0gc2ltaWxhciB0byBy
dGNfc2V0X3RpbWUsIGJ1dCBvbmx5IG1pbiBhbmQgc2VjIG5lZWQKICAqCQkJdG8gYmUgc2V0LiAg
VXNlZCBieSBSVEMgc3luYy11cC4KICAqLwotZXh0ZXJuIHVuc2lnbmVkIGxvbmcgKCpydGNfbWlw
c19nZXRfdGltZSkodm9pZCk7Ci1leHRlcm4gaW50ICgqcnRjX21pcHNfc2V0X3RpbWUpKHVuc2ln
bmVkIGxvbmcpOwotZXh0ZXJuIGludCAoKnJ0Y19taXBzX3NldF9tbXNzKSh1bnNpZ25lZCBsb25n
KTsKK2V4dGVybiB1bnNpZ25lZCBsb25nIHJ0Y19taXBzX2dldF90aW1lKHZvaWQpOworZXh0ZXJu
IGludCBydGNfbWlwc19zZXRfdGltZSh1bnNpZ25lZCBsb25nKTsKK2V4dGVybiBpbnQgcnRjX21p
cHNfc2V0X21tc3ModW5zaWduZWQgbG9uZyk7CiAKIC8qCiAgKiBUaW1lciBpbnRlcnJ1cHQgZnVu
Y3Rpb25zLgpAQCAtNDgsNyArNDgsNyBAQCBleHRlcm4gdm9pZCAoKm1pcHNfdGltZXJfYWNrKSh2
b2lkKTsKICAqIEhpZ2ggcHJlY2lzaW9uIHRpbWVyIGNsb2Nrc291cmNlLgogICogSWYgLnJlYWQg
aXMgTlVMTCwgYW4gUjRrLWNvbXBhdGlibGUgdGltZXIgc2V0dXAgaXMgYXR0ZW1wdGVkLgogICov
Ci1leHRlcm4gc3RydWN0IGNsb2Nrc291cmNlIGNsb2Nrc291cmNlX21pcHM7CitleHRlcm4gc3Ry
dWN0IGNsb2Nrc291cmNlIG1pcHNfY2xvY2tzb3VyY2U7CiAKIC8qCiAgKiB0b190bSgpIGNvbnZl
cnRzIHN5c3RlbSB0aW1lIGJhY2sgdG8gKHllYXIsIG1vbiwgZGF5LCBob3VyLCBtaW4sIHNlYyku
CkBAIC01OCwyMCArNTgsOSBAQCBleHRlcm4gc3RydWN0IGNsb2Nrc291cmNlIGNsb2Nrc291cmNl
X21pcHM7CiBleHRlcm4gdm9pZCB0b190bSh1bnNpZ25lZCBsb25nIHRpbSwgc3RydWN0IHJ0Y190
aW1lICp0bSk7CiAKIC8qCi0gKiBoaWdoLWxldmVsIHRpbWVyIGludGVycnVwdCByb3V0aW5lcy4K
LSAqLwotZXh0ZXJuIGlycXJldHVybl90IHRpbWVyX2ludGVycnVwdChpbnQgaXJxLCB2b2lkICpk
ZXZfaWQpOwotCi0vKgogICogdGhlIGNvcnJlc3BvbmRpbmcgbG93LWxldmVsIHRpbWVyIGludGVy
cnVwdCByb3V0aW5lLgogICovCi1leHRlcm4gYXNtbGlua2FnZSB2b2lkIGxsX3RpbWVyX2ludGVy
cnVwdChpbnQgaXJxKTsKLQotLyoKLSAqIHByb2ZpbGluZyBhbmQgcHJvY2VzcyBhY2NvdXRpbmcg
aXMgZG9uZSBzZXBhcmF0ZWx5IGluIGxvY2FsX3RpbWVyX2ludGVycnVwdAotICovCi1leHRlcm4g
dm9pZCBsb2NhbF90aW1lcl9pbnRlcnJ1cHQoaW50IGlycSwgdm9pZCAqZGV2X2lkKTsKLWV4dGVy
biBhc21saW5rYWdlIHZvaWQgbGxfbG9jYWxfdGltZXJfaW50ZXJydXB0KGludCBpcnEpOworZXh0
ZXJuIGFzbWxpbmthZ2UgaXJxcmV0dXJuX3QgbGxfdGltZXJfaW50ZXJydXB0KGludCBpcnEsIHZv
aWQgKmRldl9pZCk7CiAKIC8qCiAgKiBib2FyZCBzcGVjaWZpYyByb3V0aW5lcyByZXF1aXJlZCBi
eSB0aW1lX2luaXQoKS4KQEAgLTgwLDcgKzY5LDcgQEAgZXh0ZXJuIGFzbWxpbmthZ2Ugdm9pZCBs
bF9sb2NhbF90aW1lcl9pbnRlcnJ1cHQoaW50IGlycSk7CiAgKi8KIHN0cnVjdCBpcnFhY3Rpb247
CiBleHRlcm4gdm9pZCAoKmJvYXJkX3RpbWVfaW5pdCkodm9pZCk7Ci1leHRlcm4gdm9pZCBwbGF0
X3RpbWVyX3NldHVwKHN0cnVjdCBpcnFhY3Rpb24gKmlycSk7CitleHRlcm4gdm9pZCBwbGF0X3Rp
bWVyX3NldHVwKHZvaWQpOwogCiAvKgogICogbWlwc19ocHRfZnJlcXVlbmN5IC0gbXVzdCBiZSBz
ZXQgaWYgeW91IGludGVuZCB0byB1c2UgYW4gUjRrLWNvbXBhdGlibGUKLS0gCjEuNS4yLjEKCg==

------=_Part_2524_10412673.1181642154444--
