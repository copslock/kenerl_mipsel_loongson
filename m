Received: from cthulhu.engr.sgi.com (cthulhu.engr.sgi.com [192.26.80.2]) by neteng.engr.sgi.com (970903.SGI.8.8.7/960327.SGI.AUTOCF) via SMTP id IAA240429 for <linux-archive@neteng.engr.sgi.com>; Thu, 4 Dec 1997 08:48:52 -0800 (PST)
Return-Path: <owner-linux@cthulhu.engr.sgi.com>
Received: (from majordomo-owner@localhost) by cthulhu.engr.sgi.com (950413.SGI.8.6.12/960327.SGI.AUTOCF) id IAA12561 for linux-list; Thu, 4 Dec 1997 08:48:15 -0800
Received: from sgi.sgi.com (sgi.engr.sgi.com [192.26.80.37]) by cthulhu.engr.sgi.com (950413.SGI.8.6.12/960327.SGI.AUTOCF) via ESMTP id IAA12522; Thu, 4 Dec 1997 08:48:08 -0800
Received: from lager.engsoc.carleton.ca (lager.engsoc.carleton.ca [134.117.69.26]) by sgi.sgi.com (950413.SGI.8.6.12/970507) via ESMTP id IAA20910; Thu, 4 Dec 1997 08:48:01 -0800
	env-from (adevries@engsoc.carleton.ca)
Received: from localhost (adevries@localhost)
	by lager.engsoc.carleton.ca (8.8.7/8.8.7) with SMTP id LAA13259;
	Thu, 4 Dec 1997 11:45:42 -0500
Date: Thu, 4 Dec 1997 11:45:41 -0500 (EST)
From: Alex deVries <adevries@engsoc.carleton.ca>
To: Ariel Faigon <ariel@cthulhu.engr.sgi.com>
cc: linux@cthulhu.engr.sgi.com
Subject: Re: A question about architecture and byte order with RPMs
In-Reply-To: <199712040810.AAA49407@oz.engr.sgi.com>
Message-ID: <Pine.LNX.3.95.971204113418.10196E-100000@lager.engsoc.carleton.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-linux@cthulhu.engr.sgi.com
Precedence: bulk


On Thu, 4 Dec 1997, Ariel Faigon wrote:
> SGI has 2 programming models (source interpretation):
> 
> 	1) 64 bit (aka N64 or 64)
> 	   compiled using "cc -64"
> 
> 		sizeof(long) = sizeof(char *) = 8
> 		sizeof(int) = 4
> 
> 	2) Old 32-bits (aka o32) compiled using "cc -32"
> 		And
> 	   New 32-bits (aka n32) compiled using "cc -n32"
> 
> 		sizeof(long long) = 8
> 		sizeof(int) = sizeof(long) = sizeof(char *) = 4
> 
> Going into binaries: o32 and n32 are not the same, the code
> generated by n32 uses more efficient calling conventions
> and more registers and cannot run on old versions of the OS.
> New hardware and versions of the OS can run all of them except
> if your 'uname' says 'IRIX' and not 'IRIX64' it can compile
> (but not run) N64 binaries.

The architecture of the binary RPM concerns itself with the CPU only.
>From what I understand in your explanation, supporting o32, n32 and 64
executables is a function of the OS and the libraries.  RPM binaries take
care of this already with their OS name field and their libraries.

So, I don't think we'd need to concern ourself with the o32, n32 and 64
options within the architecture field.

Does this make sense? It's important that we don't screw ourselves over.

- Alex

      Alex deVries          Rent this space for a $5 donation 
  System Administrator      to EngSoc per day.
   The EngSoc Project       Send spam to spam@engsoc.carleton.ca.
