Received: with ECARTIS (v1.0.0; list linux-mips); Mon, 05 Mar 2007 16:37:16 +0000 (GMT)
Received: from sakura.staff.proxad.net ([213.228.1.107]:63147 "EHLO
	sakura.staff.proxad.net") by ftp.linux-mips.org with ESMTP
	id S20037479AbXCEQhM (ORCPT <rfc822;linux-mips@linux-mips.org>);
	Mon, 5 Mar 2007 16:37:12 +0000
Received: from max by sakura.staff.proxad.net with local (Exim 3.36 #1 (Debian))
	id 1HOG8H-0006Ef-00; Mon, 05 Mar 2007 17:33:53 +0100
Subject: Re: [PATCH 0/2] FLATMEM: allow memory to start at pfn != 0 [take
	#2]
From:	Maxime Bizon <mbizon@freebox.fr>
Reply-To: mbizon@freebox.fr
To:	Franck Bui-Huu <vagabon.xyz@gmail.com>
Cc:	linux-mips <linux-mips@linux-mips.org>
In-Reply-To: <cda58cb80703050615r4e559ca1u78517634ac23a27@mail.gmail.com>
References: <116841864595-git-send-email-fbuihuu@gmail.com>
	 <1172879147.964.65.camel@sakura.staff.proxad.net>
	 <cda58cb80703050615r4e559ca1u78517634ac23a27@mail.gmail.com>
Content-Type: multipart/mixed; boundary="=-7g/3cxzQffsJDqhryWgC"
Organization: Freebox
Date:	Mon, 05 Mar 2007 17:33:53 +0100
Message-Id: <1173112433.7093.36.camel@sakura.staff.proxad.net>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.1 
Return-Path: <mbizon@freebox.fr>
X-Envelope-To: <"|/home/ecartis/ecartis -s linux-mips"> (uid 0)
X-Orcpt: rfc822;linux-mips@linux-mips.org
Original-Recipient: rfc822;linux-mips@linux-mips.org
X-archive-position: 14361
X-ecartis-version: Ecartis v1.0.0
Sender: linux-mips-bounce@linux-mips.org
Errors-to: linux-mips-bounce@linux-mips.org
X-original-sender: mbizon@freebox.fr
Precedence: bulk
X-list: linux-mips


--=-7g/3cxzQffsJDqhryWgC
Content-Type: text/plain
Content-Transfer-Encoding: 7bit


On Mon, 2007-03-05 at 15:15 +0100, Franck Bui-Huu wrote:

Thanks for caring Franck,

> Does your platform code do some address translation by using
> CPHYSADDR() macro or by using anything else than pa() ?

Not at all, I've reduced platform code to minimum for the test, it
basically registers a prom console, and do add_memory_region(0x10000000,
32 << 20), remaining is basic irq and time stuff.

> Just to be sure, is your PAGE_OFFSET equal to 0x80000000 ?

Yes, here is my spaces.h content:

#define PHYS_OFFSET             0x10000000

#define CAC_BASE                0x90000000
#define IO_BASE                 0xa0000000
#define UNCAC_BASE              0xa0000000
#define MAP_BASE                0xc0000000

#define PAGE_OFFSET             0x80000000UL

Note: The CAC_BASE value of 0x90000000 is for the linux exception code
to work as-is, since there is no RAM at 0x80000000 to put vector code.



I dug a little and found the following.

My kernel is loaded at 0x9012d000, '&_end' value is 0x901d4020. In
bootmem_init(), we try to compute reserved_end by using
__pa_symbol(&_end), which adds PHYS_OFFSET to it, though it was already
accounted.

The loop in setup.c is thus unable to compute a correct 'map_start'
value since 'reserved_end' is way above all declared memory.

init_bootmem_node() is then called with a 'map_start' default value of
~0. Maybe that case should fall in the invalid memory map panic ?


I tried to set 'reserved_end' value manually and it went furter, but I
end up with the following message:

Bad page state in process 'swapper'
page:81000000 flags:0x00000000 mapping:00000000 mapcount:1 count:0
Trying to fix it up, but a reboot is needed
Backtrace:
Call Trace:
[<90029f10>] dump_stack+0x8/0x34
[<9006ac58>] bad_page+0x68/0xa8
[<9006b0a4>] __free_pages_ok+0x358/0x37c
[<9013d374>] free_all_bootmem_core+0x24c/0x270
[<90134f30>] mem_init+0x40/0x19c
[<9012d828>] start_kernel+0x1d4/0x36c


Full dmesg with and without manual set of reserved_end attached.

Regards,

-- 
Maxime


--=-7g/3cxzQffsJDqhryWgC
Content-Disposition: attachment; filename=dotconfig
Content-Type: text/plain; name=dotconfig; charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64

Iw0KIyBBdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBtYWtlIGNvbmZpZzogZG9uJ3QgZWRpdA0KIyBM
aW51eCBrZXJuZWwgdmVyc2lvbjogMi42LjIwDQojIE1vbiBNYXIgIDUgMTU6NTU6MDIgMjAwNw0K
Iw0KQ09ORklHX01JUFM9eQ0KDQojDQojIE1hY2hpbmUgc2VsZWN0aW9uDQojDQojIENPTkZJR19C
Q005NjN4eCBpcyBub3Qgc2V0DQpDT05GSUdfVEFOR08yPXkNCiMgQ09ORklHX01JUFNfTVRYMSBp
cyBub3Qgc2V0DQojIENPTkZJR19NSVBTX0JPU1BPUlVTIGlzIG5vdCBzZXQNCiMgQ09ORklHX01J
UFNfUEIxMDAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfUEIxMTAwIGlzIG5vdCBzZXQNCiMg
Q09ORklHX01JUFNfUEIxNTAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfUEIxNTUwIGlzIG5v
dCBzZXQNCiMgQ09ORklHX01JUFNfUEIxMjAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfREIx
MDAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfREIxMTAwIGlzIG5vdCBzZXQNCiMgQ09ORklH
X01JUFNfREIxNTAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfREIxNTUwIGlzIG5vdCBzZXQN
CiMgQ09ORklHX01JUFNfREIxMjAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNfTUlSQUdFIGlz
IG5vdCBzZXQNCiMgQ09ORklHX0JBU0xFUl9FWENJVEUgaXMgbm90IHNldA0KIyBDT05GSUdfTUlQ
U19DT0JBTFQgaXMgbm90IHNldA0KIyBDT05GSUdfTUFDSF9ERUNTVEFUSU9OIGlzIG5vdCBzZXQN
CiMgQ09ORklHX01JUFNfRVY2NDEyMCBpcyBub3Qgc2V0DQojIENPTkZJR19NQUNIX0pBWlogaXMg
bm90IHNldA0KIyBDT05GSUdfTEFTQVQgaXMgbm90IHNldA0KIyBDT05GSUdfTUlQU19BVExBUyBp
cyBub3Qgc2V0DQojIENPTkZJR19NSVBTX01BTFRBIGlzIG5vdCBzZXQNCiMgQ09ORklHX01JUFNf
U0VBRCBpcyBub3Qgc2V0DQojIENPTkZJR19XUl9QUE1DIGlzIG5vdCBzZXQNCiMgQ09ORklHX01J
UFNfU0lNIGlzIG5vdCBzZXQNCiMgQ09ORklHX01PTUVOQ09fSkFHVUFSX0FUWCBpcyBub3Qgc2V0
DQojIENPTkZJR19NT01FTkNPX09DRUxPVCBpcyBub3Qgc2V0DQojIENPTkZJR19NT01FTkNPX09D
RUxPVF8zIGlzIG5vdCBzZXQNCiMgQ09ORklHX01PTUVOQ09fT0NFTE9UX0MgaXMgbm90IHNldA0K
IyBDT05GSUdfTU9NRU5DT19PQ0VMT1RfRyBpcyBub3Qgc2V0DQojIENPTkZJR19NSVBTX1hYUzE1
MDAgaXMgbm90IHNldA0KIyBDT05GSUdfUE5YODU1MF9WMlBDSSBpcyBub3Qgc2V0DQojIENPTkZJ
R19QTlg4NTUwX0pCUyBpcyBub3Qgc2V0DQojIENPTkZJR19QTlg4NTUwX1NUQjgxMCBpcyBub3Qg
c2V0DQojIENPTkZJR19EREI1NDc3IGlzIG5vdCBzZXQNCiMgQ09ORklHX01BQ0hfVlI0MVhYIGlz
IG5vdCBzZXQNCiMgQ09ORklHX1BNQ19ZT1NFTUlURSBpcyBub3Qgc2V0DQojIENPTkZJR19RRU1V
IGlzIG5vdCBzZXQNCiMgQ09ORklHX01BUktFSU5TIGlzIG5vdCBzZXQNCiMgQ09ORklHX1NHSV9J
UDIyIGlzIG5vdCBzZXQNCiMgQ09ORklHX1NHSV9JUDI3IGlzIG5vdCBzZXQNCiMgQ09ORklHX1NH
SV9JUDMyIGlzIG5vdCBzZXQNCiMgQ09ORklHX1NJQllURV9CSUdTVVIgaXMgbm90IHNldA0KIyBD
T05GSUdfU0lCWVRFX1NXQVJNIGlzIG5vdCBzZXQNCiMgQ09ORklHX1NJQllURV9TRU5UT1NBIGlz
IG5vdCBzZXQNCiMgQ09ORklHX1NJQllURV9SSE9ORSBpcyBub3Qgc2V0DQojIENPTkZJR19TSUJZ
VEVfQ0FSTUVMIGlzIG5vdCBzZXQNCiMgQ09ORklHX1NJQllURV9QVFNXQVJNIGlzIG5vdCBzZXQN
CiMgQ09ORklHX1NJQllURV9MSVRUTEVTVVIgaXMgbm90IHNldA0KIyBDT05GSUdfU0lCWVRFX0NS
SElORSBpcyBub3Qgc2V0DQojIENPTkZJR19TSUJZVEVfQ1JIT05FIGlzIG5vdCBzZXQNCiMgQ09O
RklHX1NOSV9STSBpcyBub3Qgc2V0DQojIENPTkZJR19UT1NISUJBX0pNUjM5MjcgaXMgbm90IHNl
dA0KIyBDT05GSUdfVE9TSElCQV9SQlRYNDkyNyBpcyBub3Qgc2V0DQojIENPTkZJR19UT1NISUJB
X1JCVFg0OTM4IGlzIG5vdCBzZXQNCiMgQ09ORklHX1RBTkdPMl9FUzEgaXMgbm90IHNldA0KIyBD
T05GSUdfVEFOR08yX0VTMiBpcyBub3Qgc2V0DQojIENPTkZJR19UQU5HTzJfRVMzIGlzIG5vdCBz
ZXQNCiMgQ09ORklHX1RBTkdPMl9FUzQgaXMgbm90IHNldA0KIyBDT05GSUdfVEFOR08yX0VTNSBp
cyBub3Qgc2V0DQpDT05GSUdfVEFOR08yX0VTNj15DQojIENPTkZJR19LRVhFQyBpcyBub3Qgc2V0
DQpDT05GSUdfUldTRU1fR0VORVJJQ19TUElOTE9DSz15DQojIENPTkZJR19BUkNIX0hBU19JTE9H
Ml9VMzIgaXMgbm90IHNldA0KIyBDT05GSUdfQVJDSF9IQVNfSUxPRzJfVTY0IGlzIG5vdCBzZXQN
CkNPTkZJR19HRU5FUklDX0ZJTkRfTkVYVF9CSVQ9eQ0KQ09ORklHX0dFTkVSSUNfSFdFSUdIVD15
DQpDT05GSUdfR0VORVJJQ19DQUxJQlJBVEVfREVMQVk9eQ0KQ09ORklHX0dFTkVSSUNfVElNRT15
DQpDT05GSUdfU0NIRURfTk9fTk9fT01JVF9GUkFNRV9QT0lOVEVSPXkNCiMgQ09ORklHX0dFTkVS
SUNfSEFSRElSUVNfTk9fX0RPX0lSUSBpcyBub3Qgc2V0DQpDT05GSUdfRE1BX05PTkNPSEVSRU5U
PXkNCkNPTkZJR19ETUFfTkVFRF9QQ0lfTUFQX1NUQVRFPXkNCiMgQ09ORklHX0NQVV9CSUdfRU5E
SUFOIGlzIG5vdCBzZXQNCkNPTkZJR19DUFVfTElUVExFX0VORElBTj15DQpDT05GSUdfU1lTX1NV
UFBPUlRTX0xJVFRMRV9FTkRJQU49eQ0KQ09ORklHX0lSUV9DUFU9eQ0KQ09ORklHX01JUFNfTDFf
Q0FDSEVfU0hJRlQ9NQ0KDQojDQojIENQVSBzZWxlY3Rpb24NCiMNCiMgQ09ORklHX0NQVV9NSVBT
MzJfUjEgaXMgbm90IHNldA0KQ09ORklHX0NQVV9NSVBTMzJfUjI9eQ0KIyBDT05GSUdfQ1BVX01J
UFM2NF9SMSBpcyBub3Qgc2V0DQojIENPTkZJR19DUFVfTUlQUzY0X1IyIGlzIG5vdCBzZXQNCiMg
Q09ORklHX0NQVV9SMzAwMCBpcyBub3Qgc2V0DQojIENPTkZJR19DUFVfVFgzOVhYIGlzIG5vdCBz
ZXQNCiMgQ09ORklHX0NQVV9WUjQxWFggaXMgbm90IHNldA0KIyBDT05GSUdfQ1BVX1I0MzAwIGlz
IG5vdCBzZXQNCiMgQ09ORklHX0NQVV9SNFgwMCBpcyBub3Qgc2V0DQojIENPTkZJR19DUFVfVFg0
OVhYIGlzIG5vdCBzZXQNCiMgQ09ORklHX0NQVV9SNTAwMCBpcyBub3Qgc2V0DQojIENPTkZJR19D
UFVfUjU0MzIgaXMgbm90IHNldA0KIyBDT05GSUdfQ1BVX1I2MDAwIGlzIG5vdCBzZXQNCiMgQ09O
RklHX0NQVV9ORVZBREEgaXMgbm90IHNldA0KIyBDT05GSUdfQ1BVX1I4MDAwIGlzIG5vdCBzZXQN
CiMgQ09ORklHX0NQVV9SMTAwMDAgaXMgbm90IHNldA0KIyBDT05GSUdfQ1BVX1JNNzAwMCBpcyBu
b3Qgc2V0DQojIENPTkZJR19DUFVfUk05MDAwIGlzIG5vdCBzZXQNCiMgQ09ORklHX0NQVV9TQjEg
aXMgbm90IHNldA0KQ09ORklHX1NZU19IQVNfQ1BVX01JUFMzMl9SMT15DQpDT05GSUdfU1lTX0hB
U19DUFVfTUlQUzMyX1IyPXkNCkNPTkZJR19DUFVfTUlQUzMyPXkNCkNPTkZJR19DUFVfTUlQU1Iy
PXkNCkNPTkZJR19TWVNfU1VQUE9SVFNfMzJCSVRfS0VSTkVMPXkNCkNPTkZJR19DUFVfU1VQUE9S
VFNfMzJCSVRfS0VSTkVMPXkNCg0KIw0KIyBLZXJuZWwgdHlwZQ0KIw0KQ09ORklHXzMyQklUPXkN
CiMgQ09ORklHXzY0QklUIGlzIG5vdCBzZXQNCkNPTkZJR19QQUdFX1NJWkVfNEtCPXkNCiMgQ09O
RklHX1BBR0VfU0laRV84S0IgaXMgbm90IHNldA0KIyBDT05GSUdfUEFHRV9TSVpFXzE2S0IgaXMg
bm90IHNldA0KIyBDT05GSUdfUEFHRV9TSVpFXzY0S0IgaXMgbm90IHNldA0KQ09ORklHX0NQVV9I
QVNfUFJFRkVUQ0g9eQ0KQ09ORklHX01JUFNfTVRfRElTQUJMRUQ9eQ0KIyBDT05GSUdfTUlQU19N
VF9TTVAgaXMgbm90IHNldA0KIyBDT05GSUdfTUlQU19NVF9TTVRDIGlzIG5vdCBzZXQNCiMgQ09O
RklHX01JUFNfVlBFX0xPQURFUiBpcyBub3Qgc2V0DQojIENPTkZJR182NEJJVF9QSFlTX0FERFIg
aXMgbm90IHNldA0KQ09ORklHX0NQVV9IQVNfTExTQz15DQpDT05GSUdfQ1BVX0hBU19TWU5DPXkN
CkNPTkZJR19HRU5FUklDX0hBUkRJUlFTPXkNCkNPTkZJR19HRU5FUklDX0lSUV9QUk9CRT15DQpD
T05GSUdfQ1BVX1NVUFBPUlRTX0hJR0hNRU09eQ0KQ09ORklHX0FSQ0hfRkxBVE1FTV9FTkFCTEU9
eQ0KQ09ORklHX1NFTEVDVF9NRU1PUllfTU9ERUw9eQ0KQ09ORklHX0ZMQVRNRU1fTUFOVUFMPXkN
CiMgQ09ORklHX0RJU0NPTlRJR01FTV9NQU5VQUwgaXMgbm90IHNldA0KIyBDT05GSUdfU1BBUlNF
TUVNX01BTlVBTCBpcyBub3Qgc2V0DQpDT05GSUdfRkxBVE1FTT15DQpDT05GSUdfRkxBVF9OT0RF
X01FTV9NQVA9eQ0KIyBDT05GSUdfU1BBUlNFTUVNX1NUQVRJQyBpcyBub3Qgc2V0DQpDT05GSUdf
U1BMSVRfUFRMT0NLX0NQVVM9NA0KIyBDT05GSUdfUkVTT1VSQ0VTXzY0QklUIGlzIG5vdCBzZXQN
CiMgQ09ORklHX0haXzQ4IGlzIG5vdCBzZXQNCiMgQ09ORklHX0haXzEwMCBpcyBub3Qgc2V0DQoj
IENPTkZJR19IWl8xMjggaXMgbm90IHNldA0KQ09ORklHX0haXzI1MD15DQojIENPTkZJR19IWl8y
NTYgaXMgbm90IHNldA0KIyBDT05GSUdfSFpfMTAwMCBpcyBub3Qgc2V0DQojIENPTkZJR19IWl8x
MDI0IGlzIG5vdCBzZXQNCkNPTkZJR19TWVNfU1VQUE9SVFNfQVJCSVRfSFo9eQ0KQ09ORklHX0ha
PTI1MA0KQ09ORklHX1BSRUVNUFRfTk9ORT15DQojIENPTkZJR19QUkVFTVBUX1ZPTFVOVEFSWSBp
cyBub3Qgc2V0DQojIENPTkZJR19QUkVFTVBUIGlzIG5vdCBzZXQNCkNPTkZJR19MT0NLREVQX1NV
UFBPUlQ9eQ0KQ09ORklHX1NUQUNLVFJBQ0VfU1VQUE9SVD15DQpDT05GSUdfREVGQ09ORklHX0xJ
U1Q9Ii9saWIvbW9kdWxlcy8kVU5BTUVfUkVMRUFTRS8uY29uZmlnIg0KDQojDQojIENvZGUgbWF0
dXJpdHkgbGV2ZWwgb3B0aW9ucw0KIw0KQ09ORklHX0VYUEVSSU1FTlRBTD15DQpDT05GSUdfQlJP
S0VOX09OX1NNUD15DQpDT05GSUdfSU5JVF9FTlZfQVJHX0xJTUlUPTMyDQoNCiMNCiMgR2VuZXJh
bCBzZXR1cA0KIw0KQ09ORklHX0xPQ0FMVkVSU0lPTj0iIg0KIyBDT05GSUdfTE9DQUxWRVJTSU9O
X0FVVE8gaXMgbm90IHNldA0KIyBDT05GSUdfSUdOT1JFX0NPTVBJTEVfSU5GTyBpcyBub3Qgc2V0
DQojIENPTkZJR19TWVNWSVBDIGlzIG5vdCBzZXQNCiMgQ09ORklHX0JTRF9QUk9DRVNTX0FDQ1Qg
aXMgbm90IHNldA0KIyBDT05GSUdfVVRTX05TIGlzIG5vdCBzZXQNCiMgQ09ORklHX0lLQ09ORklH
IGlzIG5vdCBzZXQNCiMgQ09ORklHX1NZU0ZTX0RFUFJFQ0FURUQgaXMgbm90IHNldA0KIyBDT05G
SUdfUkVMQVkgaXMgbm90IHNldA0KQ09ORklHX0lOSVRSQU1GU19VU0VfR1pJUD15DQpDT05GSUdf
SU5JVFJBTUZTX1NPVVJDRT0iLi4vLi4vYnVpbGRyb290L2ltYWdlcy9yb290LW5vdmVyc2lvbi8i
DQpDT05GSUdfSU5JVFJBTUZTX1JPT1RfVUlEPTANCkNPTkZJR19JTklUUkFNRlNfUk9PVF9HSUQ9
MA0KIyBDT05GSUdfQ0NfT1BUSU1JWkVfRk9SX1NJWkUgaXMgbm90IHNldA0KQ09ORklHX1NZU0NU
TD15DQpDT05GSUdfRU1CRURERUQ9eQ0KQ09ORklHX1NZU0NUTF9TWVNDQUxMPXkNCkNPTkZJR19L
QUxMU1lNUz15DQpDT05GSUdfS0FMTFNZTVNfQUxMPXkNCiMgQ09ORklHX0tBTExTWU1TX0VYVFJB
X1BBU1MgaXMgbm90IHNldA0KQ09ORklHX0hPVFBMVUc9eQ0KQ09ORklHX1BSSU5USz15DQpDT05G
SUdfQlVHPXkNCiMgQ09ORklHX0VMRl9DT1JFIGlzIG5vdCBzZXQNCkNPTkZJR19CQVNFX0ZVTEw9
eQ0KIyBDT05GSUdfRlVURVggaXMgbm90IHNldA0KIyBDT05GSUdfRVBPTEwgaXMgbm90IHNldA0K
IyBDT05GSUdfU0hNRU0gaXMgbm90IHNldA0KQ09ORklHX1NMQUI9eQ0KQ09ORklHX1ZNX0VWRU5U
X0NPVU5URVJTPXkNCkNPTkZJR19USU5ZX1NITUVNPXkNCkNPTkZJR19CQVNFX1NNQUxMPTANCiMg
Q09ORklHX1NMT0IgaXMgbm90IHNldA0KDQojDQojIExvYWRhYmxlIG1vZHVsZSBzdXBwb3J0DQoj
DQojIENPTkZJR19NT0RVTEVTIGlzIG5vdCBzZXQNCg0KIw0KIyBCbG9jayBsYXllcg0KIw0KIyBD
T05GSUdfQkxPQ0sgaXMgbm90IHNldA0KDQojDQojIEJ1cyBvcHRpb25zIChQQ0ksIFBDTUNJQSwg
RUlTQSwgSVNBLCBUQykNCiMNCkNPTkZJR19IV19IQVNfUENJPXkNCiMgQ09ORklHX1BDSSBpcyBu
b3Qgc2V0DQpDT05GSUdfTU1VPXkNCg0KIw0KIyBQQ0NBUkQgKFBDTUNJQS9DYXJkQnVzKSBzdXBw
b3J0DQojDQojIENPTkZJR19QQ0NBUkQgaXMgbm90IHNldA0KDQojDQojIFBDSSBIb3RwbHVnIFN1
cHBvcnQNCiMNCg0KIw0KIyBFeGVjdXRhYmxlIGZpbGUgZm9ybWF0cw0KIw0KQ09ORklHX0JJTkZN
VF9FTEY9eQ0KIyBDT05GSUdfQklORk1UX01JU0MgaXMgbm90IHNldA0KQ09ORklHX1RSQURfU0lH
TkFMUz15DQoNCiMNCiMgTmV0d29ya2luZw0KIw0KIyBDT05GSUdfTkVUIGlzIG5vdCBzZXQNCg0K
Iw0KIyBEZXZpY2UgRHJpdmVycw0KIw0KDQojDQojIEdlbmVyaWMgRHJpdmVyIE9wdGlvbnMNCiMN
CkNPTkZJR19TVEFOREFMT05FPXkNCiMgQ09ORklHX1BSRVZFTlRfRklSTVdBUkVfQlVJTEQgaXMg
bm90IHNldA0KQ09ORklHX0ZXX0xPQURFUj15DQojIENPTkZJR19ERUJVR19EUklWRVIgaXMgbm90
IHNldA0KIyBDT05GSUdfU1lTX0hZUEVSVklTT1IgaXMgbm90IHNldA0KDQojDQojIENvbm5lY3Rv
ciAtIHVuaWZpZWQgdXNlcnNwYWNlIDwtPiBrZXJuZWxzcGFjZSBsaW5rZXINCiMNCg0KIw0KIyBN
ZW1vcnkgVGVjaG5vbG9neSBEZXZpY2VzIChNVEQpDQojDQojIENPTkZJR19NVEQgaXMgbm90IHNl
dA0KDQojDQojIFBhcmFsbGVsIHBvcnQgc3VwcG9ydA0KIw0KIyBDT05GSUdfUEFSUE9SVCBpcyBu
b3Qgc2V0DQoNCiMNCiMgUGx1ZyBhbmQgUGxheSBzdXBwb3J0DQojDQoNCiMNCiMgTWlzYyBkZXZp
Y2VzDQojDQojIENPTkZJR19USUZNX0NPUkUgaXMgbm90IHNldA0KDQojDQojIFNDU0kgZGV2aWNl
IHN1cHBvcnQNCiMNCiMgQ09ORklHX1NDU0lfTkVUTElOSyBpcyBub3Qgc2V0DQoNCiMNCiMgU2Vy
aWFsIEFUQSAocHJvZCkgYW5kIFBhcmFsbGVsIEFUQSAoZXhwZXJpbWVudGFsKSBkcml2ZXJzDQoj
DQoNCiMNCiMgRnVzaW9uIE1QVCBkZXZpY2Ugc3VwcG9ydA0KIw0KIyBDT05GSUdfRlVTSU9OIGlz
IG5vdCBzZXQNCg0KIw0KIyBJRUVFIDEzOTQgKEZpcmVXaXJlKSBzdXBwb3J0DQojDQoNCiMNCiMg
STJPIGRldmljZSBzdXBwb3J0DQojDQoNCiMNCiMgSVNETiBzdWJzeXN0ZW0NCiMNCg0KIw0KIyBU
ZWxlcGhvbnkgU3VwcG9ydA0KIw0KIyBDT05GSUdfUEhPTkUgaXMgbm90IHNldA0KDQojDQojIElu
cHV0IGRldmljZSBzdXBwb3J0DQojDQpDT05GSUdfSU5QVVQ9eQ0KIyBDT05GSUdfSU5QVVRfRkZf
TUVNTEVTUyBpcyBub3Qgc2V0DQoNCiMNCiMgVXNlcmxhbmQgaW50ZXJmYWNlcw0KIw0KIyBDT05G
SUdfSU5QVVRfTU9VU0VERVYgaXMgbm90IHNldA0KIyBDT05GSUdfSU5QVVRfSk9ZREVWIGlzIG5v
dCBzZXQNCiMgQ09ORklHX0lOUFVUX1RTREVWIGlzIG5vdCBzZXQNCkNPTkZJR19JTlBVVF9FVkRF
Vj15DQojIENPTkZJR19JTlBVVF9FVkJVRyBpcyBub3Qgc2V0DQoNCiMNCiMgSW5wdXQgRGV2aWNl
IERyaXZlcnMNCiMNCiMgQ09ORklHX0lOUFVUX0tFWUJPQVJEIGlzIG5vdCBzZXQNCiMgQ09ORklH
X0lOUFVUX01PVVNFIGlzIG5vdCBzZXQNCiMgQ09ORklHX0lOUFVUX0pPWVNUSUNLIGlzIG5vdCBz
ZXQNCiMgQ09ORklHX0lOUFVUX1RPVUNIU0NSRUVOIGlzIG5vdCBzZXQNCiMgQ09ORklHX0lOUFVU
X01JU0MgaXMgbm90IHNldA0KDQojDQojIEhhcmR3YXJlIEkvTyBwb3J0cw0KIw0KIyBDT05GSUdf
U0VSSU8gaXMgbm90IHNldA0KIyBDT05GSUdfR0FNRVBPUlQgaXMgbm90IHNldA0KDQojDQojIENo
YXJhY3RlciBkZXZpY2VzDQojDQojIENPTkZJR19WVCBpcyBub3Qgc2V0DQojIENPTkZJR19TRVJJ
QUxfTk9OU1RBTkRBUkQgaXMgbm90IHNldA0KDQojDQojIFNlcmlhbCBkcml2ZXJzDQojDQpDT05G
SUdfU0VSSUFMXzgyNTA9eQ0KQ09ORklHX1NFUklBTF84MjUwX0NPTlNPTEU9eQ0KQ09ORklHX1NF
UklBTF84MjUwX05SX1VBUlRTPTINCkNPTkZJR19TRVJJQUxfODI1MF9SVU5USU1FX1VBUlRTPTIN
CiMgQ09ORklHX1NFUklBTF84MjUwX0VYVEVOREVEIGlzIG5vdCBzZXQNCg0KIw0KIyBOb24tODI1
MCBzZXJpYWwgcG9ydCBzdXBwb3J0DQojDQpDT05GSUdfU0VSSUFMX0NPUkU9eQ0KQ09ORklHX1NF
UklBTF9DT1JFX0NPTlNPTEU9eQ0KQ09ORklHX1VOSVg5OF9QVFlTPXkNCkNPTkZJR19MRUdBQ1lf
UFRZUz15DQpDT05GSUdfTEVHQUNZX1BUWV9DT1VOVD04DQoNCiMNCiMgSVBNSQ0KIw0KIyBDT05G
SUdfSVBNSV9IQU5ETEVSIGlzIG5vdCBzZXQNCg0KIw0KIyBXYXRjaGRvZyBDYXJkcw0KIw0KIyBD
T05GSUdfV0FUQ0hET0cgaXMgbm90IHNldA0KIyBDT05GSUdfSFdfUkFORE9NIGlzIG5vdCBzZXQN
CiMgQ09ORklHX1JUQyBpcyBub3Qgc2V0DQojIENPTkZJR19HRU5fUlRDIGlzIG5vdCBzZXQNCiMg
Q09ORklHX0RUTEsgaXMgbm90IHNldA0KIyBDT05GSUdfUjM5NjQgaXMgbm90IHNldA0KDQojDQoj
IFRQTSBkZXZpY2VzDQojDQojIENPTkZJR19UQ0dfVFBNIGlzIG5vdCBzZXQNCg0KIw0KIyBJMkMg
c3VwcG9ydA0KIw0KQ09ORklHX0kyQz15DQojIENPTkZJR19JMkNfQ0hBUkRFViBpcyBub3Qgc2V0
DQoNCiMNCiMgSTJDIEFsZ29yaXRobXMNCiMNCkNPTkZJR19JMkNfQUxHT0JJVD15DQojIENPTkZJ
R19JMkNfQUxHT1BDRiBpcyBub3Qgc2V0DQojIENPTkZJR19JMkNfQUxHT1BDQSBpcyBub3Qgc2V0
DQoNCiMNCiMgSTJDIEhhcmR3YXJlIEJ1cyBzdXBwb3J0DQojDQojIENPTkZJR19JMkNfT0NPUkVT
IGlzIG5vdCBzZXQNCiMgQ09ORklHX0kyQ19QQVJQT1JUX0xJR0hUIGlzIG5vdCBzZXQNCiMgQ09O
RklHX0kyQ19QQ0FfSVNBIGlzIG5vdCBzZXQNCg0KIw0KIyBNaXNjZWxsYW5lb3VzIEkyQyBDaGlw
IHN1cHBvcnQNCiMNCiMgQ09ORklHX1NFTlNPUlNfRFMxMzM3IGlzIG5vdCBzZXQNCiMgQ09ORklH
X1NFTlNPUlNfRFMxMzc0IGlzIG5vdCBzZXQNCiMgQ09ORklHX1NFTlNPUlNfRUVQUk9NIGlzIG5v
dCBzZXQNCiMgQ09ORklHX1NFTlNPUlNfUENGODU3NCBpcyBub3Qgc2V0DQojIENPTkZJR19TRU5T
T1JTX1BDQTk1MzkgaXMgbm90IHNldA0KIyBDT05GSUdfU0VOU09SU19QQ0Y4NTkxIGlzIG5vdCBz
ZXQNCiMgQ09ORklHX1NFTlNPUlNfTUFYNjg3NSBpcyBub3Qgc2V0DQojIENPTkZJR19JMkNfREVC
VUdfQ09SRSBpcyBub3Qgc2V0DQojIENPTkZJR19JMkNfREVCVUdfQUxHTyBpcyBub3Qgc2V0DQoj
IENPTkZJR19JMkNfREVCVUdfQlVTIGlzIG5vdCBzZXQNCiMgQ09ORklHX0kyQ19ERUJVR19DSElQ
IGlzIG5vdCBzZXQNCg0KIw0KIyBTUEkgc3VwcG9ydA0KIw0KIyBDT05GSUdfU1BJIGlzIG5vdCBz
ZXQNCiMgQ09ORklHX1NQSV9NQVNURVIgaXMgbm90IHNldA0KDQojDQojIERhbGxhcydzIDEtd2ly
ZSBidXMNCiMNCiMgQ09ORklHX1cxIGlzIG5vdCBzZXQNCg0KIw0KIyBIYXJkd2FyZSBNb25pdG9y
aW5nIHN1cHBvcnQNCiMNCiMgQ09ORklHX0hXTU9OIGlzIG5vdCBzZXQNCiMgQ09ORklHX0hXTU9O
X1ZJRCBpcyBub3Qgc2V0DQoNCiMNCiMgTXVsdGltZWRpYSBkZXZpY2VzDQojDQojIENPTkZJR19W
SURFT19ERVYgaXMgbm90IHNldA0KDQojDQojIERpZ2l0YWwgVmlkZW8gQnJvYWRjYXN0aW5nIERl
dmljZXMNCiMNCg0KIw0KIyBHcmFwaGljcyBzdXBwb3J0DQojDQojIENPTkZJR19GSVJNV0FSRV9F
RElEIGlzIG5vdCBzZXQNCiMgQ09ORklHX0ZCIGlzIG5vdCBzZXQNCiMgQ09ORklHX0JBQ0tMSUdI
VF9MQ0RfU1VQUE9SVCBpcyBub3Qgc2V0DQoNCiMNCiMgU291bmQNCiMNCiMgQ09ORklHX1NPVU5E
IGlzIG5vdCBzZXQNCg0KIw0KIyBISUQgRGV2aWNlcw0KIw0KQ09ORklHX0hJRD15DQoNCiMNCiMg
VVNCIHN1cHBvcnQNCiMNCiMgQ09ORklHX1VTQl9BUkNIX0hBU19IQ0QgaXMgbm90IHNldA0KIyBD
T05GSUdfVVNCX0FSQ0hfSEFTX09IQ0kgaXMgbm90IHNldA0KIyBDT05GSUdfVVNCX0FSQ0hfSEFT
X0VIQ0kgaXMgbm90IHNldA0KDQojDQojIE5PVEU6IFVTQl9TVE9SQUdFIGVuYWJsZXMgU0NTSSwg
YW5kICdTQ1NJIGRpc2sgc3VwcG9ydCcNCiMNCg0KIw0KIyBVU0IgR2FkZ2V0IFN1cHBvcnQNCiMN
CiMgQ09ORklHX1VTQl9HQURHRVQgaXMgbm90IHNldA0KDQojDQojIE1NQy9TRCBDYXJkIHN1cHBv
cnQNCiMNCiMgQ09ORklHX01NQyBpcyBub3Qgc2V0DQoNCiMNCiMgTEVEIGRldmljZXMNCiMNCiMg
Q09ORklHX05FV19MRURTIGlzIG5vdCBzZXQNCg0KIw0KIyBMRUQgZHJpdmVycw0KIw0KDQojDQoj
IExFRCBUcmlnZ2Vycw0KIw0KDQojDQojIEluZmluaUJhbmQgc3VwcG9ydA0KIw0KDQojDQojIEVE
QUMgLSBlcnJvciBkZXRlY3Rpb24gYW5kIHJlcG9ydGluZyAoUkFTKSAoRVhQRVJJTUVOVEFMKQ0K
Iw0KDQojDQojIFJlYWwgVGltZSBDbG9jaw0KIw0KIyBDT05GSUdfUlRDX0NMQVNTIGlzIG5vdCBz
ZXQNCg0KIw0KIyBUYW5nbzIgZGV2aWNlcw0KIw0KIyBDT05GSUdfVEFOR08yX0ZJUCBpcyBub3Qg
c2V0DQojIENPTkZJR19UQU5HTzJfR1BJTyBpcyBub3Qgc2V0DQojIENPTkZJR19UQU5HTzJfSVIg
aXMgbm90IHNldA0KDQojDQojIERNQSBFbmdpbmUgc3VwcG9ydA0KIw0KIyBDT05GSUdfRE1BX0VO
R0lORSBpcyBub3Qgc2V0DQoNCiMNCiMgRE1BIENsaWVudHMNCiMNCg0KIw0KIyBETUEgRGV2aWNl
cw0KIw0KDQojDQojIFZpcnR1YWxpemF0aW9uDQojDQoNCiMNCiMgRmlsZSBzeXN0ZW1zDQojDQoj
IENPTkZJR19JTk9USUZZIGlzIG5vdCBzZXQNCiMgQ09ORklHX1FVT1RBIGlzIG5vdCBzZXQNCiMg
Q09ORklHX0ROT1RJRlkgaXMgbm90IHNldA0KIyBDT05GSUdfQVVUT0ZTX0ZTIGlzIG5vdCBzZXQN
CiMgQ09ORklHX0FVVE9GUzRfRlMgaXMgbm90IHNldA0KIyBDT05GSUdfRlVTRV9GUyBpcyBub3Qg
c2V0DQoNCiMNCiMgUHNldWRvIGZpbGVzeXN0ZW1zDQojDQpDT05GSUdfUFJPQ19GUz15DQojIENP
TkZJR19QUk9DX0tDT1JFIGlzIG5vdCBzZXQNCkNPTkZJR19QUk9DX1NZU0NUTD15DQpDT05GSUdf
U1lTRlM9eQ0KQ09ORklHX1RNUEZTPXkNCiMgQ09ORklHX1RNUEZTX1BPU0lYX0FDTCBpcyBub3Qg
c2V0DQojIENPTkZJR19IVUdFVExCX1BBR0UgaXMgbm90IHNldA0KQ09ORklHX1JBTUZTPXkNCiMg
Q09ORklHX0NPTkZJR0ZTX0ZTIGlzIG5vdCBzZXQNCiMgQ09ORklHX0NUTVBfRlMgaXMgbm90IHNl
dA0KDQojDQojIE1pc2NlbGxhbmVvdXMgZmlsZXN5c3RlbXMNCiMNCiMgQ09ORklHX1NRVUFTSEZT
IGlzIG5vdCBzZXQNCg0KIw0KIyBOYXRpdmUgTGFuZ3VhZ2UgU3VwcG9ydA0KIw0KQ09ORklHX05M
Uz15DQpDT05GSUdfTkxTX0RFRkFVTFQ9Imlzbzg4NTktMSINCkNPTkZJR19OTFNfQ09ERVBBR0Vf
NDM3PXkNCiMgQ09ORklHX05MU19DT0RFUEFHRV83MzcgaXMgbm90IHNldA0KIyBDT05GSUdfTkxT
X0NPREVQQUdFXzc3NSBpcyBub3Qgc2V0DQpDT05GSUdfTkxTX0NPREVQQUdFXzg1MD15DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfODUyIGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19DT0RFUEFHRV84
NTUgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzg1NyBpcyBub3Qgc2V0DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfODYwIGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19DT0RFUEFHRV84
NjEgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzg2MiBpcyBub3Qgc2V0DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfODYzIGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19DT0RFUEFHRV84
NjQgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzg2NSBpcyBub3Qgc2V0DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfODY2IGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19DT0RFUEFHRV84
NjkgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzkzNiBpcyBub3Qgc2V0DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfOTUwIGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19DT0RFUEFHRV85
MzIgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzk0OSBpcyBub3Qgc2V0DQojIENP
TkZJR19OTFNfQ09ERVBBR0VfODc0IGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19JU084ODU5Xzgg
aXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0NPREVQQUdFXzEyNTAgaXMgbm90IHNldA0KIyBDT05G
SUdfTkxTX0NPREVQQUdFXzEyNTEgaXMgbm90IHNldA0KQ09ORklHX05MU19BU0NJST15DQpDT05G
SUdfTkxTX0lTTzg4NTlfMT15DQojIENPTkZJR19OTFNfSVNPODg1OV8yIGlzIG5vdCBzZXQNCiMg
Q09ORklHX05MU19JU084ODU5XzMgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0lTTzg4NTlfNCBp
cyBub3Qgc2V0DQojIENPTkZJR19OTFNfSVNPODg1OV81IGlzIG5vdCBzZXQNCiMgQ09ORklHX05M
U19JU084ODU5XzYgaXMgbm90IHNldA0KIyBDT05GSUdfTkxTX0lTTzg4NTlfNyBpcyBub3Qgc2V0
DQojIENPTkZJR19OTFNfSVNPODg1OV85IGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19JU084ODU5
XzEzIGlzIG5vdCBzZXQNCiMgQ09ORklHX05MU19JU084ODU5XzE0IGlzIG5vdCBzZXQNCkNPTkZJ
R19OTFNfSVNPODg1OV8xNT15DQojIENPTkZJR19OTFNfS09JOF9SIGlzIG5vdCBzZXQNCiMgQ09O
RklHX05MU19LT0k4X1UgaXMgbm90IHNldA0KQ09ORklHX05MU19VVEY4PXkNCg0KIw0KIyBQcm9m
aWxpbmcgc3VwcG9ydA0KIw0KIyBDT05GSUdfUFJPRklMSU5HIGlzIG5vdCBzZXQNCg0KIw0KIyBL
ZXJuZWwgaGFja2luZw0KIw0KQ09ORklHX1RSQUNFX0lSUUZMQUdTX1NVUFBPUlQ9eQ0KIyBDT05G
SUdfUFJJTlRLX1RJTUUgaXMgbm90IHNldA0KQ09ORklHX0VOQUJMRV9NVVNUX0NIRUNLPXkNCiMg
Q09ORklHX01BR0lDX1NZU1JRIGlzIG5vdCBzZXQNCiMgQ09ORklHX1VOVVNFRF9TWU1CT0xTIGlz
IG5vdCBzZXQNCiMgQ09ORklHX0RFQlVHX0ZTIGlzIG5vdCBzZXQNCiMgQ09ORklHX0hFQURFUlNf
Q0hFQ0sgaXMgbm90IHNldA0KQ09ORklHX0RFQlVHX0tFUk5FTD15DQpDT05GSUdfTE9HX0JVRl9T
SElGVD0xNA0KQ09ORklHX0RFVEVDVF9TT0ZUTE9DS1VQPXkNCiMgQ09ORklHX1NDSEVEU1RBVFMg
aXMgbm90IHNldA0KIyBDT05GSUdfREVCVUdfU0xBQiBpcyBub3Qgc2V0DQojIENPTkZJR19ERUJV
R19TUElOTE9DSyBpcyBub3Qgc2V0DQojIENPTkZJR19ERUJVR19NVVRFWEVTIGlzIG5vdCBzZXQN
CiMgQ09ORklHX0RFQlVHX1JXU0VNUyBpcyBub3Qgc2V0DQojIENPTkZJR19ERUJVR19MT0NLX0FM
TE9DIGlzIG5vdCBzZXQNCiMgQ09ORklHX1BST1ZFX0xPQ0tJTkcgaXMgbm90IHNldA0KIyBDT05G
SUdfREVCVUdfU1BJTkxPQ0tfU0xFRVAgaXMgbm90IHNldA0KIyBDT05GSUdfREVCVUdfTE9DS0lO
R19BUElfU0VMRlRFU1RTIGlzIG5vdCBzZXQNCiMgQ09ORklHX0RFQlVHX0tPQkpFQ1QgaXMgbm90
IHNldA0KIyBDT05GSUdfREVCVUdfSU5GTyBpcyBub3Qgc2V0DQojIENPTkZJR19ERUJVR19WTSBp
cyBub3Qgc2V0DQojIENPTkZJR19ERUJVR19MSVNUIGlzIG5vdCBzZXQNCkNPTkZJR19GT1JDRURf
SU5MSU5JTkc9eQ0KIyBDT05GSUdfUkNVX1RPUlRVUkVfVEVTVCBpcyBub3Qgc2V0DQpDT05GSUdf
Q1JPU1NDT01QSUxFPXkNCkNPTkZJR19DTURMSU5FPSJjb25zb2xlPXR0eVMwIHJvb3Q9L2Rldi9u
ZnMgaXA9ZGhjcCINCiMgQ09ORklHX0RFQlVHX1NUQUNLX1VTQUdFIGlzIG5vdCBzZXQNCiMgQ09O
RklHX0tHREIgaXMgbm90IHNldA0KQ09ORklHX1JVTlRJTUVfREVCVUc9eQ0KIyBDT05GSUdfTUlQ
U19VTkNBQ0hFRCBpcyBub3Qgc2V0DQoNCiMNCiMgU2VjdXJpdHkgb3B0aW9ucw0KIw0KIyBDT05G
SUdfS0VZUyBpcyBub3Qgc2V0DQojIENPTkZJR19TRUNVUklUWSBpcyBub3Qgc2V0DQoNCiMNCiMg
Q3J5cHRvZ3JhcGhpYyBvcHRpb25zDQojDQojIENPTkZJR19DUllQVE8gaXMgbm90IHNldA0KDQoj
DQojIExpYnJhcnkgcm91dGluZXMNCiMNCkNPTkZJR19CSVRSRVZFUlNFPXkNCiMgQ09ORklHX0NS
Q19DQ0lUVCBpcyBub3Qgc2V0DQojIENPTkZJR19DUkMxNiBpcyBub3Qgc2V0DQpDT05GSUdfQ1JD
MzI9eQ0KIyBDT05GSUdfTElCQ1JDMzJDIGlzIG5vdCBzZXQNCkNPTkZJR19JT01BUF9DT1BZPXkN
Cm==


--=-7g/3cxzQffsJDqhryWgC
Content-Disposition: attachment; filename=dmesg.txt
Content-Type: text/plain; name=dmesg.txt; charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64

TGludXggdmVyc2lvbiAyLjYuMjAgKG1heEBzYWt1cmEpIChnY2MgdmVyc2lvbiA0LjEuMikgIzQw
IE1vbiBNYXIgNSAxNzoxNTo1NyBDRVQgMjAwNw0KcHJvbSBjb25zb2xlIHJlZ2lzdGVyZWQNCkNQ
VSByZXZpc2lvbiBpczogMDAwMTkwNjgNCkRldGVybWluZWQgcGh5c2ljYWwgUkFNIG1hcDoNCiBt
ZW1vcnk6IDAyMDAwMDAwIEAgMTAwMDAwMDAgKHVzYWJsZSkNCkRFQlVHOiByZXNlcnZlZF9lbmQ6
IDB4MDAwMjAxZDUNCkRFQlVHOiBpbml0X2Jvb3RtZW1fbm9kZTogbWFwc3RhcnQ6MHhmZmZmZmZm
ZiBtaW5fbG93X3BmbjoweDAwMDEwMDAwIG1heF9sb3dfcGZuOjB4MDAwMTIwMDANCg==


--=-7g/3cxzQffsJDqhryWgC
Content-Disposition: attachment; filename=dmesg-manual-reserved_end.txt
Content-Type: text/plain; name=dmesg-manual-reserved_end.txt; charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64

TGludXggdmVyc2lvbiAyLjYuMjAgKG1heEBzYWt1cmEpIChnY2MgdmVyc2lvbiA0LjEuMikgIzQx
IE1vbiBNYXIgNSAxNzoxODowNCBDRVQgMjAwNw0KcHJvbSBjb25zb2xlIHJlZ2lzdGVyZWQNCkNQ
VSByZXZpc2lvbiBpczogMDAwMTkwNjgNCkRldGVybWluZWQgcGh5c2ljYWwgUkFNIG1hcDoNCiBt
ZW1vcnk6IDAyMDAwMDAwIEAgMTAwMDAwMDAgKHVzYWJsZSkNCkRFQlVHOiByZXNlcnZlZF9lbmQ6
IDB4MDAwMTAxZDUNCkRFQlVHOiBpbml0X2Jvb3RtZW1fbm9kZTogbWFwc3RhcnQ6MHgwMDAxMDFk
NSBtaW5fbG93X3BmbjoweDAwMDEwMDAwIG1heF9sb3dfcGZuOjB4MDAwMTIwMDANCk9uIG5vZGUg
MCB0b3RhbHBhZ2VzOiA4MTkyDQogIERNQSB6b25lOiA2NCBwYWdlcyB1c2VkIGZvciBtZW1tYXAN
CiAgRE1BIHpvbmU6IDAgcGFnZXMgcmVzZXJ2ZWQNCiAgRE1BIHpvbmU6IDgxMjggcGFnZXMsIExJ
Rk8gYmF0Y2g6MA0KICBOb3JtYWwgem9uZTogMCBwYWdlcyB1c2VkIGZvciBtZW1tYXANCkJ1aWx0
IDEgem9uZWxpc3RzLiAgVG90YWwgcGFnZXM6IDgxMjgNCktlcm5lbCBjb21tYW5kIGxpbmU6IGNv
bnNvbGU9dHR5UzAgcm9vdD0vZGV2L25mcyBpcD1kaGNwDQpQcmltYXJ5IGluc3RydWN0aW9uIGNh
Y2hlIDE2a0IsIHBoeXNpY2FsbHkgdGFnZ2VkLCAyLXdheSwgbGluZXNpemUgMTYgYnl0ZXMuDQpQ
cmltYXJ5IGRhdGEgY2FjaGUgMTZrQiwgMi13YXksIGxpbmVzaXplIDE2IGJ5dGVzLg0KU3ludGhl
c2l6ZWQgVExCIHJlZmlsbCBoYW5kbGVyICgyMCBpbnN0cnVjdGlvbnMpLg0KU3ludGhlc2l6ZWQg
VExCIGxvYWQgaGFuZGxlciBmYXN0cGF0aCAoMzIgaW5zdHJ1Y3Rpb25zKS4NClN5bnRoZXNpemVk
IFRMQiBzdG9yZSBoYW5kbGVyIGZhc3RwYXRoICgzMiBpbnN0cnVjdGlvbnMpLg0KU3ludGhlc2l6
ZWQgVExCIG1vZGlmeSBoYW5kbGVyIGZhc3RwYXRoICgzMSBpbnN0cnVjdGlvbnMpLg0KUElEIGhh
c2ggdGFibGUgZW50cmllczogMTI4IChvcmRlcjogNywgNTEyIGJ5dGVzKQ0KVXNpbmcgMTUwLjc1
MCBNSHogaGlnaCBwcmVjaXNpb24gdGltZXIuDQpEZW50cnkgY2FjaGUgaGFzaCB0YWJsZSBlbnRy
aWVzOiA0MDk2IChvcmRlcjogMiwgMTYzODQgYnl0ZXMpDQpJbm9kZS1jYWNoZSBoYXNoIHRhYmxl
IGVudHJpZXM6IDIwNDggKG9yZGVyOiAxLCA4MTkyIGJ5dGVzKQ0KQmFkIHBhZ2Ugc3RhdGUgaW4g
cHJvY2VzcyAnc3dhcHBlcicNCnBhZ2U6ODEwMDAwMDAgZmxhZ3M6MHgwMDAwMDAwMCBtYXBwaW5n
OjAwMDAwMDAwIG1hcGNvdW50OjEgY291bnQ6MA0KVHJ5aW5nIHRvIGZpeCBpdCB1cCwgYnV0IGEg
cmVib290IGlzIG5lZWRlZA0KQmFja3RyYWNlOg0KQ2FsbCBUcmFjZToNCls8OTAwMjlmMTA+XSBk
dW1wX3N0YWNrKzB4OC8weDM0DQpbPDkwMDZhYzU4Pl0gYmFkX3BhZ2UrMHg2OC8weGE4DQpbPDkw
MDZiMGE0Pl0gX19mcmVlX3BhZ2VzX29rKzB4MzU4LzB4MzdjDQpbPDkwMTNkMmQwPl0gZnJlZV9h
bGxfYm9vdG1lbV9jb3JlKzB4MjRjLzB4MjcwDQpbPDkwMTM0ZThjPl0gbWVtX2luaXQrMHg0MC8w
eDE5Yw0KWzw5MDEyZDgyOD5dIHN0YXJ0X2tlcm5lbCsweDFkNC8weDM2Yw0KDQpCYWQgcGFnZSBz
dGF0ZSBpbiBwcm9jZXNzICdzd2FwcGVyJw0KcGFnZTo4MTAwMDAyMCBmbGFnczoweDAwMDAwMDAw
IG1hcHBpbmc6MDAwMDAwMDAgbWFwY291bnQ6MSBjb3VudDowDQpUcnlpbmcgdG8gZml4IGl0IHVw
LCBidXQgYSByZWJvb3QgaXMgbmVlZGVkDQpCYWNrdHJhY2U6DQpDYWxsIFRyYWNlOg0KWzw5MDAy
OWYxMD5dIGR1bXBfc3RhY2srMHg4LzB4MzQNCls8OTAwNmFjNTg+XSBiYWRfcGFnZSsweDY4LzB4
YTgNCls8OTAwNmIwYTQ+XSBfX2ZyZWVfcGFnZXNfb2srMHgzNTgvMHgzN2MNCls8OTAxM2QyZDA+
XSBmcmVlX2FsbF9ib290bWVtX2NvcmUrMHgyNGMvMHgyNzANCls8OTAxMzRlOGM+XSBtZW1faW5p
dCsweDQwLzB4MTljDQpbPDkwMTJkODI4Pl0gc3RhcnRfa2VybmVsKzB4MWQ0LzB4MzZjDQo=


--=-7g/3cxzQffsJDqhryWgC--
